=== Log initialised at 2020-01-04 22:36:15.206732 ===

2020-01-04 22:36:15.206462  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.206787  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.206860  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.206909  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.206952  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.206993  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207030  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:15.207070  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207110  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207151  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207190  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207232  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207271  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207308  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207347  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207387  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.207424  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:15.207511  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:15.208017  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:15.208100  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.208144  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:15.208205  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.208263  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:15.208295  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208321  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.208347  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208372  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208397  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.208422  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:15.208447  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:15.208472  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208497  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208522  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208547  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208572  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208597  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:15.208622  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:15.208660  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:15.208697  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.208730  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.208761  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.208787  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:15.208869  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:15.208948  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.209003  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:15.209081  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.209129  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.209179  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:15.209210  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:15.209254  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:15.209329  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.209407  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.209449  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:15.209487  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:15.209522  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:15.209553  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.209599  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:15.209632  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.209690  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.209726  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:15.209788  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.209825  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:15.209884  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.209916  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:15.209948  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.209981  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.210014  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.210049  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.210308  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.210358  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.210390  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:15.210427  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:15.210463  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.210498  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:15.210534  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.210568  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:15.210604  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.210638  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.210694  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.210729  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.210760  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.210785  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:15.210833  level_8_layers_main.  0424: max_pooling1d                     -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCW, uid = None
2020-01-04 22:36:15.210902  level_8_layers_main.  0424: max_pooling1d                     <- EXIT : {'uid': None, 'name': 'max_pooling1d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCW'}}
2020-01-04 22:36:15.210984  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'max_pooling1d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:15.211076  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:15.232892  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:15.233067  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.233140  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.233191  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.233233  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.233707  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.233755  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.233832  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:15.233906  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:15.233945  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.233984  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:15.234032  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.234068  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:15.234155  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.234212  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.234438  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.234479  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.234548  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'max_pooling1d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCW'}}
2020-01-04 22:36:15.234641  layers.py             0437: custom_model_layer_max_pooling1d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCW'}
2020-01-04 22:36:15.234778  layers.py             0437: custom_model_layer_max_pooling1d  <- EXIT : ---
2020-01-04 22:36:15.234832  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool1D(size=(2,), stride=(2,), padding=(0,), ceil_mode=False, global_pool=False, pool_type=max, layout=NCW)
2020-01-04 22:36:15.234909  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:15.234952  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:15.235005  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:15.235087  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:15.453874  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:15.453975  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:15.475919  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:15.476098  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:15.476154  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.476195  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:15.476359  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:15.476451  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:15.476496  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.476534  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:15.476577  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.476613  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:15.476653  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.476686  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.476716  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.476747  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:15.476790  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:15.478963  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479090  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479155  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479238  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479293  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479344  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479390  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:15.479442  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479704  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479760  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479805  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479848  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479895  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479939  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.479981  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.480025  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.480072  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:15.480169  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:15.480701  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:15.480762  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.480799  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:15.480839  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.480896  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:15.480926  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:15.480953  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.480978  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481004  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481033  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.481059  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:15.481084  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:15.481109  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481134  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481159  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481184  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481209  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481234  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:15.481259  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:15.481299  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:15.481350  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.481397  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.481442  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.481481  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:15.481597  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:15.481684  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.481737  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:15.481796  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.481835  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.481887  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:15.481917  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:15.481963  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:15.482036  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.482098  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.482136  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:15.482173  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:15.482206  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:15.482239  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.482591  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:15.482636  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.482716  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.482758  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:15.482829  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.482865  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:15.482926  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.482957  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:15.482990  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.483025  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.483060  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.483097  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.483441  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.483486  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.483518  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:15.483555  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:15.483591  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.483626  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:15.483663  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.483697  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:15.483734  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.483767  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.483821  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.483854  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.483884  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.483911  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:15.483966  level_8_layers_main.  0452: max_pooling2d                     -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = None
2020-01-04 22:36:15.484037  level_8_layers_main.  0452: max_pooling2d                     <- EXIT : {'uid': None, 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:15.484121  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:15.484301  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:15.506824  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:15.507007  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.507085  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.507146  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.507195  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.507679  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.507728  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.507807  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:15.507866  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:15.507905  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.507944  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:15.507981  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.508017  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:15.508110  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.508155  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.508328  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.508367  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.508420  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:15.508517  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:36:15.508666  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:36:15.508721  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:36:15.508801  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:15.508845  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:15.508901  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:15.508992  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:15.655566  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:15.655669  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:15.677662  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:15.677839  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:15.677897  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.677938  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:15.678099  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:15.678190  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:15.678234  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.678273  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:15.678316  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.678402  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:15.678462  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.678497  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.678528  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.678560  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:15.678601  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:15.680259  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680357  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680418  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680471  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680523  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680577  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680624  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:15.680676  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680727  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680774  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680818  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680861  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680903  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680945  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.680991  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.681037  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.681081  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:15.681179  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:15.681682  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:15.681745  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.681782  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:15.681821  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.681874  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:15.681904  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:15.681931  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.681956  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:15.681982  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:15.682007  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.682031  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:15.682056  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:15.682081  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:15.682106  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:15.682130  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.682155  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.682179  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:15.682203  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:15.682228  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:15.682266  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:15.682302  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.682379  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.682425  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.682451  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:15.682566  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:15.682653  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.682707  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:15.682766  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.682804  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.682854  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:15.682885  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:15.682934  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:15.683007  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.683068  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.683107  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:15.683145  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:15.683179  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:15.683211  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.683387  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:15.683429  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.683511  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.683548  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:15.683643  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.683678  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:15.683739  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.683771  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:15.683803  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.683838  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.683874  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.683912  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.684299  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.684346  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.684378  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:15.684441  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:15.684480  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.684515  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:15.684555  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.684591  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:15.684627  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.684661  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.684715  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.684750  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.684781  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.684807  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:15.684863  level_8_layers_main.  0506: max_pooling3d                     -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCDHW, uid = None
2020-01-04 22:36:15.684935  level_8_layers_main.  0506: max_pooling3d                     <- EXIT : {'uid': None, 'name': 'max_pooling3d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCDHW'}}
2020-01-04 22:36:15.685021  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'max_pooling3d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCDHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:15.685115  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:15.707777  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:15.707967  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.708049  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.708103  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.708146  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.708623  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.708671  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.708748  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:15.708808  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:15.708848  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.708887  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:15.708924  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.708960  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:15.709054  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.709096  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.709264  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.709302  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.709354  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'max_pooling3d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCDHW'}}
2020-01-04 22:36:15.709454  layers.py             0459: custom_model_layer_max_pooling3d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCDHW'}
2020-01-04 22:36:15.709605  layers.py             0459: custom_model_layer_max_pooling3d  <- EXIT : ---
2020-01-04 22:36:15.709658  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool3D(size=(2, 2, 2), stride=(2, 2, 2), padding=(0, 0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCDHW)
2020-01-04 22:36:15.709742  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:15.709786  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:15.709841  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:15.709932  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:15.859955  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:15.860055  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:15.882418  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:15.882599  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:15.882656  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.882696  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:15.882856  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:15.882948  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:15.882993  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.883032  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:15.883075  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.883110  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:15.883150  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.883184  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.883214  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.883248  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:15.883290  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:15.885414  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885509  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885569  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885622  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885676  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885730  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885776  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:15.885830  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885879  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885926  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.885968  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.886018  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.886063  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.886109  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.886149  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.886195  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:15.886235  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:15.886363  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:15.886896  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:15.886956  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.886996  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:15.887040  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.887091  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:15.887121  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887147  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.887172  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887197  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887221  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:15.887246  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:15.887271  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:15.887295  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887320  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887344  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887368  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887392  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887416  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:15.887442  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:15.887479  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:15.887516  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.887549  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.887579  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.887605  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:15.887719  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:15.887804  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.887856  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:15.887918  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.887957  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:15.888007  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:15.888038  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:15.888084  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:15.888199  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.888265  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.888306  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:15.888346  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:15.888387  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:15.888422  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.888602  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:15.888646  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:15.888731  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.888771  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:15.888839  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.888876  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:15.888940  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:15.888973  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:15.889007  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.889043  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.889081  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.889120  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.889482  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.889530  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.889589  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:15.889632  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:15.889670  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.889707  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:15.889745  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.889780  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:15.889817  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.889852  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:15.889908  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.889943  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:15.889975  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.890002  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:15.890067  level_8_layers_main.  0537: average_pooling1d                 -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, include_padding_in_calculation = True, layout = NCW, uid = None
2020-01-04 22:36:15.890151  level_8_layers_main.  0537: average_pooling1d                 <- EXIT : {'uid': None, 'name': 'average_pooling1d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCW'}}
2020-01-04 22:36:15.890246  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'average_pooling1d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:15.890388  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:15.912486  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:15.912670  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:15.912754  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:15.912810  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:15.912858  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:15.913341  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:15.913390  common.py             0083: save                              <- EXIT
2020-01-04 22:36:15.913444  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:15.913504  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:15.913543  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.913581  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:15.913618  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:15.913654  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:15.913742  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.913784  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.913954  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:15.913992  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:15.914047  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'average_pooling1d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCW'}}
2020-01-04 22:36:15.914147  layers.py             0470: custom_model_layer_average_pooli  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCW'}
2020-01-04 22:36:15.914293  layers.py             0470: custom_model_layer_average_pooli  <- EXIT : ---
2020-01-04 22:36:15.914380  layers.py             0206: custom_model_get_layer            <- EXIT : AvgPool1D(size=(2,), stride=(2,), padding=(0,), ceil_mode=False, global_pool=False, pool_type=avg, layout=NCW)
2020-01-04 22:36:15.914472  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:15.914514  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:15.914570  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:15.914657  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:16.069301  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:16.069415  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:16.091567  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:16.091751  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:16.091809  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.091857  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:16.092017  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:16.092150  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:16.092207  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.092246  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:16.092289  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.092325  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:16.092366  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.092399  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.092429  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.092460  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:16.092503  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:16.094212  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094317  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094422  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094480  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094534  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094588  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094635  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:16.094690  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094742  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094791  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094852  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094926  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.094987  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.095032  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.095077  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.095123  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.095168  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:16.095272  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:16.095790  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:16.095854  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.095893  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:16.095933  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.095988  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:16.096019  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096045  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.096071  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096096  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096122  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.096148  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:16.096174  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:16.096200  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096226  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096252  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096277  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096303  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096328  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:16.096354  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:16.096397  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:16.096435  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.096469  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.096501  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.096527  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:16.096643  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:16.096727  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.096780  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:16.096840  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.096880  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.096932  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:16.096963  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:16.097013  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:16.097087  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.097149  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.097189  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:16.097227  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:16.097264  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:16.097298  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.097496  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:16.097567  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.097664  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.097703  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:16.097769  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.097807  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:16.097869  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.097901  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:16.097934  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.097970  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.098006  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.098047  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.098564  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.098613  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.098647  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:16.098686  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:16.098723  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.098760  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:16.098798  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.098833  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:16.098871  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.098905  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.098960  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.098995  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.099026  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.099053  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:16.099112  level_8_layers_main.  0568: average_pooling2d                 -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, include_padding_in_calculation = True, layout = NCHW, uid = None
2020-01-04 22:36:16.099192  level_8_layers_main.  0568: average_pooling2d                 <- EXIT : {'uid': None, 'name': 'average_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCHW'}}
2020-01-04 22:36:16.099286  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'average_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:16.099389  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:16.121947  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:16.122135  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.122216  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.122275  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.122328  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.122855  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.122904  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.122981  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:16.123043  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:16.123082  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.123120  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:16.123161  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.123198  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:16.123286  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.123329  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.123496  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.123537  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.123596  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'average_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCHW'}}
2020-01-04 22:36:16.123697  layers.py             0482: custom_model_layer_average_pooli  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCHW'}
2020-01-04 22:36:16.123852  layers.py             0482: custom_model_layer_average_pooli  <- EXIT : ---
2020-01-04 22:36:16.123905  layers.py             0206: custom_model_get_layer            <- EXIT : AvgPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=avg, layout=NCHW)
2020-01-04 22:36:16.123985  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:16.124032  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:16.124088  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:16.124181  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:16.279870  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:16.279972  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:16.302107  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:16.302288  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:16.302400  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.302442  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:16.302599  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:16.302691  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:16.302735  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.302774  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:16.302817  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.302852  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:16.302891  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.302925  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.302955  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.302988  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:16.303033  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:16.304735  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.304831  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.304898  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.304953  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305006  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305055  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305101  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:16.305151  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305200  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305246  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305289  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305331  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305374  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305420  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305461  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305506  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.305547  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:16.305644  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:16.306143  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:16.306204  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.306241  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:16.306281  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.306341  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:16.306412  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306438  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.306463  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306488  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306512  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.306538  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:16.306563  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:16.306587  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306612  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306636  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306660  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306684  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306709  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:16.306734  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:16.306772  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:16.306807  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.306841  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.306870  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.306896  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:16.307008  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:16.307090  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.307143  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:16.307202  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.307240  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.307290  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:16.307324  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:16.307373  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:16.307445  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.307506  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.307544  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:16.307581  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:16.307618  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:16.307651  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.307830  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:16.307872  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.307953  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.307991  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:16.308055  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.308091  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:16.308151  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.308182  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:16.308215  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.308249  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.308284  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.308321  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.308670  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.308716  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.308769  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:16.308811  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:16.308848  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.308884  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:16.308921  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.308955  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:16.308991  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.309025  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.309080  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.309117  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.309148  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.309174  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:16.309232  level_8_layers_main.  0630: average_pooling3d                 -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, include_padding_in_calculation = True, layout = NCDHW, uid = None
2020-01-04 22:36:16.309312  level_8_layers_main.  0630: average_pooling3d                 <- EXIT : {'uid': None, 'name': 'average_pooling3d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCDHW'}}
2020-01-04 22:36:16.309403  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'average_pooling3d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCDHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:16.309503  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:16.331105  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:16.331292  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.331377  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.331443  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.331490  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.331973  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.332021  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.332101  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:16.332163  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:16.332202  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.332241  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:16.332278  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.332315  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:16.332407  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.332450  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.332618  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.332658  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.332716  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'average_pooling3d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCDHW'}}
2020-01-04 22:36:16.332817  layers.py             0494: custom_model_layer_average_pooli  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'include_padding_in_calculation': True, 'layout': 'NCDHW'}
2020-01-04 22:36:16.332964  layers.py             0494: custom_model_layer_average_pooli  <- EXIT : ---
2020-01-04 22:36:16.333018  layers.py             0206: custom_model_get_layer            <- EXIT : AvgPool3D(size=(2, 2, 2), stride=(2, 2, 2), padding=(0, 0, 0), ceil_mode=False, global_pool=False, pool_type=avg, layout=NCDHW)
2020-01-04 22:36:16.333106  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:16.333150  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:16.333205  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:16.333295  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:16.492088  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:16.492188  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:16.514615  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:16.514798  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:16.514858  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.514899  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:16.515060  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:16.515153  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:16.515198  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.515237  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:16.515279  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.515314  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:16.515353  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.515387  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.515417  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.515450  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:16.515489  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:16.517627  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.517726  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.517784  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.517836  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.517888  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.517937  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.517983  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:16.518034  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518082  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518130  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518171  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518216  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518265  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518310  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518396  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518441  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.518488  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:16.518587  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:16.519080  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:16.519140  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.519177  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:16.519218  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.519269  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:16.519300  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519326  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.519366  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519404  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519447  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.519501  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:16.519539  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:16.519564  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519589  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519613  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519638  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519663  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519687  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:16.519712  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:16.519750  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:16.519787  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.519821  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.519851  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.519877  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:16.519987  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:16.520071  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.520124  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:16.520182  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.520221  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.520271  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:16.520302  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:16.520349  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:16.520422  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.520483  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.520521  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:16.520559  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:16.520596  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:16.520628  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.520800  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:16.520843  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.520929  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.520967  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:16.521032  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.521068  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:16.521129  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.521160  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:16.521193  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.521227  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.521263  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.521300  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.521645  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.521693  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.521745  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:16.521786  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:16.521824  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.521860  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:16.521898  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.521932  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:16.521970  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.522004  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.522059  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.522093  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.522124  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.522150  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:16.522199  level_8_layers_main.  0653: global_max_pooling1d              -> ENTRY: layout = NCW, uid = None
2020-01-04 22:36:16.522242  level_8_layers_main.  0653: global_max_pooling1d              <- EXIT : {'uid': None, 'name': 'global_max_pooling1d', 'params': {'layout': 'NCW'}}
2020-01-04 22:36:16.522304  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'global_max_pooling1d', 'params': {'layout': 'NCW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:16.522387  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:16.545133  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:16.545321  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.545403  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.545458  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.545506  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.545965  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.546016  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.546074  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:16.546132  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:16.546169  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.546206  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:16.546242  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.546279  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:16.546418  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.546461  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.546622  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.546659  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.546710  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'global_max_pooling1d', 'params': {'layout': 'NCW'}}
2020-01-04 22:36:16.546777  layers.py             0506: custom_model_layer_global_max_po  -> ENTRY: params = {'layout': 'NCW'}
2020-01-04 22:36:16.546891  layers.py             0506: custom_model_layer_global_max_po  <- EXIT : ---
2020-01-04 22:36:16.546941  layers.py             0206: custom_model_get_layer            <- EXIT : GlobalMaxPool1D(size=(1,), stride=(1,), padding=(0,), ceil_mode=True, global_pool=True, pool_type=max, layout=NCW)
2020-01-04 22:36:16.547017  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:16.547060  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:16.547112  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:16.547196  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:16.711807  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:16.711910  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:16.734144  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:16.734352  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:16.734437  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.734479  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:16.734637  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:16.734726  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:16.734770  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.734808  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:16.734851  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.734887  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:16.734927  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.734961  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.734991  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.735026  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:16.735077  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:16.736715  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.736798  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.736859  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.736913  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.736968  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737019  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737067  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:16.737119  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737170  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737218  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737261  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737309  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737353  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737398  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737442  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737488  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.737531  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:16.737629  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:16.738123  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:16.738186  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.738223  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:16.738264  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.738317  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:16.738376  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738404  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.738431  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738469  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738494  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.738520  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:16.738545  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:16.738570  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738595  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738620  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738645  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738670  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738695  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:16.738721  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:16.738759  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:16.738795  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.738830  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.738861  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.738888  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:16.739000  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:16.739085  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.739139  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:16.739199  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.739242  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.739293  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:16.739324  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:16.739371  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:16.739444  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.739505  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.739544  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:16.739582  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:16.739619  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:16.739652  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.739834  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:16.739877  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.739960  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.739997  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:16.740061  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.740112  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:16.740213  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.740245  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:16.740279  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.740314  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.740350  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.740387  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.740739  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.740786  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.740819  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:16.740857  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:16.740894  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.740929  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:16.740966  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.741001  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:16.741037  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.741071  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.741129  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.741164  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.741196  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.741223  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:16.741276  level_8_layers_main.  0669: global_max_pooling2d              -> ENTRY: layout = NCHW, uid = None
2020-01-04 22:36:16.741319  level_8_layers_main.  0669: global_max_pooling2d              <- EXIT : {'uid': None, 'name': 'global_max_pooling2d', 'params': {'layout': 'NCHW'}}
2020-01-04 22:36:16.741380  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'global_max_pooling2d', 'params': {'layout': 'NCHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:16.741455  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:16.763468  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:16.763646  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.763733  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.763819  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.763879  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.764358  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.764406  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.764460  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:16.764517  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:16.764556  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.764594  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:16.764630  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.764667  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:16.764752  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.764795  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.764958  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.764998  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.765050  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'global_max_pooling2d', 'params': {'layout': 'NCHW'}}
2020-01-04 22:36:16.765118  layers.py             0513: custom_model_layer_global_max_po  -> ENTRY: params = {'layout': 'NCHW'}
2020-01-04 22:36:16.765241  layers.py             0513: custom_model_layer_global_max_po  <- EXIT : ---
2020-01-04 22:36:16.765294  layers.py             0206: custom_model_get_layer            <- EXIT : GlobalMaxPool2D(size=(1, 1), stride=(1, 1), padding=(0, 0), ceil_mode=True, global_pool=True, pool_type=max, layout=NCHW)
2020-01-04 22:36:16.765375  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:16.765417  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:16.765470  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:16.765562  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:16.929890  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:16.929992  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:16.952378  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:16.952560  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:16.952618  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.952658  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:16.952816  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:16.952906  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:16.952951  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.952990  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:16.953033  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.953069  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:16.953109  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.953142  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.953173  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.953207  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:16.953249  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:16.954789  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.954888  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.954950  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955006  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955060  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955111  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955157  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:16.955209  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955262  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955307  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955351  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955394  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955444  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955488  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955531  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955577  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:16.955619  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:16.955718  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:16.956212  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:16.956274  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.956311  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:16.956351  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.956403  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:16.956433  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956459  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.956484  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956509  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956533  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:16.956558  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:16.956582  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:16.956606  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956634  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956660  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956684  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956708  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956733  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:16.956758  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:16.956795  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:16.956832  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.956865  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.956895  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.956921  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:16.957036  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:16.957119  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.957172  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:16.957231  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.957269  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:16.957319  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:16.957350  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:16.957398  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:16.957471  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.957532  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.957570  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:16.957608  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:16.957643  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:16.957676  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.957854  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:16.957896  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:16.957978  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.958015  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:16.958079  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.958115  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:16.958183  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:16.958215  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:16.958248  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.958283  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.958324  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.958384  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.958749  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.958795  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.958827  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:16.958865  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:16.958902  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.958937  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:16.958974  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.959008  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:16.959044  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.959078  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:16.959132  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.959166  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:16.959197  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.959223  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:16.959275  level_8_layers_main.  0702: global_max_pooling3d              -> ENTRY: layout = NCDHW, uid = None
2020-01-04 22:36:16.959319  level_8_layers_main.  0702: global_max_pooling3d              <- EXIT : {'uid': None, 'name': 'global_max_pooling3d', 'params': {'layout': 'NCDHW'}}
2020-01-04 22:36:16.959381  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'global_max_pooling3d', 'params': {'layout': 'NCDHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:16.959456  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:16.981067  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:16.981282  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:16.981366  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:16.981426  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:16.981471  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:16.981937  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:16.981986  common.py             0083: save                              <- EXIT
2020-01-04 22:36:16.982040  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:16.982098  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:16.982137  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.982179  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:16.982216  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:16.982254  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:16.982378  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.982450  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.982656  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:16.982697  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:16.982749  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'global_max_pooling3d', 'params': {'layout': 'NCDHW'}}
2020-01-04 22:36:16.982820  layers.py             0520: custom_model_layer_global_max_po  -> ENTRY: params = {'layout': 'NCDHW'}
2020-01-04 22:36:16.982946  layers.py             0520: custom_model_layer_global_max_po  <- EXIT : ---
2020-01-04 22:36:16.983002  layers.py             0206: custom_model_get_layer            <- EXIT : GlobalMaxPool3D(size=(1, 1, 1), stride=(1, 1, 1), padding=(0, 0, 0), ceil_mode=True, global_pool=True, pool_type=max, layout=NCDHW)
2020-01-04 22:36:16.983088  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:16.983131  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:16.983184  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:16.983547  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:17.152044  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:17.152146  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:17.174267  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:17.174503  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:17.174563  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.174604  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:17.174766  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:17.174856  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:17.174900  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.174939  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:17.174982  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.175018  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:17.175058  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.175092  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.175123  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.175156  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:17.175203  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:17.177320  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177416  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177480  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177542  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177597  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177647  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177693  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:17.177744  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177796  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177842  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177886  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177930  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.177976  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.178023  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.178065  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.178111  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.178153  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:17.178252  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:17.178807  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:17.178871  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.178909  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:17.178950  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.179003  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:17.179034  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179061  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.179086  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179112  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179138  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.179163  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:17.179187  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:17.179212  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179237  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179262  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179287  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179312  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179337  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:17.179363  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:17.179401  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:17.179438  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.179473  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.179503  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.179530  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:17.179644  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:17.179730  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.179783  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:17.179843  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.179882  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.179933  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:17.179964  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:17.180012  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:17.180089  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.180151  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.180190  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:17.180228  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:17.180266  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:17.180298  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.180477  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:17.180519  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.180603  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.180641  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:17.180705  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.180741  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:17.180802  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.180833  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:17.180866  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.180901  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.180936  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.180975  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.181515  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.181565  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.181599  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:17.181638  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:17.181676  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.181712  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:17.181749  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.181784  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:17.181821  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.181855  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.181909  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.181943  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.181974  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.182004  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:17.182058  level_8_layers_main.  0718: global_average_pooling1d          -> ENTRY: layout = NCW, uid = None
2020-01-04 22:36:17.182101  level_8_layers_main.  0718: global_average_pooling1d          <- EXIT : {'uid': None, 'name': 'global_average_pooling1d', 'params': {'layout': 'NCW'}}
2020-01-04 22:36:17.182164  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'global_average_pooling1d', 'params': {'layout': 'NCW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:17.182238  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:17.204765  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:17.204945  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.205054  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.205125  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.205171  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.205636  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.205683  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.205759  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:17.205819  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:17.205858  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.205896  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:17.205933  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.205970  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:17.206058  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:17.206100  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:17.206280  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:17.206325  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:17.206393  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'global_average_pooling1d', 'params': {'layout': 'NCW'}}
2020-01-04 22:36:17.206465  layers.py             0527: custom_model_layer_global_averag  -> ENTRY: params = {'layout': 'NCW'}
2020-01-04 22:36:17.206618  layers.py             0527: custom_model_layer_global_averag  <- EXIT : ---
2020-01-04 22:36:17.206670  layers.py             0206: custom_model_get_layer            <- EXIT : GlobalAvgPool1D(size=(1,), stride=(1,), padding=(0,), ceil_mode=True, global_pool=True, pool_type=avg, layout=NCW)
2020-01-04 22:36:17.206747  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:17.206804  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:17.206898  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:17.207041  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:17.378055  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:17.378156  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:17.400787  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:17.400970  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:17.401034  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.401075  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:17.401234  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:17.401323  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:17.401367  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.401406  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:17.401449  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.401484  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:17.401524  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.401558  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.401589  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.401621  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:17.401665  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:17.403194  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403291  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403355  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403410  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403464  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403516  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403563  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:17.403614  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403665  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403715  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403761  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403808  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403853  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403896  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.403942  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.404014  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.404070  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:17.404181  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:17.404698  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:17.404761  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.404799  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:17.404840  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.404921  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:17.404952  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:17.404978  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.405005  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405031  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405056  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.405082  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:17.405107  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:17.405147  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405186  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405211  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405236  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405262  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405288  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:17.405318  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:17.405360  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:17.405412  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.405473  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.405531  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.405597  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:17.405759  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:17.405860  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.405915  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:17.405975  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.406014  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.406066  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:17.406097  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:17.406146  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:17.406220  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.406297  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.406366  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:17.406420  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:17.406469  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:17.406516  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.406728  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:17.406783  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.406867  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.406905  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:17.406971  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.407008  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:17.407070  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.407101  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:17.407133  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.407167  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.407207  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.407245  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.407609  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.407656  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.407702  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:17.407755  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:17.407792  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.407827  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:17.407865  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.407899  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:17.407936  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.407970  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.408024  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.408058  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.408089  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.408116  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:17.408168  level_8_layers_main.  0734: global_average_pooling2d          -> ENTRY: layout = NCHW, uid = None
2020-01-04 22:36:17.408212  level_8_layers_main.  0734: global_average_pooling2d          <- EXIT : {'uid': None, 'name': 'global_average_pooling2d', 'params': {'layout': 'NCHW'}}
2020-01-04 22:36:17.408275  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'global_average_pooling2d', 'params': {'layout': 'NCHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:17.408347  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:17.430276  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:17.430518  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.430600  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.430657  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.430700  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.431221  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.431269  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.431322  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:17.431382  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:17.431420  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.431458  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:17.431494  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.431531  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:17.431617  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:17.431661  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:17.431825  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:17.431866  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:17.431920  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'global_average_pooling2d', 'params': {'layout': 'NCHW'}}
2020-01-04 22:36:17.431994  layers.py             0534: custom_model_layer_global_averag  -> ENTRY: params = {'layout': 'NCHW'}
2020-01-04 22:36:17.432113  layers.py             0534: custom_model_layer_global_averag  <- EXIT : ---
2020-01-04 22:36:17.432163  layers.py             0206: custom_model_get_layer            <- EXIT : GlobalAvgPool2D(size=(1, 1), stride=(1, 1), padding=(0, 0), ceil_mode=True, global_pool=True, pool_type=avg, layout=NCHW)
2020-01-04 22:36:17.432245  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:17.432288  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:17.432341  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:17.432428  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:17.603500  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:17.603600  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:17.625786  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:17.625971  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:17.626029  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.626070  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:17.626230  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:17.626351  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:17.626425  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.626465  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:17.626509  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.626545  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:17.626585  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.626633  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.626665  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.626703  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:17.626758  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:17.628437  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.628558  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.628620  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.628677  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.628732  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.628785  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.628831  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:17.628890  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.628973  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629041  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629087  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629145  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629194  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629237  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629281  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629328  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.629368  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:17.629467  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:17.629977  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:17.630039  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.630077  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:17.630116  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.630168  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:17.630199  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630226  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.630252  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630278  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630303  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.630358  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:17.630399  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:17.630424  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630450  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630476  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630502  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630528  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630554  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:17.630580  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:17.630619  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:17.630656  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.630689  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.630720  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.630747  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:17.630866  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:17.630951  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.631004  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:17.631064  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.631103  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.631152  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:17.631183  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:17.631232  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:17.631305  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.631370  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.631410  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:17.631449  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:17.631485  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:17.631517  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.631693  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:17.631736  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.631820  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.631858  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:17.631923  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.631960  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:17.632021  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.632053  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:17.632086  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.632121  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.632156  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.632194  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.632545  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.632591  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.632624  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:17.632663  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:17.632700  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.632736  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:17.632774  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.632809  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:17.632845  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.632880  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.632935  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.632969  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.633000  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.633027  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:17.633079  level_8_layers_main.  0766: global_average_pooling3d          -> ENTRY: layout = NCDHW, uid = None
2020-01-04 22:36:17.633123  level_8_layers_main.  0766: global_average_pooling3d          <- EXIT : {'uid': None, 'name': 'global_average_pooling3d', 'params': {'layout': 'NCDHW'}}
2020-01-04 22:36:17.633189  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'global_average_pooling3d', 'params': {'layout': 'NCDHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:17.633264  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:17.656009  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:17.656194  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.656277  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.656349  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.656407  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.656899  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.656946  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.657004  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:17.657063  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:17.657101  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.657138  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:17.657174  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.657211  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:17.657301  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:17.657341  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:17.657506  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:17.657545  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:17.657626  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'global_average_pooling3d', 'params': {'layout': 'NCDHW'}}
2020-01-04 22:36:17.657696  layers.py             0541: custom_model_layer_global_averag  -> ENTRY: params = {'layout': 'NCDHW'}
2020-01-04 22:36:17.657835  layers.py             0541: custom_model_layer_global_averag  <- EXIT : ---
2020-01-04 22:36:17.657900  layers.py             0206: custom_model_get_layer            <- EXIT : GlobalAvgPool3D(size=(1, 1, 1), stride=(1, 1, 1), padding=(0, 0, 0), ceil_mode=True, global_pool=True, pool_type=avg, layout=NCDHW)
2020-01-04 22:36:17.657987  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:17.658031  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:17.658100  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:17.658220  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:17.840153  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:17.840255  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:17.862516  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:17.862702  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:17.862762  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.862803  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:17.862964  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:17.863059  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:17.863109  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.863151  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:17.863194  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.863231  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:17.863271  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.863305  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.863336  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.863370  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:17.863415  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:17.865641  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.865740  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.865803  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.865858  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.865912  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.865966  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866012  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:17.866063  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866115  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866165  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866212  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866257  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866307  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866396  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866452  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866499  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:17.866540  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:17.866638  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:17.867148  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:17.867210  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.867248  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:17.867289  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.867341  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:17.867371  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867398  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.867423  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867449  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867474  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:17.867499  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:17.867525  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:17.867549  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867574  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867599  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867624  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867648  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867673  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:17.867700  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:17.867738  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:17.867775  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.867809  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.867844  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.867871  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:17.867988  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:17.868074  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.868128  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:17.868188  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.868227  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:17.868278  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:17.868309  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:17.868358  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:17.868432  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.868492  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.868530  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:17.868569  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:17.868604  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:17.868636  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.868811  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:17.868854  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:17.868937  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.868975  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:17.869040  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.869077  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:17.869137  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:17.869169  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:17.869202  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.869238  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.869275  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.869313  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.869658  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.869705  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.869742  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:17.869782  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:17.869819  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.869854  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:17.869892  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.869926  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:17.869962  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.869997  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:17.870051  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.870085  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.870116  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.870143  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:17.870230  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:17.870419  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:17.870511  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:17.870548  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:17.870585  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:17.870614  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:17.870647  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:17.870675  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:17.870708  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:17.870735  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:17.870788  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:17.870833  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:17.870869  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:17.870904  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.870939  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:17.870979  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871015  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:17.871050  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871085  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:17.871120  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871158  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:17.871195  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871228  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.871258  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871291  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:17.871324  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871357  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:17.871391  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871424  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:17.871458  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871493  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:17.871527  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871560  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:17.871593  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871631  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:17.871668  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871703  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.871733  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.871759  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:17.871812  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:17.871856  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:17.871983  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:17.872021  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:17.872077  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:17.872119  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:17.872410  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:17.872449  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:17.872488  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:17.872528  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:17.872570  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:17.872809  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:17.872859  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:17.927160  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:17.927381  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:17.927484  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:17.927581  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:17.927645  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:17.927698  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:17.928301  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:17.928351  common.py             0083: save                              <- EXIT
2020-01-04 22:36:17.928435  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:17.928502  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.928551  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:17.928610  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.928647  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.928679  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.928712  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:17.928749  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.928789  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:17.928843  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.928877  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.928908  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.928944  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:17.928977  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.929012  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:17.929047  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.929080  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:17.929115  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.929147  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:17.929181  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.929213  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.929243  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.929281  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:17.929368  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:17.929452  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:17.929498  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:17.929546  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:17.929579  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:17.929616  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:17.952278  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:17.952464  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:17.952513  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:17.952571  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:17.952622  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.952666  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:17.952706  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.952744  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:17.952779  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.952816  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:17.952852  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.952886  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:17.952922  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.952955  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:17.952985  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.953019  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:17.953078  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:17.953126  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:17.953171  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:17.953208  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.953247  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:17.953283  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:17.953323  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:17.953391  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:18.110749  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:18.115892  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:18.116012  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:18.116758  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:18.116845  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:20.132236  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:20.132410  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:20.132474  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.132517  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:20.135405  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:20.137699  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:20.137752  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.137797  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:20.137840  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.137878  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:20.137918  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.137959  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.137990  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.138021  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:20.138060  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:20.138112  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:20.138151  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:20.138189  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:20.138709  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:20.138758  common.py             0083: save                              <- EXIT
2020-01-04 22:36:20.138798  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:20.138895  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:20.138976  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:20.139020  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:20.139060  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:20.139093  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.139128  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:20.139161  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.139196  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:20.139231  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.139270  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:20.139327  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.139361  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.139391  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.139778  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.139851  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.139920  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.139971  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140011  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:20.140082  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:20.140143  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:20.140180  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:20.140218  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:20.140253  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140288  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:20.140321  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140361  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:20.140408  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140441  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.140471  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140496  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:20.140541  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:20.140610  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:20.140650  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:20.140690  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:20.140722  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140756  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:20.140789  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140826  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:20.140876  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140909  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.140938  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.140964  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:20.141061  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:20.141151  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:20.141185  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:20.141222  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:20.141251  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:20.141284  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:20.141310  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:20.141341  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:20.141368  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:20.141399  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:20.141427  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:20.141458  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:20.141485  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:20.141518  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:20.141550  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.141583  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:20.141616  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.141652  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.141682  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.141731  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:20.141776  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.141826  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:20.141861  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.141907  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:20.141942  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.141975  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:20.142009  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.142042  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:20.142077  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.142109  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:20.142146  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.142177  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.142206  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.142232  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:20.142263  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:20.142295  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:20.142332  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:20.142367  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:20.142735  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:20.142781  common.py             0083: save                              <- EXIT
2020-01-04 22:36:20.142821  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:20.142907  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0.9, weight_decay = 0.0001, momentum_dampening_rate = 0, clipnorm = 1.0, clipvalue = 0.5
2020-01-04 22:36:20.142977  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:20.143012  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:20.143050  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:20.143082  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143118  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:20.143150  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143185  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:20.143219  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143258  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0.9, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 1.0, 'clipvalue': 0.5}
2020-01-04 22:36:20.143313  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143346  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.143376  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143416  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.143446  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143479  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.143508  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143533  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:20.143567  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:20.143601  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:20.143636  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:20.143669  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.143699  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:20.143783  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:20.143820  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:20.143925  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:20.143967  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:20.144109  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:20.146629  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:20.146681  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.146723  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:20.146758  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.517211  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:20.664892  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.8), 15.35079159142333)
2020-01-04 22:36:20.873377  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:20.873529  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.873591  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.679, Train-loss: 1.289 | Val-acc: 0.800000, Val-loss: 1.023, | time: 0.7 sec
2020-01-04 22:36:20.873658  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.873698  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:20.873731  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.873771  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:20.873822  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:20.873862  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:20.873899  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:20.874415  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:20.874462  common.py             0083: save                              <- EXIT
2020-01-04 22:36:20.874507  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:20.874545  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:20.874581  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:20.874615  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.226225  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:21.366430  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.9), 6.5742943044351705)
2020-01-04 22:36:21.613786  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:21.613927  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.613986  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.871, Train-loss: 0.741 | Val-acc: 0.900000, Val-loss: 0.438, | time: 0.7 sec
2020-01-04 22:36:21.614055  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.614094  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:21.614127  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.614166  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:21.614218  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:21.614260  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:21.614298  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:21.614787  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:21.614833  common.py             0083: save                              <- EXIT
2020-01-04 22:36:21.614882  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:21.614925  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.614967  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.900000
2020-01-04 22:36:21.615005  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.615039  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:21.615069  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.615103  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:21.615135  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.615166  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:21.615196  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.667601  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:21.667760  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.667814  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:21.667879  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.667919  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:21.667976  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668013  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:21.668048  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668083  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:21.668123  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668158  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:21.668202  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668235  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:21.668278  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668313  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:21.668355  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668389  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:21.668431  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668464  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:21.668503  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668536  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:21.668576  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:21.668609  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:21.668639  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.012881  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.6785714285714286, 0.8714285714285714], [0.8, 0.9]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:22.250522  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:22.250666  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[1.2885042503954278, 0.7409322347088811], [1.0233861060948888, 0.4382862869623447]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:22.409492  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:22.409900  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:22.409966  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:22.410010  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:22.410048  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:22.410085  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:22.410521  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:22.410570  common.py             0083: save                              <- EXIT
2020-01-04 22:36:22.410628  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:22.619856  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.620207  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.620475  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.620698  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.620907  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.621111  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.621297  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:22.621486  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.621672  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.621853  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.622012  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.622182  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.622376  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.622552  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.622716  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.622882  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:22.623031  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:22.623377  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:22.625509  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:22.625711  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:22.625863  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:22.626026  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:22.626212  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:22.626351  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:22.626467  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:22.626571  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:22.626672  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:22.626773  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:22.626874  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:22.626975  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:22.627076  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:22.627180  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:22.627281  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:22.627383  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:22.627487  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:22.627589  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:22.627691  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:22.627854  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:22.628005  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.628143  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.628266  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.628371  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:22.628749  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:22.629077  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:22.629288  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:22.629530  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:22.629686  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:22.629892  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:22.630046  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:22.630238  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:22.630889  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:22.631152  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:22.631311  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:22.631468  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:22.631606  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:22.631733  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:22.674183  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:22.674286  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:22.674402  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:22.674458  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:22.674524  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:22.674562  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:22.674623  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:22.674656  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:22.674691  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:22.674726  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:22.674761  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:22.674795  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:22.675105  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:22.675152  common.py             0083: save                              <- EXIT
2020-01-04 22:36:22.675186  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:22.675226  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:22.675263  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.675299  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:22.675336  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.675370  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:22.675407  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.675442  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:22.675524  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.675577  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.675609  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.675636  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:22.675735  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:22.675913  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:22.676003  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:22.676039  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:22.676076  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:22.676105  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:22.676138  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:22.676167  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:22.676199  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:22.676227  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:22.676263  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:22.676293  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:22.676328  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:22.676362  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676396  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:22.676436  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676471  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:22.676506  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676540  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:22.676574  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676607  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:22.676642  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676674  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.676703  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676735  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:22.676767  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676800  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:22.676833  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676866  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:22.676899  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.676934  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:22.676971  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.677005  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:22.677037  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.677073  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:22.677110  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.677145  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.677175  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.677201  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:22.677253  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:22.677294  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:22.677434  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:22.677472  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:22.677526  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:22.677567  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:22.677850  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:22.677891  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:22.677930  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:22.677972  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:22.678011  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:22.678249  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:22.678301  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:22.818591  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:22.818818  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:22.818923  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:22.819022  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:22.819075  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:22.819130  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:22.819762  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:22.819814  common.py             0083: save                              <- EXIT
2020-01-04 22:36:22.819906  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:22.819958  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820007  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:22.820087  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820124  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.820156  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820201  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:22.820237  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820276  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:22.820332  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820367  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.820396  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820431  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:22.820463  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820495  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:22.820530  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820562  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:22.820595  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820628  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:22.820661  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820693  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.820722  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.820764  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:22.820855  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:22.820944  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:22.820987  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:22.821032  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:22.821064  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:22.821099  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:22.872263  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:22.872441  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:22.872492  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:22.872546  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:22.872590  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.872631  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:22.872671  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.872707  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:22.872742  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.872777  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:22.872812  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.872846  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:22.872882  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.872915  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:22.872945  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.872979  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:22.873044  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:22.873097  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:22.873142  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:22.873177  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.873215  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:22.873251  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:22.873292  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:22.873363  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:22.967496  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:22.970650  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:22.970754  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:22.971519  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:22.971589  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:23.063580  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:23.063783  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:23.063854  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.063896  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:23.066729  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:23.069412  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:23.069536  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.069588  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:23.069634  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.069673  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:23.069716  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.069752  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.069784  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.069816  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:23.069857  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:23.069917  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:23.069959  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:23.069998  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:23.070591  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:23.070649  common.py             0083: save                              <- EXIT
2020-01-04 22:36:23.070720  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:23.070897  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:23.071011  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:23.071078  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:23.071120  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:23.071153  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.071189  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:23.071223  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.071258  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:23.071294  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.071333  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:23.071392  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.071426  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.071456  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.071680  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.071748  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.071814  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.071864  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.071904  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:23.072027  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:23.072103  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:23.072154  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:23.072193  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:23.072230  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.072266  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:23.072300  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.072347  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:23.072393  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.072428  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.072458  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.072485  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:23.072547  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:23.072643  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:23.072691  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:23.072759  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:23.072794  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.072831  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:23.072866  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.072925  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:23.072979  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.073014  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.073045  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.073072  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:23.073216  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:23.073326  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:23.073366  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:23.073408  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:23.073439  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:23.073472  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:23.073500  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:23.073533  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:23.073561  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:23.073594  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:23.073625  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:23.073659  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:23.073686  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:23.073721  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:23.073754  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.073788  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:23.073821  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.073853  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.073883  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.073915  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:23.073947  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.073985  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:23.074020  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.074053  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:23.074089  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.074122  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:23.074157  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.074190  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:23.074226  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.074259  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:23.074299  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.074384  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.074428  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.074454  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:23.074487  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:23.074521  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:23.074555  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:23.074588  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:23.075081  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:23.075136  common.py             0083: save                              <- EXIT
2020-01-04 22:36:23.075200  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:23.075344  level_11_optimizers_  0047: optimizer_nesterov_sgd            -> ENTRY: learning_rate = 0.01, momentum = 0.9, weight_decay = 0.0001, momentum_dampening_rate = 0, clipnorm = 1.0, clipvalue = 0.5
2020-01-04 22:36:23.075423  optimizers.py         0025: nesterov_sgd                      -> ENTRY: ---
2020-01-04 22:36:23.075462  optimizers.py         0025: nesterov_sgd                      <- EXIT : ---
2020-01-04 22:36:23.075503  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:23.075538  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.075575  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          nesterov_sgd
2020-01-04 22:36:23.075611  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.075648  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:23.075684  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.075725  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0.9, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 1.0, 'clipvalue': 0.5}
2020-01-04 22:36:23.075783  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.075841  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.075876  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.075917  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.075949  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.075986  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.076018  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.076045  level_11_optimizers_  0047: optimizer_nesterov_sgd            <- EXIT
2020-01-04 22:36:23.076085  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:23.076125  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:23.076192  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:23.076228  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.076261  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:23.076472  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:23.076523  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:23.076661  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:23.076712  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:23.076906  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:23.080114  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:23.080252  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.080312  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:23.080352  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.440909  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:23.578567  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.5666666666666667), 38.73557111993432)
2020-01-04 22:36:23.802974  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:23.803132  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.803194  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.750, Train-loss: 1.097 | Val-acc: 0.566667, Val-loss: 2.582, | time: 0.7 sec
2020-01-04 22:36:23.803263  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.803302  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:23.803335  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.803374  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:23.803429  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:23.803469  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:23.803507  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:23.804026  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:23.804074  common.py             0083: save                              <- EXIT
2020-01-04 22:36:23.804120  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:23.804158  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:23.804194  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:23.804228  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.144047  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:24.281753  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.8166666666666667), 14.256427562645513)
2020-01-04 22:36:24.538930  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:24.539075  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.539136  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.864, Train-loss: 0.563 | Val-acc: 0.816667, Val-loss: 0.950, | time: 0.7 sec
2020-01-04 22:36:24.539204  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.539243  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:24.539276  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.539314  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:24.539370  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:24.539410  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:24.539453  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:24.539950  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:24.539996  common.py             0083: save                              <- EXIT
2020-01-04 22:36:24.540046  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:24.540089  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.540132  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.816667
2020-01-04 22:36:24.540171  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.540205  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:24.540234  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.540267  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:24.540299  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.540331  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:24.540360  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.592714  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:24.592829  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.592881  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:24.592949  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.592988  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:24.593046  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593081  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:24.593117  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593151  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:24.593185  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593219  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:24.593262  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593296  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:24.593338  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593375  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:24.593418  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593451  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:24.593493  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593526  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:24.593569  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593602  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:24.593642  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.593674  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:24.593703  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:24.933644  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.75, 0.8642857142857143], [0.5666666666666667, 0.8166666666666667]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:25.104941  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:25.105059  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[1.0969047150570468, 0.5628352002332706], [2.5823714079956215, 0.9504285041763675]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:25.262158  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:25.262568  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:25.262636  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:25.262680  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:25.262718  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:25.262755  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:25.263185  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:25.263233  common.py             0083: save                              <- EXIT
2020-01-04 22:36:25.263273  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:25.448675  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.448790  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.448854  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.448911  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.448965  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449018  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449065  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:25.449117  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449168  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449216  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449260  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449304  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449347  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449396  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449440  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449482  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:25.449522  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:25.449620  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:25.450149  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:25.450205  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:25.450244  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:25.450286  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:25.450351  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:25.450385  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450417  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:25.450445  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450472  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450498  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:25.450524  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:25.450550  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:25.450576  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450602  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450628  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450653  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450679  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450706  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:25.450732  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:25.450774  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:25.450812  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.450847  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.450878  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.450905  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:25.451009  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:25.451093  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:25.451148  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:25.451209  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:25.451250  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:25.451303  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:25.451335  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:25.451383  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:25.451470  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:25.451531  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:25.451569  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:25.451606  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:25.451640  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:25.451671  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:25.475233  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:25.475328  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:25.475423  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:25.475465  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:25.475537  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:25.475576  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:25.475637  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:25.475669  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:25.475705  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:25.475741  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:25.475775  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:25.475810  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:25.476123  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:25.476170  common.py             0083: save                              <- EXIT
2020-01-04 22:36:25.476224  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:25.476267  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:25.476304  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.476339  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:25.476376  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.476410  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:25.476447  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.476482  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:25.476536  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.476570  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.476601  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.476627  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:25.476714  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:25.476894  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:25.476983  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:25.477020  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:25.477056  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:25.477087  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:25.477124  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:25.477153  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:25.477186  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:25.477214  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:25.477251  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:25.477281  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:25.477316  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:25.477350  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477384  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:25.477423  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477459  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:25.477493  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477526  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:25.477561  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477594  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:25.477628  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477660  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.477689  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477721  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:25.477753  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477785  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:25.477819  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477851  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:25.477884  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477917  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:25.477950  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.477983  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:25.478014  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.478049  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:25.478084  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.478119  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.478149  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.478175  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:25.478227  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:25.478270  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:25.478462  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:25.478500  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:25.478557  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:25.478598  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:25.478877  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:25.478916  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:25.478954  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:25.478994  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:25.479034  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:25.479266  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:25.479315  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:25.628449  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:25.628704  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:25.628799  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:25.628905  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:25.628960  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:25.629018  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:25.629659  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:25.629713  common.py             0083: save                              <- EXIT
2020-01-04 22:36:25.629784  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:25.629834  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.629883  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:25.629944  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.629980  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.630011  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630044  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:25.630079  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630119  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:25.630171  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630204  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.630233  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630268  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:25.630301  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630361  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:25.630411  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630444  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:25.630478  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630512  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:25.630549  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630582  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.630611  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.630651  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:25.630744  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:25.630827  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:25.630876  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:25.630918  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:25.630949  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:25.630986  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:25.684732  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:25.684913  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:25.684962  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:25.685019  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:25.685063  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685104  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:25.685143  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685180  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:25.685214  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685249  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:25.685283  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685317  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:25.685353  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685386  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.685415  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685447  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:25.685507  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:25.685560  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:25.685608  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:25.685642  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685679  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:25.685714  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.685755  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:25.685827  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:25.783720  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:25.786794  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:25.786911  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:25.787719  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:25.787789  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:25.880944  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:25.881146  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:25.881214  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.881260  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:25.884200  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:25.886824  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:25.886954  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.887009  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:25.887056  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.887095  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:25.887138  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.887173  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.887206  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.887242  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:25.887288  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:25.887350  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:25.887392  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:25.887432  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:25.887961  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:25.888013  common.py             0083: save                              <- EXIT
2020-01-04 22:36:25.888056  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:25.888239  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:25.888341  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:25.888393  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:25.888435  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:25.888470  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.888506  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:25.888541  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.888578  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:25.888614  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.888655  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:25.888717  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.888753  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.888788  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.889018  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.889070  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.889153  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.889203  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.889244  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:25.889336  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:25.889463  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:25.889519  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:25.889559  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:25.889596  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.889632  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:25.889666  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.889719  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:25.889778  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.889813  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.889844  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.889872  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:25.889938  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:25.890039  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:25.890091  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:25.890138  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:25.890172  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.890208  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:25.890244  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.890283  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:25.890358  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.890395  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.890427  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.890455  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:25.890606  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:25.890716  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:25.890757  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:25.890803  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:25.890846  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:25.890886  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:25.890919  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:25.890953  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:25.890981  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:25.891018  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:25.891049  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:25.891083  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:25.891112  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:25.891147  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:25.891181  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891217  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:25.891251  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891284  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.891315  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891348  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:25.891382  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891421  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:25.891458  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891505  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:25.891541  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891574  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:25.891610  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891644  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:25.891680  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891713  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:25.891751  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891784  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.891813  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.891839  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:25.891872  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:25.891906  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:25.891940  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:25.891974  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:25.892379  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:25.892427  common.py             0083: save                              <- EXIT
2020-01-04 22:36:25.892511  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:25.892641  level_11_optimizers_  0072: optimizer_rmsprop                 -> ENTRY: learning_rate = 0.01, decay_rate = 0.9, epsilon = 1e-08, weight_decay = 0.0001, clipnorm = 1.0, clipvalue = 0.5
2020-01-04 22:36:25.892721  optimizers.py         0043: rmsprop                           -> ENTRY: ---
2020-01-04 22:36:25.892760  optimizers.py         0043: rmsprop                           <- EXIT : ---
2020-01-04 22:36:25.892800  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:25.892834  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.892870  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          rmsprop
2020-01-04 22:36:25.892905  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.892941  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:25.892978  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.893020  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 1.0, 'clipvalue': 0.5, 'epsilon': 1e-08, 'decay_rate': 0.9}
2020-01-04 22:36:25.893089  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.893124  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.893172  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.893249  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:25.893282  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.893325  level_11_optimizers_  0072: optimizer_rmsprop                 <- EXIT
2020-01-04 22:36:25.893362  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:25.893404  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:25.893454  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:25.893502  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.893535  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:25.893675  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:25.893716  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:25.893844  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:25.893891  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:25.894069  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:25.897169  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:25.897271  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:25.897327  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:25.897367  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:26.233940  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:26.383917  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.5833333333333334), 23.014120638370514)
2020-01-04 22:36:26.622222  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:26.622420  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:26.622526  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.714, Train-loss: 1.736 | Val-acc: 0.583333, Val-loss: 1.534, | time: 0.7 sec
2020-01-04 22:36:26.622614  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:26.622656  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:26.622689  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:26.622728  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:26.622781  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:26.622822  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:26.622860  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:26.623375  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:26.623424  common.py             0083: save                              <- EXIT
2020-01-04 22:36:26.623469  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:26.623507  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:26.623543  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:26.623578  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:26.951894  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:27.093366  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.7833333333333333), 8.115050409920514)
2020-01-04 22:36:27.339364  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:27.339530  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.339619  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.743, Train-loss: 1.160 | Val-acc: 0.783333, Val-loss: 0.541, | time: 0.7 sec
2020-01-04 22:36:27.339702  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.339741  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:27.339773  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.339812  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:27.339868  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:27.339909  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:27.339948  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:27.340436  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:27.340484  common.py             0083: save                              <- EXIT
2020-01-04 22:36:27.340536  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:27.340581  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.340625  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.783333
2020-01-04 22:36:27.340664  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.340699  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:27.340729  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.340763  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:27.340795  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.340827  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:27.340857  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383215  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:27.383347  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383404  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:27.383472  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383513  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:27.383571  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383607  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:27.383644  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383679  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:27.383714  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383749  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:27.383792  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383826  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:27.383868  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383905  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:27.383948  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.383982  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:27.384023  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.384056  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:27.384095  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.384128  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:27.384168  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.384200  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:27.384231  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:27.734455  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.7142857142857143, 0.7428571428571429], [0.5833333333333334, 0.7833333333333333]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:27.936735  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:27.936857  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[1.7358616112748029, 1.1601495455547202], [1.5342747092247009, 0.5410033606613676]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:28.092499  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:28.092909  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:28.092972  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:28.093016  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:28.093055  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:28.093093  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:28.093531  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:28.093580  common.py             0083: save                              <- EXIT
2020-01-04 22:36:28.093619  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:28.338086  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338198  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338275  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338355  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338414  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338466  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338524  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:28.338573  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338619  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338665  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338705  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338746  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338787  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338828  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338868  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338909  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:28.338947  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:28.339038  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:28.339540  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:28.339594  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:28.339631  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:28.339671  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:28.339722  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:28.339752  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:28.339778  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:28.339803  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:28.339828  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:28.339853  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:28.339878  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:28.339903  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:28.339928  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:28.339952  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:28.339978  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:28.340018  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:28.340055  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:28.340080  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:28.340106  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:28.340147  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:28.340187  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.340222  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.340253  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.340279  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:28.340380  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:28.340460  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:28.340514  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:28.340573  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:28.340612  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:28.340663  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:28.340694  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:28.340739  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:28.340811  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:28.340872  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:28.340911  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:28.340949  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:28.340999  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:28.341043  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:28.365207  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:28.365307  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:28.365404  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:28.365447  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:28.365515  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:28.365554  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:28.365616  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:28.365648  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:28.365683  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:28.365719  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:28.365754  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:28.365790  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:28.366107  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:28.366152  common.py             0083: save                              <- EXIT
2020-01-04 22:36:28.366185  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:28.366225  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:28.366262  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.366297  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:28.366359  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.366420  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:28.366456  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.366491  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:28.366545  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.366580  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.366610  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.366637  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:28.366724  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:28.367005  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:28.367097  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:28.367136  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:28.367172  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:28.367202  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:28.367234  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:28.367262  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:28.367309  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:28.367363  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:28.367412  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:28.367441  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:28.367477  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:28.367511  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.367546  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:28.367586  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.367621  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:28.367656  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.367690  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:28.367729  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.367815  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:28.367856  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.367890  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.367920  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.367953  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:28.367985  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.368018  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:28.368052  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.368085  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:28.368118  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.368152  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:28.368186  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.368218  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:28.368250  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.368286  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:28.368323  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.368357  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.368386  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.368412  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:28.368465  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:28.368507  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:28.368649  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:28.368686  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:28.368741  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:28.368781  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:28.369062  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:28.369102  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:28.369139  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:28.369179  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:28.369217  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:28.369452  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:28.369505  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:28.527991  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:28.528250  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:28.528345  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:28.528449  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:28.528529  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:28.528589  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:28.529261  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:28.529311  common.py             0083: save                              <- EXIT
2020-01-04 22:36:28.529378  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:28.529431  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529480  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:28.529541  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529577  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.529608  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529641  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:28.529678  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529717  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:28.529770  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529803  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.529833  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529866  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:28.529898  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529932  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:28.529967  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.529999  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:28.530034  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.530067  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:28.530100  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.530132  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.530161  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.530204  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:28.530303  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:28.530436  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:28.530483  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:28.530526  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:28.530558  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:28.530594  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:28.586508  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:28.586697  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:28.586748  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:28.586815  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:28.586861  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.586903  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:28.586943  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.586981  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:28.587018  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.587055  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:28.587091  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.587126  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:28.587163  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.587197  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.587229  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.587264  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:28.587326  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:28.587381  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:28.587427  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:28.587462  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.587501  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:28.587538  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.587580  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:28.587656  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:28.686441  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:28.689417  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:28.689518  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:28.690298  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:28.690411  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:28.784603  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:28.784812  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:28.784877  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.784924  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:28.787766  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:28.790331  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:28.790448  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.790499  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:28.790545  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.790583  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:28.790634  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.790670  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.790702  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.790738  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:28.790798  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:28.790856  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:28.790897  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:28.790936  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:28.791451  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:28.791502  common.py             0083: save                              <- EXIT
2020-01-04 22:36:28.791559  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:28.791724  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:28.791823  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:28.791880  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:28.791921  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:28.791955  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.791991  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:28.792040  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.792101  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:28.792143  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.792213  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:28.792282  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.792321  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.792357  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.792629  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.792695  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.792790  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.792853  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.792881  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:28.792989  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:28.793064  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:28.793119  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:28.793158  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:28.793194  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.793229  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:28.793262  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.793307  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:28.793351  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.793385  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.793415  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.793442  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:28.793530  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:28.793650  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:28.793707  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:28.793752  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:28.793799  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.793837  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:28.793873  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.793913  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:28.793969  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.794005  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.794037  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.794066  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:28.794229  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:28.794367  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:28.794428  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:28.794479  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:28.794522  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:28.794563  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:28.794598  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:28.794633  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:28.794663  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:28.794716  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:28.794748  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:28.794784  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:28.794825  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:28.794861  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:28.794896  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.794943  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:28.794977  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795014  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.795045  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795077  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:28.795109  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795148  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:28.795183  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795216  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:28.795252  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795285  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:28.795321  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795354  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:28.795390  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795423  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:28.795460  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795492  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.795522  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.795548  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:28.795582  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:28.795616  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:28.795649  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:28.795683  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:28.796130  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:28.796182  common.py             0083: save                              <- EXIT
2020-01-04 22:36:28.796258  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:28.796434  level_11_optimizers_  0094: optimizer_momentum_rmsprop        -> ENTRY: learning_rate = 0.01, decay_rate = 0.9, epsilon = 1e-08, weight_decay = 0.0001, momentum = 0.9
2020-01-04 22:36:28.796567  optimizers.py         0060: momentum_rmsprop                  -> ENTRY: ---
2020-01-04 22:36:28.796608  optimizers.py         0060: momentum_rmsprop                  <- EXIT : ---
2020-01-04 22:36:28.796678  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:28.796727  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.796765  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          rmsprop
2020-01-04 22:36:28.796801  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.796851  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:28.796887  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.796929  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0.9, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0, 'epsilon': 1e-08, 'decay_rate': 0.9}
2020-01-04 22:36:28.796993  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.797032  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:28.797064  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.797091  level_11_optimizers_  0094: optimizer_momentum_rmsprop        <- EXIT
2020-01-04 22:36:28.797127  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:28.797167  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:28.797211  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:28.797245  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.797277  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:28.797414  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:28.797454  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:28.797576  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:28.797623  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:28.797804  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:28.800954  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:28.801068  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:28.801134  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:28.801175  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:29.156747  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:29.301645  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.8333333333333334), 9.020306443795562)
2020-01-04 22:36:29.552047  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:29.552233  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:29.552371  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.614, Train-loss: 2.226 | Val-acc: 0.833333, Val-loss: 0.601, | time: 0.8 sec
2020-01-04 22:36:29.552443  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:29.552577  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:29.552635  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:29.552683  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:29.552744  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:29.552786  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:29.552825  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:29.553356  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:29.553405  common.py             0083: save                              <- EXIT
2020-01-04 22:36:29.553451  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:29.553489  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:29.553524  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:29.553558  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:29.893909  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:30.041398  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.75), 13.073144032619894)
2020-01-04 22:36:30.245715  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:30.245867  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.245931  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.750, Train-loss: 0.978 | Val-acc: 0.750000, Val-loss: 0.872, | time: 0.7 sec
2020-01-04 22:36:30.246000  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.246039  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.246071  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.246109  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:30.246164  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:30.246204  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:30.246243  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:30.246736  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:30.246783  common.py             0083: save                              <- EXIT
2020-01-04 22:36:30.246835  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:30.246878  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.246924  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.833333
2020-01-04 22:36:30.246962  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.246996  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.247026  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.247058  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:30.247090  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.247122  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.247150  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304112  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:30.304230  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304284  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:30.304351  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304391  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:30.304448  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304485  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:30.304521  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304555  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:30.304590  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304625  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:30.304672  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304707  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:30.304749  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304785  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:30.304828  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304860  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:30.304902  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.304934  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:30.304974  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.305006  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:30.305045  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.305078  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.305107  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.306059  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.6142857142857143, 0.75], [0.8333333333333334, 0.75]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:30.470716  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:30.470834  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[2.226496636907437, 0.9783056647059442], [0.6013537629197041, 0.8715429355079929]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:30.628258  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:30.628662  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:30.628727  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:30.628774  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:30.628816  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:30.628857  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:30.629316  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:30.629365  common.py             0083: save                              <- EXIT
2020-01-04 22:36:30.629428  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:30.792977  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793090  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793152  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793206  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793264  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793315  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793359  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:30.793408  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793456  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793503  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793545  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793587  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793627  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793668  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793722  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793776  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:30.793813  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:30.793907  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:30.794467  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:30.794522  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:30.794560  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:30.794600  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:30.794652  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:30.794682  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794708  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:30.794734  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794759  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794784  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:30.794809  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:30.794834  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:30.794859  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794883  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794908  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794933  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794958  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:30.794982  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:30.795007  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:30.795049  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:30.795085  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.795118  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.795149  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.795174  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:30.795275  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:30.795358  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:30.795411  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:30.795471  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:30.795510  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:30.795560  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:30.795591  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:30.795638  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:30.795714  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:30.795775  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:30.795814  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:30.795852  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:30.795887  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:30.795919  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:30.820777  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:30.820878  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:30.821066  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:30.821113  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:30.821180  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:30.821218  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:30.821279  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:30.821313  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:30.821349  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:30.821386  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:30.821421  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:30.821457  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:30.821930  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:30.821995  common.py             0083: save                              <- EXIT
2020-01-04 22:36:30.822119  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:30.822178  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:30.822232  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.822282  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:30.822351  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.822424  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:30.822473  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.822535  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:30.822590  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.822625  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.822655  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.822682  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:30.822778  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:30.822962  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:30.823050  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:30.823087  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:30.823122  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:30.823153  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:30.823187  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:30.823215  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:30.823247  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:30.823276  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:30.823312  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:30.823342  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:30.823378  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:30.823411  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823445  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:30.823485  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823521  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:30.823555  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823588  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:30.823622  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823655  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:30.823689  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823721  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.823751  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823782  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:30.823814  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823846  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:30.823879  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823911  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:30.823943  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.823976  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:30.824009  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.824042  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:30.824074  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.824114  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:30.824151  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.824186  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.824215  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.824241  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:30.824294  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:30.824337  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:30.824479  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:30.824517  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:30.824572  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:30.824612  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:30.824893  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:30.824933  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:30.824971  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:30.825012  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:30.825053  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:30.825291  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:30.825344  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:30.984912  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:30.985171  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:30.985311  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:30.985413  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:30.985468  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:30.985524  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:30.986183  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:30.986235  common.py             0083: save                              <- EXIT
2020-01-04 22:36:30.986340  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:30.986419  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986469  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:30.986531  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986567  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.986599  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986632  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:30.986669  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986708  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:30.986761  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986794  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.986827  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986861  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:30.986893  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986926  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:30.986960  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.986993  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:30.987026  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.987059  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:30.987091  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.987123  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:30.987152  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:30.987196  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:30.987287  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:30.987374  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:30.987420  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:30.987465  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:30.987497  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:30.987531  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:31.045230  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:31.045411  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:31.045459  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:31.045515  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:31.045559  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.045600  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:31.045639  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.045675  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:31.045711  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.045747  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:31.045782  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.045815  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:31.045850  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.045882  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.045912  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.045947  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:31.046004  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:31.046056  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:31.046113  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:31.046150  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.046187  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:31.046222  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.046260  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:31.046341  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:31.150987  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:31.155771  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:31.155888  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:31.156732  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:31.156804  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:31.261021  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:31.261321  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:31.261423  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.261497  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:31.265643  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:31.269800  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:31.269987  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.270135  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:31.270238  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.270318  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:31.270438  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.270499  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.270552  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.270615  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:31.270692  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:31.270786  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:31.270854  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:31.270919  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:31.271726  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:31.271850  common.py             0083: save                              <- EXIT
2020-01-04 22:36:31.271933  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:31.272161  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:31.272326  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:31.272413  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:31.272486  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:31.272550  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.272615  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:31.272675  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.272737  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:31.272798  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.272868  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:31.272969  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.273030  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.273083  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.273414  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.273480  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.273597  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.273679  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.273724  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:31.273864  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:31.273979  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:31.274058  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:31.274126  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:31.274185  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.274243  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:31.274299  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.274413  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:31.274499  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.274555  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.274605  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.274650  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:31.274737  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:31.274871  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:31.274949  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:31.275024  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:31.275078  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.275165  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:31.275252  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.275369  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:31.275461  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.275515  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.275566  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.275609  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:31.275809  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:31.275979  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:31.276046  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:31.276116  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:31.276171  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:31.276239  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:31.276289  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:31.276339  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:31.276368  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:31.276403  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:31.276434  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:31.276468  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:31.276496  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:31.276531  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:31.276565  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.276599  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:31.276632  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.276664  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.276694  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.276727  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:31.276759  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.276798  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:31.276834  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.276868  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:31.276903  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.276936  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:31.276972  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.277005  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:31.277040  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.277073  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:31.277111  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.277144  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.277177  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.277204  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:31.277238  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:31.277272  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:31.277306  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:31.277341  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:31.277838  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:31.277891  common.py             0083: save                              <- EXIT
2020-01-04 22:36:31.277989  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:31.278191  level_11_optimizers_  0116: optimizer_adam                    -> ENTRY: learning_rate = 0.01, beta1 = 0.9, beta2 = 0.999, epsilon = 1e-08, weight_decay = 0.0001, amsgrad = False, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:31.278297  optimizers.py         0076: adam                              -> ENTRY: ---
2020-01-04 22:36:31.278374  optimizers.py         0076: adam                              <- EXIT : ---
2020-01-04 22:36:31.278442  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:31.278476  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.278513  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          adam
2020-01-04 22:36:31.278547  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.278583  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:31.278618  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.278662  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0, 'beta1': 0.9, 'beta2': 0.999, 'epsilon': 1e-08, 'amsgrad': False}
2020-01-04 22:36:31.278745  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.278781  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.278826  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.278873  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.278904  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.279019  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:31.279056  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.279086  level_11_optimizers_  0116: optimizer_adam                    <- EXIT
2020-01-04 22:36:31.279130  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:31.279195  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:31.279248  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:31.279284  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.279316  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:31.279483  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:31.279529  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:31.279674  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:31.279722  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:31.279910  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:31.285652  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:31.285785  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.285849  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:31.285888  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:31.640832  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:31.784901  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.6666666666666666), 19.768125250004232)
2020-01-04 22:36:32.028154  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:32.028303  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.028365  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.714, Train-loss: 0.865 | Val-acc: 0.666667, Val-loss: 1.318, | time: 0.7 sec
2020-01-04 22:36:32.028434  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.028473  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:32.028505  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.028544  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:32.028599  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:32.028640  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:32.028678  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:32.029206  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:32.029254  common.py             0083: save                              <- EXIT
2020-01-04 22:36:32.029324  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:32.029365  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.029401  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:32.029436  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.367942  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:32.505019  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.8), 6.025125734508038)
2020-01-04 22:36:32.756025  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:32.756191  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.756254  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.821, Train-loss: 0.537 | Val-acc: 0.800000, Val-loss: 0.402, | time: 0.7 sec
2020-01-04 22:36:32.756339  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.756380  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:32.756413  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.756452  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:32.756507  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:32.756547  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:32.756586  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:32.757301  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:32.757354  common.py             0083: save                              <- EXIT
2020-01-04 22:36:32.757408  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:32.757453  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.757496  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.800000
2020-01-04 22:36:32.757534  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.757569  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:32.757599  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.757633  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:32.757666  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.757698  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:32.757728  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.809395  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:32.809525  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.809578  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:32.809646  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.809686  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:32.809744  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.809782  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:32.809818  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.809853  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:32.809888  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.809922  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:32.809966  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.809999  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:32.810042  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.810079  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:32.810123  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.810156  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:32.810199  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.810232  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:32.810272  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.810310  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:32.810361  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:32.810396  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:32.810426  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.153939  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.7142857142857143, 0.8214285714285714], [0.6666666666666666, 0.8]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:33.331695  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:33.331820  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[0.8652316511209522, 0.5368962698083903], [1.3178750166669488, 0.4016750489672025]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:33.488035  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:33.488470  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:33.488546  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:33.488591  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:33.488630  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:33.488669  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:33.489155  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:33.489205  common.py             0083: save                              <- EXIT
2020-01-04 22:36:33.489246  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:33.745114  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745225  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745289  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745345  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745398  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745448  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745493  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:33.745543  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745591  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745639  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745681  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745723  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745764  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745806  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745847  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745895  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:33.745935  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:33.746029  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:33.746579  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:33.746635  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:33.746673  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:33.746714  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:33.746766  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:33.746797  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:33.746824  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:33.746851  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:33.746880  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:33.746907  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:33.746933  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:33.746959  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:33.746984  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:33.747010  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:33.747036  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:33.747062  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:33.747088  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:33.747113  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:33.747139  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:33.747180  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:33.747217  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.747253  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.747284  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.747310  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:33.747412  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:33.747495  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:33.747547  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:33.747607  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:33.747646  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:33.747697  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:33.747727  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:33.747775  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:33.747848  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:33.747910  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:33.747949  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:33.747988  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:33.748024  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:33.748055  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:33.771643  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:33.771743  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:33.771870  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:33.771928  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:33.772002  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:33.772054  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:33.772116  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:33.772149  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:33.772185  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:33.772221  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:33.772257  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:33.772292  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:33.772603  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:33.772650  common.py             0083: save                              <- EXIT
2020-01-04 22:36:33.772684  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:33.772725  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:33.772763  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.772799  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:33.772836  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.772871  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:33.772908  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.772943  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:33.772998  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.773033  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.773064  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.773092  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:33.773181  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:33.773362  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:33.773451  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:33.773489  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:33.773525  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:33.773556  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:33.773590  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:33.773618  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:33.773655  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:33.773686  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:33.773722  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:33.773752  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:33.773788  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:33.773822  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.773857  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:33.773897  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.773933  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:33.773968  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774002  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:33.774037  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774070  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:33.774104  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774137  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.774167  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774199  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:33.774231  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774264  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:33.774298  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774356  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:33.774420  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774467  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:33.774501  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774534  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:33.774566  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774604  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:33.774640  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774676  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.774706  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.774732  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:33.774785  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:33.774829  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:33.774972  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:33.775009  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:33.775064  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:33.775113  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:33.775399  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:33.775441  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:33.775480  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:33.775522  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:33.775564  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:33.775800  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:33.775854  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:33.937620  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:33.937924  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:33.938039  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:33.938145  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:33.938202  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:33.938254  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:33.938978  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:33.939031  common.py             0083: save                              <- EXIT
2020-01-04 22:36:33.939105  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:33.939156  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939205  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:33.939266  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939302  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.939333  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939366  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:33.939403  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939442  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:33.939495  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939529  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.939559  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939595  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:33.939628  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939662  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:33.939697  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939730  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:33.939764  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939797  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:33.939830  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939863  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.939895  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.939937  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:33.940035  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:33.940118  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:33.940166  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:33.940213  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:33.940248  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:33.940285  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:33.997286  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:33.997466  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:33.997514  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:33.997571  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:33.997613  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.997654  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:33.997694  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.997732  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:33.997766  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.997802  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:33.997837  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.997870  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:33.997906  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.997938  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:33.997968  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.998002  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:33.998062  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:33.998116  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:33.998163  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:33.998198  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.998235  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:33.998270  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:33.998309  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:33.998421  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:34.103346  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:34.108042  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:34.108166  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:34.108975  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:34.109056  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:34.211647  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:34.211846  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:34.211913  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.211960  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:34.214916  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:34.217664  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:34.217770  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.217819  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:34.217867  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.217906  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:34.217949  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.217985  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.218017  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.218052  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:34.218095  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:34.218155  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:34.218199  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:34.218240  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:34.218801  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:34.218861  common.py             0083: save                              <- EXIT
2020-01-04 22:36:34.218905  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:34.219066  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:34.219170  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:34.219227  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:34.219273  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:34.219309  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.219348  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:34.219385  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.219434  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:34.219486  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.219533  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:34.219599  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.219636  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.219670  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.219902  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.219950  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.220022  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.220059  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.220088  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:34.220212  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:34.220302  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:34.220361  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:34.220403  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:34.220442  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.220481  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:34.220518  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.220561  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:34.220609  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.220645  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.220687  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.220724  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:34.220787  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:34.220877  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:34.220924  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:34.220969  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:34.221002  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.221038  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:34.221075  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.221114  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:34.221169  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.221205  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.221236  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.221264  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:34.221414  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:34.221557  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:34.221603  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:34.221655  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:34.221694  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:34.221736  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:34.221777  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:34.221814  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:34.221845  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:34.221884  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:34.221918  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:34.221955  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:34.221985  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:34.222020  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:34.222055  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222091  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:34.222126  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222160  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.222194  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222230  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:34.222273  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222318  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:34.222367  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222403  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:34.222441  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222476  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:34.222514  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222549  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:34.222586  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222622  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:34.222661  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222696  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.222727  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.222754  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:34.222790  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:34.222826  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:34.222862  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:34.222897  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:34.223349  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:34.223402  common.py             0083: save                              <- EXIT
2020-01-04 22:36:34.223469  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:34.223615  level_11_optimizers_  0141: optimizer_adamax                  -> ENTRY: learning_rate = 0.01, beta1 = 0.9, beta2 = 0.999, epsilon = 1e-08, weight_decay = 0.0001, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:34.223705  optimizers.py         0094: adamax                            -> ENTRY: ---
2020-01-04 22:36:34.223751  optimizers.py         0094: adamax                            <- EXIT : ---
2020-01-04 22:36:34.223795  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:34.223832  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.223871  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          adamax
2020-01-04 22:36:34.223907  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.223946  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:34.223984  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.224032  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0, 'beta1': 0.9, 'beta2': 0.999, 'epsilon': 1e-08}
2020-01-04 22:36:34.224114  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.224153  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.224187  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.224234  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.224266  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.224294  level_11_optimizers_  0141: optimizer_adamax                  <- EXIT
2020-01-04 22:36:34.224331  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:34.224379  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:34.224425  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:34.224462  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.224495  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:34.224642  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:34.224684  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:34.224802  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:34.224852  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:34.225041  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:34.227979  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:34.228088  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.228150  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:34.228188  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.560499  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:34.706758  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.7833333333333333), 6.8499117363244295)
2020-01-04 22:36:34.949594  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:34.949749  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.949811  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.643, Train-loss: 1.080 | Val-acc: 0.783333, Val-loss: 0.457, | time: 0.7 sec
2020-01-04 22:36:34.949880  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.949919  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:34.949957  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.949997  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:34.950051  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:34.950092  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:34.950130  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:34.950685  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:34.950734  common.py             0083: save                              <- EXIT
2020-01-04 22:36:34.950780  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:34.950817  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:34.950853  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:34.950887  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.286225  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:35.435635  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.8333333333333334), 5.637092802673578)
2020-01-04 22:36:35.663902  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:35.664044  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.664106  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.850, Train-loss: 0.366 | Val-acc: 0.833333, Val-loss: 0.376, | time: 0.7 sec
2020-01-04 22:36:35.664175  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.664215  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:35.664247  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.664286  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:35.664340  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:35.664381  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:35.664419  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:35.664926  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:35.664973  common.py             0083: save                              <- EXIT
2020-01-04 22:36:35.665023  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:35.665066  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.665109  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.833333
2020-01-04 22:36:35.665148  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.665182  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:35.665214  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.665247  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:35.665280  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.665312  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:35.665341  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707305  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:35.707407  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707468  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:35.707538  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707579  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:35.707637  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707674  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:35.707711  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707745  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:35.707781  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707816  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:35.707860  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707894  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:35.707938  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.707975  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:35.708018  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.708052  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:35.708094  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.708127  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:35.708168  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.708202  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:35.708242  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:35.708275  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:35.708305  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.061458  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.6428571428571429, 0.85], [0.7833333333333333, 0.8333333333333334]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:36.259351  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:36.259475  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[1.0799626510590314, 0.3662828031661255], [0.4566607824216286, 0.37580618684490524]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:36.415939  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:36.416347  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:36.416412  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:36.416457  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:36.416495  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:36.416533  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:36.416968  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:36.417017  common.py             0083: save                              <- EXIT
2020-01-04 22:36:36.417056  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:36.660030  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660143  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660208  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660264  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660318  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660370  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660414  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:36.660464  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660512  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660559  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660603  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660644  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660685  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660727  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660768  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660811  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:36.660848  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:36.660941  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:36.661446  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:36.661502  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:36.661539  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:36.661580  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:36.661632  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:36.661663  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661690  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:36.661716  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661742  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661767  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:36.661793  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:36.661818  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:36.661843  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661869  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661894  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661919  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661944  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661969  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:36.661995  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:36.662035  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:36.662072  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.662105  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.662140  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.662167  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:36.662267  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:36.662379  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:36.662458  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:36.662517  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:36.662557  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:36.662608  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:36.662639  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:36.662687  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:36.662761  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:36.662823  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:36.662862  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:36.662901  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:36.662937  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:36.662969  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:36.686592  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:36.686704  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:36.686796  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:36.686839  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:36.686905  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:36.686944  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:36.687005  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:36.687037  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:36.687073  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:36.687109  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:36.687144  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:36.687180  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:36.687489  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:36.687536  common.py             0083: save                              <- EXIT
2020-01-04 22:36:36.687573  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:36.687615  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:36.687653  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.687688  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:36.687740  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.687814  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:36.687850  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.687915  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:36.687969  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.688003  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.688034  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.688061  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:36.688151  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:36.688431  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:36.688576  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:36.688628  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:36.688665  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:36.688711  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:36.688745  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:36.688789  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:36.688823  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:36.688868  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:36.688934  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:36.688977  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:36.689014  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:36.689048  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689084  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:36.689123  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689159  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:36.689194  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689229  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:36.689264  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689303  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:36.689339  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689372  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.689401  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689433  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:36.689466  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689500  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:36.689534  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689567  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:36.689601  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689635  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:36.689670  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689703  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:36.689735  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689773  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:36.689809  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689846  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.689890  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.689918  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:36.689985  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:36.690056  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:36.690200  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:36.690237  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:36.690292  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:36.690368  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:36.690700  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:36.690740  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:36.690780  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:36.690821  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:36.690863  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:36.691103  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:36.691155  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:36.858853  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:36.859078  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:36.859175  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:36.859271  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:36.859335  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:36.859388  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:36.860063  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:36.860115  common.py             0083: save                              <- EXIT
2020-01-04 22:36:36.860184  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:36.860235  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860283  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:36.860343  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860378  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.860409  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860442  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:36.860478  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860519  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:36.860572  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860605  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.860634  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860669  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:36.860702  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860735  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:36.860769  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860801  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:36.860835  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860868  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:36.860900  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.860932  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.860961  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.861003  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:36.861098  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:36.861183  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:36.861229  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:36.861275  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:36.861306  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:36.861341  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:36.920392  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:36.920575  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:36.920624  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:36.920680  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:36.920724  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.920771  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:36.920810  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.920846  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:36.920881  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.920917  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:36.920951  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.920983  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:36.921018  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.921050  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:36.921080  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.921115  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:36.921177  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:36.921230  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:36.921277  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:36.921313  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.921350  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:36.921385  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:36.921425  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:36.921499  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:37.022141  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:37.025126  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:37.025253  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:37.026035  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:37.026105  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:37.133726  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:37.134032  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:37.134136  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.134211  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:37.138507  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:37.143209  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:37.143371  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.143465  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:37.143566  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.143630  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:37.143698  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.143760  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.143805  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.143867  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:37.143946  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:37.144030  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:37.144093  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:37.144156  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:37.144928  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:37.145006  common.py             0083: save                              <- EXIT
2020-01-04 22:36:37.145064  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:37.145280  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:37.145435  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:37.145518  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:37.145587  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:37.145644  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.145703  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:37.145758  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.145818  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:37.145877  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.145943  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:37.146038  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.146096  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.146146  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.146577  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.146646  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.146814  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.146885  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.146944  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:37.147095  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:37.147216  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:37.147291  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:37.147354  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:37.147415  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.147474  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:37.147529  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.147593  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:37.147674  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.147732  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.147782  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.147825  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:37.147911  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:37.148047  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:37.148119  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:37.148233  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:37.148301  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.148358  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:37.148415  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.148478  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:37.148565  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.148620  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.148669  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.148713  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:37.148911  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:37.149085  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:37.149155  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:37.149230  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:37.149289  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:37.149351  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:37.149409  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:37.149466  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:37.149513  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:37.149570  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:37.149617  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:37.149672  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:37.149718  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:37.149776  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:37.149831  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.149886  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:37.149941  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.149996  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.150045  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150104  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:37.150159  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150223  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:37.150279  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150375  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:37.150453  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150510  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:37.150571  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150628  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:37.150688  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150745  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:37.150819  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150873  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.150920  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.150964  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:37.151008  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:37.151064  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:37.151116  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:37.151154  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:37.151706  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:37.151769  common.py             0083: save                              <- EXIT
2020-01-04 22:36:37.151827  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:37.151977  level_11_optimizers_  0165: optimizer_adadelta                -> ENTRY: learning_rate = 0.01, rho = 0.9, epsilon = 1e-06, weight_decay = 0.0001, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:37.152055  optimizers.py         0111: adadelta                          -> ENTRY: ---
2020-01-04 22:36:37.152093  optimizers.py         0111: adadelta                          <- EXIT : ---
2020-01-04 22:36:37.152133  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:37.152168  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.152204  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          adadelta
2020-01-04 22:36:37.152239  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.152291  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:37.152329  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.152375  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0, 'rho': 0.9, 'epsilon': 1e-06}
2020-01-04 22:36:37.152449  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.152487  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.152519  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.152573  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.152606  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.152635  level_11_optimizers_  0165: optimizer_adadelta                <- EXIT
2020-01-04 22:36:37.152674  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:37.152717  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:37.152764  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:37.152800  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.152859  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:37.153015  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:37.153057  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:37.153185  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:37.153233  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:37.153424  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:37.156722  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:37.156862  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.156930  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:37.157001  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.499403  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:37.643725  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.8333333333333334), 6.799447163939476)
2020-01-04 22:36:37.877285  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:37.877452  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.877532  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.557, Train-loss: 0.922 | Val-acc: 0.833333, Val-loss: 0.453, | time: 0.7 sec
2020-01-04 22:36:37.877643  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.877696  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:37.877729  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.877768  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:37.877822  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:37.877862  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:37.877901  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:37.878472  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:37.878522  common.py             0083: save                              <- EXIT
2020-01-04 22:36:37.878569  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:37.878608  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:37.878644  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:37.878678  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.201207  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:38.335835  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.4166666666666667), 22.351873844861984)
2020-01-04 22:36:38.526505  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:38.526660  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.526722  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.707, Train-loss: 0.659 | Val-acc: 0.416667, Val-loss: 1.490, | time: 0.6 sec
2020-01-04 22:36:38.526791  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.526830  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:38.526862  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.526901  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:38.527043  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:38.527087  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:38.527125  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:38.527626  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:38.527674  common.py             0083: save                              <- EXIT
2020-01-04 22:36:38.527724  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:38.527768  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.527810  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.833333
2020-01-04 22:36:38.527848  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.527896  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:38.527927  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.527960  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:38.527993  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.528038  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:38.528067  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568043  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:38.568176  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568260  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:38.568330  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568383  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:38.568440  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568477  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:38.568512  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568546  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:38.568581  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568615  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:38.568661  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568696  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:38.568738  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568775  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:38.568819  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568852  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:38.568893  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568926  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:38.568966  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.568998  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:38.569037  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.569070  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:38.569099  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:38.570033  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.5571428571428572, 0.7071428571428572], [0.8333333333333334, 0.4166666666666667]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:38.733136  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:38.733255  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[0.9221922823360988, 0.6591840822781835], [0.4532964775959651, 1.490124922990799]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:38.891555  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:38.891958  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:38.892023  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:38.892067  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:38.892106  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:38.892143  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:38.892581  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:38.892629  common.py             0083: save                              <- EXIT
2020-01-04 22:36:38.892667  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:39.111004  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111115  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111179  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111234  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111294  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111346  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111391  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:39.111441  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111489  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111536  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111579  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111621  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111662  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111704  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111744  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111786  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:39.111824  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:39.111919  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:39.112421  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:39.112475  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:39.112513  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:39.112553  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:39.112604  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:39.112635  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112662  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:39.112688  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112713  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112738  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:39.112764  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:39.112790  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:39.112815  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112841  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112867  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112892  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112918  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112943  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:39.112968  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:39.113010  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:39.113046  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.113080  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.113137  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.113164  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:39.113264  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:39.113346  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:39.113400  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:39.113459  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:39.113499  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:39.113550  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:39.113580  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:39.113629  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:39.113706  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:39.113769  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:39.113809  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:39.113847  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:39.113884  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:39.113916  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:39.138820  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:39.138919  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:39.139019  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:39.139063  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:39.139131  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:39.139170  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:39.139234  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:39.139267  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:39.139303  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:39.139338  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:39.139374  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:39.139410  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:39.139725  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:39.139771  common.py             0083: save                              <- EXIT
2020-01-04 22:36:39.139803  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:39.139842  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:39.139879  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.139914  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:39.139951  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.139985  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:39.140020  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.140054  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:39.140108  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.140142  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.140172  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.140202  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:39.140292  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:39.140471  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:39.140559  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:39.140597  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:39.140634  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:39.140664  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:39.140697  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:39.140725  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:39.140756  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:39.140785  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:39.140821  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:39.140850  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:39.140884  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:39.140917  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.140951  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:39.140990  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141025  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:39.141059  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141092  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:39.141126  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141158  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:39.141192  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141223  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.141252  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141283  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:39.141315  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141347  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:39.141380  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141412  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:39.141444  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141477  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:39.141510  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141542  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:39.141577  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141614  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:39.141650  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141684  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.141714  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.141739  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:39.141791  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:39.141834  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:39.141973  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:39.142011  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:39.142063  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:39.142105  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:39.142677  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:39.142723  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:39.142764  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:39.142805  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:39.142845  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:39.143082  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:39.143134  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:39.315355  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:39.315609  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:39.315731  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:39.315841  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:39.315900  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:39.315961  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:39.316708  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:39.316761  common.py             0083: save                              <- EXIT
2020-01-04 22:36:39.316836  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:39.316888  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.316938  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:39.317001  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317038  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.317070  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317104  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:39.317142  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317182  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:39.317236  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317274  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.317305  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317342  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:39.317376  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317410  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:39.317446  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317479  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:39.317514  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317548  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:39.317582  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317615  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.317646  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.317686  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:39.317788  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:39.317879  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:39.317927  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:39.317978  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:39.318026  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:39.318065  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:39.379264  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:39.379452  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:39.379502  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:39.379562  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:39.379607  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.379649  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:39.379690  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.379729  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:39.379765  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.379804  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:39.379840  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.379877  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:39.379916  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.379950  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.379981  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.380018  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:39.380079  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:39.380140  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:39.380196  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:39.380232  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.380271  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:39.380308  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.380350  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:39.380427  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:39.487167  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:39.491964  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:39.492155  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:39.493348  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:39.493457  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:39.597501  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:39.597712  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:39.597778  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.597826  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:39.600724  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:39.603353  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:39.603418  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.603463  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:39.603507  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.603545  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:39.603644  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.603682  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.603726  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.603763  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:39.603823  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:39.603881  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:39.603922  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:39.603960  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:39.604561  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:39.604621  common.py             0083: save                              <- EXIT
2020-01-04 22:36:39.604698  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:39.604881  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:39.604985  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:39.605043  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:39.605089  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:39.605125  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.605195  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:39.605249  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.605287  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:39.605341  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.605395  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:39.605474  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.605510  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.605543  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.605819  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.605884  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.605950  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.606013  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.606041  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:39.606139  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:39.606215  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:39.606267  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:39.606305  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:39.606376  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.606425  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:39.606458  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.606495  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:39.606538  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.606571  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.606600  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.606626  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:39.606683  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:39.606767  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:39.606816  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:39.606858  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:39.606890  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.606924  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:39.606957  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.606992  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:39.607046  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.607080  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.607109  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.607135  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:39.607259  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:39.607366  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:39.607405  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:39.607450  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:39.607488  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:39.607525  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:39.607555  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:39.607589  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:39.607616  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:39.607668  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:39.607699  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:39.607735  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:39.607763  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:39.607798  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:39.607832  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.607866  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:39.607900  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.607933  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.607963  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.607996  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:39.608029  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.608070  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:39.608106  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.608140  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:39.608176  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.608213  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:39.608249  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.608282  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:39.608318  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.608352  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:39.608390  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.608429  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.608460  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.608487  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:39.608520  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:39.608557  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:39.608594  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:39.608628  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:39.609068  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:39.609116  common.py             0083: save                              <- EXIT
2020-01-04 22:36:39.609196  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:39.609329  level_11_optimizers_  0188: optimizer_adagrad                 -> ENTRY: learning_rate = 0.01, learning_rate_decay = 0, weight_decay = 0.0001, epsilon = 1e-08, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:39.609403  optimizers.py         0127: adagrad                           -> ENTRY: ---
2020-01-04 22:36:39.609444  optimizers.py         0127: adagrad                           <- EXIT : ---
2020-01-04 22:36:39.609485  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:39.609519  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.609555  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          adagrad
2020-01-04 22:36:39.609589  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.609625  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:39.609660  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.609702  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0, 'lr_decay': 0, 'epsilon': 1e-08}
2020-01-04 22:36:39.609770  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.609805  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.609836  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.609877  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.609908  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.610012  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:39.610049  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.610077  level_11_optimizers_  0188: optimizer_adagrad                 <- EXIT
2020-01-04 22:36:39.610115  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:39.610185  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:39.610244  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:39.610308  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.610391  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:39.610583  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:39.610625  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:39.610761  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:39.610809  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:39.611015  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:39.614139  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:39.614257  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.614310  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:39.614373  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:39.947431  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:40.092310  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.6333333333333333), 11.131283137947321)
2020-01-04 22:36:40.325707  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:40.325868  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:40.325947  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.579, Train-loss: 0.917 | Val-acc: 0.633333, Val-loss: 0.742, | time: 0.7 sec
2020-01-04 22:36:40.326030  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:40.326070  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:40.326103  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:40.326141  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:40.326196  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:40.326237  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:40.326276  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:40.326844  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:40.326893  common.py             0083: save                              <- EXIT
2020-01-04 22:36:40.326939  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:40.326976  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:40.327012  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:40.327046  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:40.661244  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:40.798706  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.7666666666666667), 7.339142955839634)
2020-01-04 22:36:41.039778  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:41.039923  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.039999  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.757, Train-loss: 0.453 | Val-acc: 0.766667, Val-loss: 0.489, | time: 0.7 sec
2020-01-04 22:36:41.040082  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.040122  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:41.040156  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.040195  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:41.040254  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:41.040296  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:41.040335  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:41.040831  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:41.040883  common.py             0083: save                              <- EXIT
2020-01-04 22:36:41.040936  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:41.040980  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.041022  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.766667
2020-01-04 22:36:41.041061  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.041095  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:41.041126  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.041159  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:41.041192  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.041224  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:41.041253  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.081797  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:41.081919  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.081975  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:41.082045  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082085  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:41.082144  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082180  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:41.082217  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082251  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:41.082287  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082334  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:41.082380  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082414  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:41.082457  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082494  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:41.082538  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082571  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:41.082614  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082646  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:41.082686  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082723  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:41.082764  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.082796  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:41.082826  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:41.440950  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.5785714285714286, 0.7571428571428571], [0.6333333333333333, 0.7666666666666667]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:41.648212  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:41.648335  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[0.9170285414372171, 0.45274105540343695], [0.7420855425298214, 0.4892761970559756]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:41.804175  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:41.804589  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:41.804657  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:41.804716  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:41.804755  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:41.804820  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:41.805296  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:41.805358  common.py             0083: save                              <- EXIT
2020-01-04 22:36:41.805398  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:42.059372  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059484  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059546  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059601  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059652  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059702  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059747  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:42.059802  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059850  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059896  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059937  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.059979  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.060018  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.060059  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.060099  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.060146  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:42.060184  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:42.060279  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:42.060776  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:42.060830  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:42.060868  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:42.060908  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:42.060959  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:42.060989  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061015  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:42.061040  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061069  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061095  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:42.061120  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:42.061145  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:42.061170  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061195  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061221  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061247  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061272  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061297  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:42.061322  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:42.061363  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:42.061399  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.061432  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.061462  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.061488  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:42.061585  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:42.061667  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:42.061719  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:42.061777  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:42.061815  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:42.061867  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:42.061897  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:42.061945  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:42.062017  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:42.062077  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:42.062154  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:42.062193  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:42.062230  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:42.062262  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:42.086626  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:42.086724  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:42.086824  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:42.086867  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:42.086933  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:42.086971  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:42.087031  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:42.087063  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:42.087100  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:42.087136  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:42.087170  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:42.087204  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:42.087511  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:42.087557  common.py             0083: save                              <- EXIT
2020-01-04 22:36:42.087589  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:42.087630  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:42.087666  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.087702  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:42.087753  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.087867  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:42.087909  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.087944  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:42.087999  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.088033  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.088064  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.088091  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:42.088180  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:42.088474  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:42.088604  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:42.088642  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:42.088679  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:42.088724  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:42.088772  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:42.088865  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:42.088910  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:42.088942  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:42.089006  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:42.089063  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:42.089099  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:42.089132  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089167  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:42.089206  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089241  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:42.089275  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089308  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:42.089343  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089376  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:42.089410  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089442  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.089471  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089503  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:42.089535  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089568  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:42.089602  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089634  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:42.089667  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089700  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:42.089734  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089766  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:42.089799  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089834  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:42.089870  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089906  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.089935  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.089960  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:42.090014  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:42.090056  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:42.090198  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:42.090234  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:42.090289  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:42.090378  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:42.090711  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:42.090768  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:42.090807  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:42.090848  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:42.090889  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:42.091126  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:42.091179  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:42.262013  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:42.262241  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:42.262386  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:42.262490  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:42.262562  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:42.262625  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:42.263297  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:42.263349  common.py             0083: save                              <- EXIT
2020-01-04 22:36:42.263453  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:42.263503  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.263552  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:42.263613  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.263649  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.263680  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.263713  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:42.263750  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.263789  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:42.263842  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.263875  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.263905  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.263940  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:42.263973  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.264007  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:42.264042  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.264075  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:42.264109  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.264143  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:42.264176  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.264208  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.264241  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.264286  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:42.264377  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:42.264462  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:42.264508  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:42.264554  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:42.264586  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:42.264622  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:42.324319  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:42.324505  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:42.324556  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:42.324613  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:42.324657  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.324698  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:42.324736  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.324774  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:42.324809  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.324846  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:42.324881  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.324915  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:42.324951  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.324984  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.325015  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.325051  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:42.325111  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:42.325163  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:42.325209  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:42.325243  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.325281  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:42.325316  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.325356  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:42.325428  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:42.430285  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:42.435034  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:42.435194  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:42.436490  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:42.436610  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:42.546705  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:42.547011  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:42.547117  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.547192  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:42.551701  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:42.556023  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:42.556176  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.556256  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:42.556332  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.556398  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:42.556467  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.556526  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.556577  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.556636  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:42.556710  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:42.556801  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:42.556866  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:42.556930  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:42.557704  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:42.557800  common.py             0083: save                              <- EXIT
2020-01-04 22:36:42.557881  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:42.558098  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:42.558265  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:42.558414  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:42.558504  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:42.558561  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.558621  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:42.558675  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.558735  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:42.558793  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.558859  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:42.558962  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.559023  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.559074  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.559424  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.559505  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.559663  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.559736  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.559794  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:42.559937  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:42.560053  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:42.560141  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:42.560210  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:42.560267  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.560326  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:42.560381  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.560444  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:42.560515  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.560570  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.560619  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.560662  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:42.560753  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:42.560888  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:42.560968  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:42.561037  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:42.561090  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.561149  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:42.561205  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.561294  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:42.561437  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.561520  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.561569  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.561613  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:42.561808  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:42.561973  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:42.562038  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:42.562114  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:42.562173  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:42.562234  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:42.562292  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:42.562402  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:42.562461  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:42.562519  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:42.562567  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:42.562623  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:42.562681  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:42.562752  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:42.562836  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.562935  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:42.563006  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563060  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.563107  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563159  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:42.563212  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563276  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:42.563334  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563390  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:42.563450  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563503  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:42.563551  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563603  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:42.563874  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563913  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:42.563953  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.563987  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.564120  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.564154  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:42.564204  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:42.564241  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:42.564276  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:42.564311  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:42.564835  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:42.564894  common.py             0083: save                              <- EXIT
2020-01-04 22:36:42.564993  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:42.565210  level_11_optimizers_  0215: optimizer_nesterov_adam           -> ENTRY: learning_rate = 0.01, beta1 = 0.9, beta2 = 0.999, epsilon = 1e-08, weight_decay = 0.0001, amsgrad = False, momentum_decay = 0.004, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:42.565500  optimizers.py         0144: nesterov_adam                     -> ENTRY: ---
2020-01-04 22:36:42.565557  optimizers.py         0144: nesterov_adam                     <- EXIT : ---
2020-01-04 22:36:42.565601  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:42.565636  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.565673  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          nadam
2020-01-04 22:36:42.565709  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.565746  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:42.565782  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.565829  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0, 'beta1': 0.9, 'beta2': 0.999, 'epsilon': 1e-08, 'amsgrad': False, 'momentum_decay': 0.004}
2020-01-04 22:36:42.565957  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.566018  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.566066  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.566225  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.566276  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.566414  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:42.566482  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.566530  level_11_optimizers_  0215: optimizer_nesterov_adam           <- EXIT
2020-01-04 22:36:42.566603  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:42.566666  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:42.566734  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:42.566788  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.566839  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:42.567035  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:42.567098  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:42.567259  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:42.567335  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:42.567602  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:42.571363  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:42.571480  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.571535  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:42.571587  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:42.903340  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:43.123712  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.7666666666666667), 7.0895929373800755)
2020-01-04 22:36:43.353966  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:43.354216  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:43.354280  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.714, Train-loss: 0.932 | Val-acc: 0.766667, Val-loss: 0.473, | time: 0.8 sec
2020-01-04 22:36:43.354393  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:43.354434  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:43.354467  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:43.354506  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:43.354562  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:43.354602  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:43.354639  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:43.355258  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:43.355306  common.py             0083: save                              <- EXIT
2020-01-04 22:36:43.355372  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:43.355413  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:43.355448  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:43.355481  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:43.676099  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:43.821603  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.75), 13.78981278091669)
2020-01-04 22:36:44.037247  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:44.037477  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.037555  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.650, Train-loss: 1.060 | Val-acc: 0.750000, Val-loss: 0.919, | time: 0.7 sec
2020-01-04 22:36:44.037635  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.037674  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.037706  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.037745  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:44.037801  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:44.037841  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:44.037879  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:44.038434  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:44.038482  common.py             0083: save                              <- EXIT
2020-01-04 22:36:44.038533  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:44.038577  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.038620  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.766667
2020-01-04 22:36:44.038658  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.038691  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.038721  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.038754  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:44.038786  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.038818  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.038850  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.078346  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:44.078546  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.078603  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:44.078670  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.078710  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:44.078767  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.078804  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:44.078839  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.078873  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:44.078923  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.078958  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:44.079029  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.079076  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:44.079118  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.079154  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:44.079211  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.079245  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:44.079288  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.079322  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:44.079363  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.079410  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:44.079449  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.079482  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.079512  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.080431  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.7142857142857143, 0.65], [0.7666666666666667, 0.75]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:44.239789  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:44.239911  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[0.9319825871714524, 1.0601124687918595], [0.4726395291586717, 0.9193208520611127]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:44.400961  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:44.401366  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:44.401433  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:44.401477  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:44.401517  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:44.401554  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:44.402018  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:44.402067  common.py             0083: save                              <- EXIT
2020-01-04 22:36:44.402108  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:44.569961  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570084  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570145  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570200  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570251  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570301  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570368  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:44.570444  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570492  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570537  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570577  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570618  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570657  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570699  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570738  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570779  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:44.570817  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:44.570917  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:44.571450  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:44.571505  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:44.571542  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:44.571582  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:44.571633  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:44.571663  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571689  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:44.571715  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571741  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571766  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:44.571791  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:44.571816  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:44.571840  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571866  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571891  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571917  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571942  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571966  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:44.571991  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:44.572031  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:44.572072  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.572106  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.572136  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.572162  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:44.572262  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:44.572343  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:44.572395  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:44.572454  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:44.572493  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:44.572543  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:44.572574  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:44.572621  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:44.572693  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:44.572755  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:44.572793  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:44.572831  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:44.572867  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:44.572898  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:44.597326  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:44.597424  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:44.597516  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:44.597558  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:44.597630  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:44.597668  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:44.597731  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:44.597763  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:44.597799  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:44.597835  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:44.597869  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:44.597909  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:44.598234  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:44.598280  common.py             0083: save                              <- EXIT
2020-01-04 22:36:44.598312  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:44.598415  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:44.598451  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.598486  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:44.598523  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.598557  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:44.598594  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.598628  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:44.598682  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.598716  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.598746  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.598773  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:44.598860  gluon_prototype.py    0045: Default                           -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, model_name = resnet18_v1, freeze_base_network = True, num_epochs = 2
2020-01-04 22:36:44.599040  level_6_params_main.  0027: Dataset_Params                    -> ENTRY: dataset_path = ../../system_check_tests/datasets/dataset_cats_dogs_train, path_to_csv = False, delimiter = ,, split = 0.7, input_size = 224, batch_size = 4, shuffle_data = True, num_processors = 4
2020-01-04 22:36:44.599130  params.py             0006: set_input_size                    -> ENTRY: ---
2020-01-04 22:36:44.599167  params.py             0006: set_input_size                    <- EXIT : ---
2020-01-04 22:36:44.599203  params.py             0012: set_batch_size                    -> ENTRY: ---
2020-01-04 22:36:44.599232  params.py             0012: set_batch_size                    <- EXIT : ---
2020-01-04 22:36:44.599265  params.py             0018: set_data_shuffle                  -> ENTRY: ---
2020-01-04 22:36:44.599294  params.py             0018: set_data_shuffle                  <- EXIT : ---
2020-01-04 22:36:44.599325  params.py             0027: set_num_processors                -> ENTRY: ---
2020-01-04 22:36:44.599353  params.py             0027: set_num_processors                <- EXIT : ---
2020-01-04 22:36:44.599389  paths.py              0006: set_dataset_train_path            -> ENTRY: ---
2020-01-04 22:36:44.599418  paths.py              0006: set_dataset_train_path            <- EXIT : ---
2020-01-04 22:36:44.599454  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Details
2020-01-04 22:36:44.599487  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599522  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train path:     ../../system_check_tests/datasets/dataset_cats_dogs_train
2020-01-04 22:36:44.599562  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599598  base_class.py         0137: custom_print                      -> ENTRY: msg =     Val path:       None
2020-01-04 22:36:44.599631  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599669  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV train path: None
2020-01-04 22:36:44.599704  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599737  base_class.py         0137: custom_print                      -> ENTRY: msg =     CSV val path:   None
2020-01-04 22:36:44.599771  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599803  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.599832  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599864  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Params
2020-01-04 22:36:44.599896  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599929  base_class.py         0137: custom_print                      -> ENTRY: msg =     Input Size:   224
2020-01-04 22:36:44.599963  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.599996  base_class.py         0137: custom_print                      -> ENTRY: msg =     Batch Size:   4
2020-01-04 22:36:44.600028  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.600062  base_class.py         0137: custom_print                      -> ENTRY: msg =     Data Shuffle: True
2020-01-04 22:36:44.600095  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.600128  base_class.py         0137: custom_print                      -> ENTRY: msg =     Processors:   4
2020-01-04 22:36:44.600160  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.600196  base_class.py         0137: custom_print                      -> ENTRY: msg =     Train-val split:   0.7
2020-01-04 22:36:44.600232  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.600267  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.600296  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.600322  level_6_params_main.  0027: Dataset_Params                    <- EXIT
2020-01-04 22:36:44.600373  level_9_transforms_m  0051: apply_random_horizontal_flip      -> ENTRY: ---
2020-01-04 22:36:44.600415  transforms.py         0086: transform_random_horizontal_flip  -> ENTRY: ---
2020-01-04 22:36:44.600553  transforms.py         0086: transform_random_horizontal_flip  <- EXIT : ---
2020-01-04 22:36:44.600590  level_9_transforms_m  0051: apply_random_horizontal_flip      <- EXIT
2020-01-04 22:36:44.600646  level_9_transforms_m  0088: apply_normalize                   -> ENTRY: ---
2020-01-04 22:36:44.600688  transforms.py         0180: transform_normalize               -> ENTRY: ---
2020-01-04 22:36:44.600962  transforms.py         0180: transform_normalize               <- EXIT : ---
2020-01-04 22:36:44.601001  level_9_transforms_m  0088: apply_normalize                   <- EXIT
2020-01-04 22:36:44.601039  level_14_master_main  0016: Dataset                           -> ENTRY
2020-01-04 22:36:44.601079  level_1_dataset_base  0105: set_dataset_final                 -> ENTRY: test = False
2020-01-04 22:36:44.601119  return_transform.py   0007: set_transform_trainval            -> ENTRY: ---
2020-01-04 22:36:44.601353  return_transform.py   0007: set_transform_trainval            <- EXIT : ---
2020-01-04 22:36:44.601402  level_1_dataset_base  0016: set_dataset_dataloader            -> ENTRY: test = False
2020-01-04 22:36:44.774968  level_1_dataset_base  0016: set_dataset_dataloader            <- EXIT
2020-01-04 22:36:44.775241  level_1_dataset_base  0105: set_dataset_final                 <- EXIT
2020-01-04 22:36:44.775335  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:44.775444  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:44.775507  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:44.775556  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:44.776331  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:44.776384  common.py             0083: save                              <- EXIT
2020-01-04 22:36:44.776479  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Train Transforms
2020-01-04 22:36:44.776532  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.776580  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:44.776643  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.776678  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.776709  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.776742  base_class.py         0137: custom_print                      -> ENTRY: msg = Pre-Composed Val Transforms
2020-01-04 22:36:44.776778  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.776817  base_class.py         0137: custom_print                      -> ENTRY: msg = [{'RandomHorizontalFlip': {'p': 0.8}}, {'Normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}]
2020-01-04 22:36:44.776869  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.776902  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.776931  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.776966  base_class.py         0137: custom_print                      -> ENTRY: msg = Dataset Numbers
2020-01-04 22:36:44.776998  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.777031  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num train images: 140
2020-01-04 22:36:44.777065  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.777097  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num val images:   60
2020-01-04 22:36:44.777131  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.777163  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num classes:      2
2020-01-04 22:36:44.777196  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.777227  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.777256  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.777295  level_14_master_main  0016: Dataset                           <- EXIT
2020-01-04 22:36:44.777389  level_6_params_main.  0078: Model_Params                      -> ENTRY: model_name = resnet18_v1, freeze_base_network = True, use_gpu = True, use_pretrained = True, model_path = False
2020-01-04 22:36:44.777475  params.py             0006: set_model_name                    -> ENTRY: ---
2020-01-04 22:36:44.777521  params.py             0006: set_model_name                    <- EXIT : ---
2020-01-04 22:36:44.777569  params.py             0030: set_pretrained                    -> ENTRY: ---
2020-01-04 22:36:44.777602  params.py             0030: set_pretrained                    <- EXIT : ---
2020-01-04 22:36:44.777637  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:44.837827  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:44.838015  params.py             0037: set_freeze_base_network           -> ENTRY: ---
2020-01-04 22:36:44.838071  params.py             0037: set_freeze_base_network           <- EXIT : ---
2020-01-04 22:36:44.838129  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Params
2020-01-04 22:36:44.838173  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838214  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model name:           resnet18_v1
2020-01-04 22:36:44.838256  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838293  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use Gpu:              True
2020-01-04 22:36:44.838356  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838396  base_class.py         0137: custom_print                      -> ENTRY: msg =     Use pretrained:       True
2020-01-04 22:36:44.838433  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838480  base_class.py         0137: custom_print                      -> ENTRY: msg =     Freeze base network:  True
2020-01-04 22:36:44.838517  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838550  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:44.838580  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838613  level_6_params_main.  0078: Model_Params                      <- EXIT
2020-01-04 22:36:44.838671  level_14_master_main  0136: Model                             -> ENTRY
2020-01-04 22:36:44.838727  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:44.838775  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:44.838811  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838849  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:44.838885  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:44.838925  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:44.838997  models.py             0022: get_base_model                    -> ENTRY: model_name = resnet18_v1, use_pretrained = True, num_classes = 2, freeze_base_network = True
2020-01-04 22:36:44.950215  common.py             0007: set_parameter_requires_grad       -> ENTRY: ---
2020-01-04 22:36:44.955017  common.py             0007: set_parameter_requires_grad       <- EXIT : ---
2020-01-04 22:36:44.955216  models.py             0022: get_base_model                    <- EXIT : ---
2020-01-04 22:36:44.956620  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:44.956734  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:45.068058  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:45.068297  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:45.068391  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.068438  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:45.071190  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:45.073711  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           resnet18_v1
2020-01-04 22:36:45.073785  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.073836  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  61
2020-01-04 22:36:45.073882  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.073932  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:45.073974  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.074010  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.074041  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.074076  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:45.074119  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:45.074183  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:45.074225  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:45.074263  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:45.074981  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:45.075034  common.py             0083: save                              <- EXIT
2020-01-04 22:36:45.075099  level_14_master_main  0136: Model                             <- EXIT
2020-01-04 22:36:45.075273  level_11_optimizers_  0022: optimizer_sgd                     -> ENTRY: learning_rate = 0.01, momentum = 0, weight_decay = 0, momentum_dampening_rate = 0, clipnorm = 0.0, clipvalue = 0.0
2020-01-04 22:36:45.075377  optimizers.py         0009: sgd                               -> ENTRY: ---
2020-01-04 22:36:45.075425  optimizers.py         0009: sgd                               <- EXIT : ---
2020-01-04 22:36:45.075465  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:45.075499  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.075535  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sgd
2020-01-04 22:36:45.075569  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.075604  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:45.075639  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.075679  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0, 'weight_decay': 0, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:45.075739  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.075773  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.075803  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.076040  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.076106  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.076198  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.076262  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.076290  level_11_optimizers_  0022: optimizer_sgd                     <- EXIT
2020-01-04 22:36:45.076392  level_10_schedulers_  0031: lr_step_decrease                  -> ENTRY: step_size = 1, gamma = 0.98, last_epoch = -1
2020-01-04 22:36:45.076468  schedulers.py         0015: scheduler_step                    -> ENTRY: ---
2020-01-04 22:36:45.076511  schedulers.py         0015: scheduler_step                    <- EXIT : ---
2020-01-04 22:36:45.076548  base_class.py         0137: custom_print                      -> ENTRY: msg = Learning rate scheduler
2020-01-04 22:36:45.076584  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.076618  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:   steplr
2020-01-04 22:36:45.076655  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.076694  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params: {'step_size': 1, 'gamma': 0.98, 'last_epoch': -1}
2020-01-04 22:36:45.076737  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.076769  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.076798  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.076824  level_10_schedulers_  0031: lr_step_decrease                  <- EXIT
2020-01-04 22:36:45.076879  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:45.076963  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:45.077004  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:45.077047  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:45.077079  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.077113  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:45.077147  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.077183  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:45.077234  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.077267  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.077297  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.077359  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:45.077528  level_6_params_main.  0112: Training_Params                   -> ENTRY: num_epochs = 2, display_progress = True, display_progress_realtime = True, save_intermediate_models = True, intermediate_model_prefix = intermediate_model_, save_training_logs = True
2020-01-04 22:36:45.077634  params.py             0006: set_num_epochs                    -> ENTRY: ---
2020-01-04 22:36:45.077674  params.py             0006: set_num_epochs                    <- EXIT : ---
2020-01-04 22:36:45.077718  params.py             0014: set_display_progress_realtime     -> ENTRY: ---
2020-01-04 22:36:45.077752  params.py             0014: set_display_progress_realtime     <- EXIT : ---
2020-01-04 22:36:45.077786  params.py             0021: set_display_progress              -> ENTRY: ---
2020-01-04 22:36:45.077815  params.py             0021: set_display_progress              <- EXIT : ---
2020-01-04 22:36:45.077849  params.py             0028: set_save_intermediate_models      -> ENTRY: ---
2020-01-04 22:36:45.077877  params.py             0028: set_save_intermediate_models      <- EXIT : ---
2020-01-04 22:36:45.077910  params.py             0035: set_save_training_logs            -> ENTRY: ---
2020-01-04 22:36:45.077938  params.py             0035: set_save_training_logs            <- EXIT : ---
2020-01-04 22:36:45.077973  params.py             0042: set_intermediate_model_prefix     -> ENTRY: ---
2020-01-04 22:36:45.078000  params.py             0042: set_intermediate_model_prefix     <- EXIT : ---
2020-01-04 22:36:45.078034  base_class.py         0137: custom_print                      -> ENTRY: msg = Training params
2020-01-04 22:36:45.078067  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078101  base_class.py         0137: custom_print                      -> ENTRY: msg =     Num Epochs: 2
2020-01-04 22:36:45.078138  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078171  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.078200  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078232  base_class.py         0137: custom_print                      -> ENTRY: msg = Display params
2020-01-04 22:36:45.078263  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078301  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress:          True
2020-01-04 22:36:45.078372  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078432  base_class.py         0137: custom_print                      -> ENTRY: msg =     Display progress realtime: True
2020-01-04 22:36:45.078467  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078500  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Training logs:        True
2020-01-04 22:36:45.078534  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078566  base_class.py         0137: custom_print                      -> ENTRY: msg =     Save Intermediate models:  True
2020-01-04 22:36:45.078602  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078634  base_class.py         0137: custom_print                      -> ENTRY: msg =     Intermediate model prefix: intermediate_model_
2020-01-04 22:36:45.078671  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078703  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.078732  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.078758  level_6_params_main.  0112: Training_Params                   <- EXIT
2020-01-04 22:36:45.078791  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:45.078824  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:45.078857  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:45.078890  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:45.079310  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:45.079357  common.py             0083: save                              <- EXIT
2020-01-04 22:36:45.079429  gluon_prototype.py    0045: Default                           <- EXIT
2020-01-04 22:36:45.079541  level_11_optimizers_  0238: optimizer_signum                  -> ENTRY: learning_rate = 0.01, momentum = 0.9, weight_decay = 0.0001
2020-01-04 22:36:45.079600  optimizers.py         0162: signum                            -> ENTRY: ---
2020-01-04 22:36:45.079634  optimizers.py         0162: signum                            <- EXIT : ---
2020-01-04 22:36:45.079673  base_class.py         0137: custom_print                      -> ENTRY: msg = Optimizer
2020-01-04 22:36:45.079706  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.079777  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          signum
2020-01-04 22:36:45.079813  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.079863  base_class.py         0137: custom_print                      -> ENTRY: msg =     Learning rate: 0.01
2020-01-04 22:36:45.079900  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.079950  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'lr': 0.01, 'momentum': 0.9, 'weight_decay': 0.0001, 'momentum_dampening_rate': 0, 'clipnorm': 0.0, 'clipvalue': 0.0}
2020-01-04 22:36:45.080011  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.080052  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.080084  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.080200  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.080237  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.080266  level_11_optimizers_  0238: optimizer_signum                  <- EXIT
2020-01-04 22:36:45.080308  level_14_master_main  0150: Train                             -> ENTRY
2020-01-04 22:36:45.080366  level_3_training_bas  0098: set_training_final                -> ENTRY
2020-01-04 22:36:45.080413  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Start
2020-01-04 22:36:45.080448  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.080482  return_scheduler.py   0006: load_scheduler                    -> ENTRY: ---
2020-01-04 22:36:45.080651  return_scheduler.py   0006: load_scheduler                    <- EXIT : ---
2020-01-04 22:36:45.080693  return_optimizer.py   0005: load_optimizer                    -> ENTRY: ---
2020-01-04 22:36:45.080838  return_optimizer.py   0005: load_optimizer                    <- EXIT : ---
2020-01-04 22:36:45.080892  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:45.081108  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:45.083881  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 1/2
2020-01-04 22:36:45.083940  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.083982  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:45.084018  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.439120  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:45.593152  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.7), 43.87319471937133)
2020-01-04 22:36:45.839729  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.01
2020-01-04 22:36:45.839932  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.840012  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 1] Train-acc: 0.750, Train-loss: 2.336 | Val-acc: 0.700000, Val-loss: 2.925, | time: 0.8 sec
2020-01-04 22:36:45.840094  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.840134  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:45.840167  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.840206  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:45.840261  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:45.840300  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:45.840337  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:45.840896  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:45.840946  common.py             0083: save                              <- EXIT
2020-01-04 22:36:45.840993  base_class.py         0137: custom_print                      -> ENTRY: msg =     Epoch 2/2
2020-01-04 22:36:45.841032  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:45.841069  base_class.py         0137: custom_print                      -> ENTRY: msg =     ----------
2020-01-04 22:36:45.841104  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.180605  level_3_training_bas  0068: set_training_evaluation           -> ENTRY
2020-01-04 22:36:46.312864  level_3_training_bas  0068: set_training_evaluation           <- EXIT : (('accuracy', 0.7833333333333333), 33.61511250071271)
2020-01-04 22:36:46.581492  base_class.py         0137: custom_print                      -> ENTRY: msg =     curr_lr - 0.0098
2020-01-04 22:36:46.581685  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.581762  base_class.py         0137: custom_print                      -> ENTRY: msg =     [Epoch 2] Train-acc: 0.829, Train-loss: 1.982 | Val-acc: 0.783333, Val-loss: 2.241, | time: 0.7 sec
2020-01-04 22:36:46.581844  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.581884  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:46.581916  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.581955  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:46.582010  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:46.582050  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:46.582088  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:46.582627  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:46.582675  common.py             0083: save                              <- EXIT
2020-01-04 22:36:46.582726  base_class.py         0137: custom_print                      -> ENTRY: msg =     Training completed in: 0m 2s
2020-01-04 22:36:46.582770  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.582813  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best val Acc:          0.783333
2020-01-04 22:36:46.582851  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.582885  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:46.582915  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.582948  base_class.py         0137: custom_print                      -> ENTRY: msg = Training End
2020-01-04 22:36:46.582980  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.583012  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:46.583041  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.638487  base_class.py         0137: custom_print                      -> ENTRY: msg = Training Outputs
2020-01-04 22:36:46.638660  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.638718  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Dir:   /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:46.638786  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.638826  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log Dir:     /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:46.638884  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.638920  base_class.py         0137: custom_print                      -> ENTRY: msg =     Final model: final
2020-01-04 22:36:46.638957  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.638991  base_class.py         0137: custom_print                      -> ENTRY: msg =     Best model:  best_model
2020-01-04 22:36:46.639031  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.639066  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 1 - Validation accuracy history log: val_acc_history.npy
2020-01-04 22:36:46.639111  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.639144  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 2 - Validation loss history log:     val_loss_history.npy
2020-01-04 22:36:46.639187  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.639224  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 3 - Training accuracy history log:   train_acc_history.npy
2020-01-04 22:36:46.639295  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.639328  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 4 - Training loss history log:       train_loss_history.npy
2020-01-04 22:36:46.639370  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.639402  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 5 - Training curve:                  train_loss_history.npy
2020-01-04 22:36:46.639442  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.639474  base_class.py         0137: custom_print                      -> ENTRY: msg =     Log 6 - Validation curve:                train_loss_history.npy
2020-01-04 22:36:46.639514  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.639546  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:46.639576  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:46.982721  line.py               0007: create_train_test_plots_accuracy  -> ENTRY: plots = [[0.75, 0.8285714285714286], [0.7, 0.7833333333333333]], labels = ['Epoch Num', 'Accuracy'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:47.177915  line.py               0007: create_train_test_plots_accuracy  <- EXIT
2020-01-04 22:36:47.178032  line.py               0020: create_train_test_plots_loss      -> ENTRY: plots = [[2.3355473035335437, 1.9822313687106332], [2.9248796479580883, 2.2410075000475143]], labels = ['Epoch Num', 'Loss'], log_dir = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/output/logs/, show_img = False, save_img = True
2020-01-04 22:36:47.329586  line.py               0020: create_train_test_plots_loss      <- EXIT
2020-01-04 22:36:47.330023  level_3_training_bas  0098: set_training_final                <- EXIT
2020-01-04 22:36:47.330094  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.330140  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.330179  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.330216  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.330742  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.330792  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.330852  level_14_master_main  0150: Train                             <- EXIT
2020-01-04 22:36:47.507330  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507441  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507509  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507566  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507620  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507671  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507717  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.507773  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507822  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507869  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507912  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507954  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.507996  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.508038  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.508078  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.508119  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.508157  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.508259  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.508835  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.508890  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.508928  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.508969  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.509021  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.509051  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509078  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.509104  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509130  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509155  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.509180  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.509206  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.509232  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509257  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509283  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509308  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509334  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509359  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.509385  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.509427  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.509464  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.509498  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.509528  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.509554  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.509656  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.509739  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.509792  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.509851  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.509891  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.509942  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.509973  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.510025  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.510099  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.510161  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.510200  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.510238  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.510275  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.510307  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.534554  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.534655  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.534754  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.534797  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.534880  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.534934  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.535040  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.535089  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.535140  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.535178  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.535215  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.535265  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.535596  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.535644  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.535693  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.535734  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.535784  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.535819  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.535856  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.535891  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.535929  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.535963  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.536018  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.536052  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.536086  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.536115  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.536649  level_12_losses_main  0017: loss_l1                           -> ENTRY: weight = None, batch_axis = 0
2020-01-04 22:36:47.536758  losses.py             0008: l1                                -> ENTRY: ---
2020-01-04 22:36:47.536803  losses.py             0008: l1                                <- EXIT : ---
2020-01-04 22:36:47.536859  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.536896  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.536935  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          l1
2020-01-04 22:36:47.536970  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.537009  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0}
2020-01-04 22:36:47.537051  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.537085  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.537116  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.537143  level_12_losses_main  0017: loss_l1                           <- EXIT
2020-01-04 22:36:47.537178  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.537301  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.537800  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.537893  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.537955  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538000  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538042  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538083  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538121  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.538173  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538215  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538271  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538348  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538394  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538434  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538488  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538527  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538567  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.538603  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.538692  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.539402  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.539460  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.539512  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.539553  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.539605  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.539637  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539663  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.539689  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539715  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539741  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.539766  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.539792  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.539817  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539844  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539870  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539899  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539926  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539952  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.539978  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.540017  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.540054  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.540089  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.540120  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.540146  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.540230  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.540308  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.540359  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.540419  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.540458  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.540509  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.540541  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.540585  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.540657  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.540719  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.540756  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.540795  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.540828  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.540860  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.541018  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.541061  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.541140  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.541179  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.541243  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.541280  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.541342  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.541378  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.541412  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.541446  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.541479  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.541514  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.541815  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.541862  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.541895  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.541933  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.541970  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.542006  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.542043  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.542077  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.542114  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.542149  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.542203  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.542237  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.542268  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.542294  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.542723  level_12_losses_main  0031: loss_l2                           -> ENTRY: weight = 1.0, batch_axis = 0
2020-01-04 22:36:47.542812  losses.py             0019: l2                                -> ENTRY: ---
2020-01-04 22:36:47.542854  losses.py             0019: l2                                <- EXIT : ---
2020-01-04 22:36:47.542897  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.542933  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.542971  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          l2
2020-01-04 22:36:47.543004  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.543043  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': 1.0, 'batch_axis': 0}
2020-01-04 22:36:47.543085  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.543119  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.543150  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.543176  level_12_losses_main  0031: loss_l2                           <- EXIT
2020-01-04 22:36:47.543207  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.543294  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.543707  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.543782  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.543830  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.543878  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.543922  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.543963  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544001  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.544040  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544080  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544119  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544158  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544199  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544238  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544277  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544317  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544357  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.544392  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.544476  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.545008  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.545057  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.545095  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.545135  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.545182  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.545213  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545240  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.545266  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545292  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545318  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.545344  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.545369  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.545395  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545420  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545446  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545471  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545497  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545524  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.545550  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.545587  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.545624  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.545659  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.545691  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.545718  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.545801  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.545880  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.545932  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.545992  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.546032  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.546083  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.546115  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.546162  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.546236  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.546299  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.546349  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.546402  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.546436  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.546466  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.546614  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.546656  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.546726  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.546764  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.546829  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.546866  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.546928  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.546960  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.546993  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.547025  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.547058  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.547093  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.547370  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.547416  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.547448  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.547486  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.547522  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.547558  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.547595  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.547629  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.547666  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.547700  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.547754  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.547789  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.547823  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.547850  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.548167  level_12_losses_main  0047: loss_softmax_crossentropy         -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:47.548271  losses.py             0033: softmax_crossentropy              -> ENTRY: ---
2020-01-04 22:36:47.548313  losses.py             0033: softmax_crossentropy              <- EXIT : ---
2020-01-04 22:36:47.548357  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.548391  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.548429  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          softmaxcrossentropy
2020-01-04 22:36:47.548465  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.548503  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:47.548556  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.548590  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.548621  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.548648  level_12_losses_main  0047: loss_softmax_crossentropy         <- EXIT
2020-01-04 22:36:47.548679  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.548763  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.549169  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549253  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549297  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549339  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549379  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549418  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549455  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.549492  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549531  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549570  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549607  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549645  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549682  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549720  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549757  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549796  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.549830  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.549908  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.550602  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.550654  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.550692  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.550732  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.550779  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.550809  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.550836  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.550862  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.550887  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.550912  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.550937  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.550962  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.550988  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.551013  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.551041  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.551068  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.551093  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.551118  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.551144  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.551181  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.551218  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.551251  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.551281  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.551307  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.551385  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.551462  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.551528  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.551604  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.551644  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.551708  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.551754  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.551799  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.551885  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.551945  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.551983  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.552020  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.552052  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.552083  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.552230  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.552273  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.552344  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.552382  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.552446  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.552482  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.552547  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.552578  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.552611  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.552644  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.552678  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.552712  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.552990  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.553036  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.553068  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.553107  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.553144  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.553180  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.553218  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.553252  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.553288  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.553323  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.553377  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.553412  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.553442  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.553469  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.553767  level_12_losses_main  0064: loss_crossentropy                 -> ENTRY: weight = None, batch_axis = 0, axis_to_sum_over = -1, label_as_categories = True, label_smoothing = False
2020-01-04 22:36:47.553864  losses.py             0050: crossentropy                      -> ENTRY: ---
2020-01-04 22:36:47.553907  losses.py             0050: crossentropy                      <- EXIT : ---
2020-01-04 22:36:47.553951  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.553987  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.554025  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          crossentropy
2020-01-04 22:36:47.554061  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.554101  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1, 'label_as_categories': True, 'label_smoothing': False}
2020-01-04 22:36:47.554156  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.554191  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.554222  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.554249  level_12_losses_main  0064: loss_crossentropy                 <- EXIT
2020-01-04 22:36:47.554280  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.554398  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.554691  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.554773  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.554820  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.554862  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.554903  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.554944  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.554981  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.555020  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555060  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555099  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555138  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555177  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555216  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555255  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555294  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555334  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.555369  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.555449  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.555983  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.556033  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.556071  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.556112  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.556160  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.556191  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556218  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.556244  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556270  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556296  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.556322  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.556347  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.556373  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556399  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556424  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556450  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556476  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556502  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.556527  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.556565  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.556603  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.556639  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.556670  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.556697  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.556778  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.556857  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.556909  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.556969  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.557008  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.557063  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.557096  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.557140  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.557214  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.557276  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.557314  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.557353  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.557386  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.557418  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.557573  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.557616  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.557689  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.557728  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.557793  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.557830  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.557893  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.557925  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.557958  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.557992  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.558025  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.558060  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.558384  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.558433  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.558467  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.558506  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.558544  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.558581  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.558620  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.558655  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.558693  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.558727  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.558786  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.558823  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.558854  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.558882  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.559289  level_12_losses_main  0080: loss_sigmoid_binary_crossentropy  -> ENTRY: weight = None, batch_axis = 0
2020-01-04 22:36:47.559363  losses.py             0065: sigmoid_binary_crossentropy       -> ENTRY: ---
2020-01-04 22:36:47.559408  losses.py             0065: sigmoid_binary_crossentropy       <- EXIT : ---
2020-01-04 22:36:47.559452  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.559488  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.559526  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          sigmoidbinarycrossentropy
2020-01-04 22:36:47.559564  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.559603  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0}
2020-01-04 22:36:47.559645  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.559679  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.559711  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.559738  level_12_losses_main  0080: loss_sigmoid_binary_crossentropy  <- EXIT
2020-01-04 22:36:47.559771  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.559856  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.560422  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560489  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560539  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560583  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560626  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560668  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560706  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.560746  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560787  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560827  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560868  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560907  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560947  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.560987  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.561026  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.561066  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.561106  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.561190  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.561752  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.561803  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.561842  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.561884  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.561944  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.561975  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562002  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.562028  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562054  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562080  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.562106  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.562132  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.562158  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562188  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562215  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562241  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562266  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562292  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.562318  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.562393  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.562431  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.562466  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.562496  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.562523  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.562603  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.562682  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.562735  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.562796  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.562835  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.562886  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.562917  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.562962  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.563034  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.563096  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.563134  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.563173  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.563207  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.563238  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.563388  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.563432  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.563520  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.563559  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.563628  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.563670  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.563736  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.563769  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.563803  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.563838  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.563873  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.563909  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.564246  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.564322  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.564357  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.564411  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.564475  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.564510  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.564548  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.564582  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.564619  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.564653  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.564707  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.564741  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.564772  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.564798  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.565164  level_12_losses_main  0094: loss_binary_crossentropy          -> ENTRY: weight = None, batch_axis = 0
2020-01-04 22:36:47.565239  losses.py             0076: binary_crossentropy               -> ENTRY: ---
2020-01-04 22:36:47.565281  losses.py             0076: binary_crossentropy               <- EXIT : ---
2020-01-04 22:36:47.565323  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.565359  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.565396  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          binarycrossentropy
2020-01-04 22:36:47.565432  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.565470  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'weight': None, 'batch_axis': 0}
2020-01-04 22:36:47.565511  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.565545  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.565576  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.565603  level_12_losses_main  0094: loss_binary_crossentropy          <- EXIT
2020-01-04 22:36:47.565635  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.565716  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.566327  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566412  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566462  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566507  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566548  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566588  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566626  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.566667  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566708  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566747  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566786  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566827  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566866  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566905  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566945  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.566985  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.567022  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.567105  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.567634  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.567686  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.567725  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.567765  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.567814  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.567845  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.567872  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.567898  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.567924  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.567949  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.567975  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.568000  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.568025  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.568050  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.568075  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.568100  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.568126  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.568151  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.568177  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.568215  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.568252  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.568286  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.568317  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.568343  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.568423  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.568503  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.568556  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.568617  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.568656  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.568710  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.568742  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.568786  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.568860  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.568923  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.568961  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.569001  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.569034  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.569065  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.569219  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.569262  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.569336  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.569376  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.569442  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.569480  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.569542  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.569574  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.569608  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.569642  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.569675  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.569711  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.570002  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.570049  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.570082  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.570122  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.570160  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.570195  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.570233  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.570268  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.570305  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.570364  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.570427  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.570463  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.570495  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.570523  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.570734  level_12_losses_main  0108: loss_kldiv                        -> ENTRY: log_pre_applied = False, weight = None, batch_axis = 0, axis_to_sum_over = -1
2020-01-04 22:36:47.570828  losses.py             0088: kldiv                             -> ENTRY: ---
2020-01-04 22:36:47.570865  losses.py             0088: kldiv                             <- EXIT : ---
2020-01-04 22:36:47.570906  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.570940  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.570976  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          kldiv
2020-01-04 22:36:47.571011  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.571091  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'log_pre_applied': False, 'weight': None, 'batch_axis': 0, 'axis_to_sum_over': -1}
2020-01-04 22:36:47.571182  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.571231  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.571263  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.571290  level_12_losses_main  0108: loss_kldiv                        <- EXIT
2020-01-04 22:36:47.571322  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.571419  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.571867  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.571947  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.571995  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572039  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572081  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572121  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572158  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.572197  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572237  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572277  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572318  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572359  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572399  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572439  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572479  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572518  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.572554  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.572637  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.573226  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.573277  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.573316  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.573357  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.573406  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.573438  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573464  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.573490  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573517  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573543  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.573568  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.573594  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.573624  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573651  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573676  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573702  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573727  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573753  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.573778  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.573816  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.573853  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.573887  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.573918  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.573944  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.574025  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.574104  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.574157  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.574216  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.574255  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.574306  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.574362  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.574420  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.574493  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.574555  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.574593  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.574632  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.574665  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.574697  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.574851  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.574894  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.574971  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.575009  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.575073  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.575114  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.575177  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.575210  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.575244  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.575277  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.575311  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.575346  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.575647  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.575693  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.575727  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.575767  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.575805  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.575841  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.575880  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.575915  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.575953  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.575989  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.576045  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.576080  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.576112  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.576140  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.576388  level_12_losses_main  0123: loss_poisson_nll                  -> ENTRY: log_pre_applied = False, weight = None, batch_axis = 0
2020-01-04 22:36:47.576464  losses.py             0101: poisson_nll                       -> ENTRY: ---
2020-01-04 22:36:47.576500  losses.py             0101: poisson_nll                       <- EXIT : ---
2020-01-04 22:36:47.576539  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.576572  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.576608  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          poissonnll
2020-01-04 22:36:47.576642  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.576679  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'log_pre_applied': False, 'weight': None, 'batch_axis': 0}
2020-01-04 22:36:47.576723  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.576757  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.576787  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.576813  level_12_losses_main  0123: loss_poisson_nll                  <- EXIT
2020-01-04 22:36:47.576844  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.576937  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.577363  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577450  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577495  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577537  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577577  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577616  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577652  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.577690  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577729  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577767  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577806  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577843  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577880  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577919  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577957  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.577994  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.578030  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.578107  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.578694  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.578743  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.578780  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.578820  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.578864  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.578894  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.578919  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.578945  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.578970  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.578995  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.579020  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.579046  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.579070  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.579095  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.579120  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.579144  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.579169  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.579194  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.579219  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.579256  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.579292  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.579326  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.579356  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.579382  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.579459  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.579536  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.579586  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.579644  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.579686  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.579735  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.579766  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.579808  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.579878  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.579938  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.579975  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.580012  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.580045  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.580076  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.580219  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.580261  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.580328  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.580367  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.580429  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.580466  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.580526  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.580557  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.580589  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.580622  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.580656  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.580691  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.580961  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.581007  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.581038  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.581076  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.581112  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.581147  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.581185  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.581219  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.581255  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.581289  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.581347  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.581382  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.581412  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.581438  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.581681  level_12_losses_main  0138: loss_huber                        -> ENTRY: weight = None, batch_axis = 0, threshold_for_mean_estimator = 1
2020-01-04 22:36:47.581757  losses.py             0113: huber                             -> ENTRY: ---
2020-01-04 22:36:47.581793  losses.py             0113: huber                             <- EXIT : ---
2020-01-04 22:36:47.581831  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.581863  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.581898  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          huber
2020-01-04 22:36:47.581931  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.581967  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'threshold_for_mean_estimator': 1, 'weight': None, 'batch_axis': 0}
2020-01-04 22:36:47.582012  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.582046  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.582076  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.582102  level_12_losses_main  0138: loss_huber                        <- EXIT
2020-01-04 22:36:47.582131  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.582217  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.582792  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.582872  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.582920  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.582964  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583005  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583045  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583082  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.583122  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583161  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583200  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583238  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583277  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583315  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583354  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583395  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583434  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.583470  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.583549  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.584076  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.584126  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.584164  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.584205  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.584250  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.584281  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584307  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.584333  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584359  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584385  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.584410  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.584436  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.584465  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584492  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584517  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584543  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584568  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584593  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.584619  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.584657  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.584693  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.584728  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.584758  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.584785  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.584864  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.584972  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.585038  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.585113  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.585152  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.585204  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.585236  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.585279  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.585352  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.585414  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.585452  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.585491  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.585525  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.585557  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.585704  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.585746  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.585819  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.585857  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.585928  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.585966  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.586028  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.586060  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.586093  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.586127  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.586160  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.586197  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.586537  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.586586  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.586621  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.586673  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.586711  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.586747  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.586786  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.586822  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.586874  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.586922  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.586978  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.587013  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.587056  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.587082  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.587352  level_12_losses_main  0153: loss_hinge                        -> ENTRY: weight = None, batch_axis = 0, margin = 1
2020-01-04 22:36:47.587415  losses.py             0125: hinge                             -> ENTRY: ---
2020-01-04 22:36:47.587451  losses.py             0125: hinge                             <- EXIT : ---
2020-01-04 22:36:47.587491  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.587525  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.587560  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          hinge
2020-01-04 22:36:47.587595  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.587632  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'margin': 1, 'weight': None, 'batch_axis': 0}
2020-01-04 22:36:47.587676  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.587710  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.587740  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.587767  level_12_losses_main  0153: loss_hinge                        <- EXIT
2020-01-04 22:36:47.587797  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.587883  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.588302  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588378  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588436  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588478  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588518  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588557  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588594  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.588632  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588671  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588711  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588750  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588792  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588831  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588869  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588907  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588945  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.588980  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.589057  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.589568  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.589617  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.589654  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.589694  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.589738  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.589768  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.589794  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.589820  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.589845  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.589871  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.589896  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.589921  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.589946  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.589972  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.589997  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.590022  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.590046  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.590072  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.590097  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.590134  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.590171  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.590204  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.590234  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.590260  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.590360  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.590453  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.590504  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.590563  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.590605  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.590656  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.590687  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.590729  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.590800  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.590862  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.590899  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.590937  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.590970  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.591000  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.591146  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.591189  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.591260  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.591297  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.591360  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.591397  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.591458  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.591489  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.591522  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.591555  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.591587  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.591622  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.591896  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.591942  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.591974  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.592011  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.592048  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592084  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.592122  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592156  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.592192  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592227  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.592285  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592320  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.592352  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592378  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.592631  level_12_losses_main  0169: loss_squared_hinge                -> ENTRY: weight = None, batch_axis = 0, margin = 1
2020-01-04 22:36:47.592692  losses.py             0137: squared_hinge                     -> ENTRY: ---
2020-01-04 22:36:47.592728  losses.py             0137: squared_hinge                     <- EXIT : ---
2020-01-04 22:36:47.592767  base_class.py         0137: custom_print                      -> ENTRY: msg = Loss
2020-01-04 22:36:47.592799  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592835  base_class.py         0137: custom_print                      -> ENTRY: msg =     Name:          squaredhinge
2020-01-04 22:36:47.592869  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592906  base_class.py         0137: custom_print                      -> ENTRY: msg =     Params:        {'margin': 1, 'weight': None, 'batch_axis': 0}
2020-01-04 22:36:47.592950  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.592984  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.593014  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.593040  level_12_losses_main  0169: loss_squared_hinge                <- EXIT
2020-01-04 22:36:47.593070  return_loss.py        0006: load_loss                         -> ENTRY: ---
2020-01-04 22:36:47.593156  return_loss.py        0006: load_loss                         <- EXIT : ---
2020-01-04 22:36:47.593539  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593614  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593659  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593701  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593741  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593781  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593818  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.593856  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593897  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593936  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.593975  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.594014  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.594053  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.594092  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.594131  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.594170  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.594205  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.594285  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.594811  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.594860  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.594898  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.594939  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.594985  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.595015  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595042  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.595068  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595094  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595119  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.595160  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.595186  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.595216  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595244  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595270  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595296  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595321  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595347  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.595373  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.595426  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.595477  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.595512  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.595543  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.595583  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.595664  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.595743  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.595795  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.595855  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.595893  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.595944  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.595974  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.596017  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.596088  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.596150  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.596188  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.596227  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.596261  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.596292  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.596443  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.596486  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.596558  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.596597  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.596665  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.596703  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.596785  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.596817  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.596850  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.596884  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.596917  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.596953  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.597246  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.597293  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.597327  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.597365  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.597402  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.597438  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.597491  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.597527  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.597565  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.597600  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.597683  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.597718  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.597762  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.597801  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.597859  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = None
2020-01-04 22:36:47.597925  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': None, 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:47.598011  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:47.598107  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:47.658408  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:47.658599  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.658687  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.658751  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.658799  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.659797  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.659849  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.659929  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:47.659990  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:47.660029  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.660067  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:47.660104  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.660142  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:47.660222  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:47.660263  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:47.660422  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:47.660460  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:47.660514  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:47.660606  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:47.660793  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:47.660896  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:47.660973  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:47.661016  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:47.661072  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:47.661179  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:47.823379  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:47.823505  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:47.885287  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:47.885488  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:47.885547  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.885588  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:47.885776  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:47.885907  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:47.885981  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.886022  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:36:47.886066  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.886102  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:47.886142  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.886176  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.886214  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.886251  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:47.886294  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:47.890162  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890259  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890344  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890417  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890472  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890528  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890577  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:47.890634  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890686  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890741  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890784  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890831  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890877  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890927  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.890974  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.891021  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:47.891068  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:47.891196  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:47.891819  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:47.891884  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.891923  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:47.891963  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.892019  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:47.892050  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892077  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.892102  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892127  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892153  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:47.892178  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:47.892204  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:47.892229  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892254  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892279  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892304  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892330  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892355  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:47.892381  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:47.892420  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:47.892457  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.892492  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.892522  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.892549  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:47.892662  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:47.892751  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.892804  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:47.892869  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.892910  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:47.892962  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:47.892993  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:47.893042  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:47.893117  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.893180  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.893219  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:47.893258  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:47.893295  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:47.893329  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.893515  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:47.893558  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:47.893663  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.893703  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:47.893778  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.893816  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:47.893885  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:47.893917  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:47.893951  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.893984  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.894022  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.894060  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.894461  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.894509  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.894564  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:47.894607  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:47.894645  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.894681  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:47.894721  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.894757  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:47.894797  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.894833  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:47.894889  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.894925  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:47.894956  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.894984  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:47.895039  level_8_layers_main.  0901: instance_normalization            -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, uid = None
2020-01-04 22:36:47.895099  level_8_layers_main.  0901: instance_normalization            <- EXIT : {'uid': None, 'name': 'instance_normalization', 'params': {'epsilon': 1e-05, 'use_trainable_parameters': True}}
2020-01-04 22:36:47.895170  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'instance_normalization', 'params': {'epsilon': 1e-05, 'use_trainable_parameters': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:47.895252  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:47.955858  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:47.956052  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:47.956143  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:47.956206  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:47.956253  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:47.956798  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:47.956847  common.py             0083: save                              <- EXIT
2020-01-04 22:36:47.956905  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:47.956964  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:47.957003  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.957041  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:47.957078  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:47.957115  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:47.957200  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:47.957243  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:47.957412  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:47.957451  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:47.957505  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'instance_normalization', 'params': {'epsilon': 1e-05, 'use_trainable_parameters': True}}
2020-01-04 22:36:47.957585  layers.py             0596: custom_model_layer_instance_norm  -> ENTRY: params = {'epsilon': 1e-05, 'use_trainable_parameters': True}
2020-01-04 22:36:47.957750  layers.py             0596: custom_model_layer_instance_norm  <- EXIT : ---
2020-01-04 22:36:47.957843  layers.py             0206: custom_model_get_layer            <- EXIT : InstanceNorm(eps=1e-05, axis=1, center=True, scale=True, in_channels=0)
2020-01-04 22:36:47.957921  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:47.957965  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:47.958019  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:47.958120  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:48.108347  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:48.108457  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:48.168917  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:48.169113  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:48.169173  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.169214  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:48.169397  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:48.169521  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:48.169595  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.169634  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:36:48.169677  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.169739  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:48.169805  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.169839  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.169872  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.169907  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:48.169953  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:48.173124  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173230  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173295  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173355  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173419  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173476  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173524  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:48.173577  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173630  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173695  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173767  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173838  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173885  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173930  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.173972  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.174019  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.174073  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:48.174197  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:48.174846  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:48.174911  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.174950  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:48.174989  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.175041  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:48.175072  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175098  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:48.175123  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175148  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175176  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:48.175202  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:48.175227  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:48.175252  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175276  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175301  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175325  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175350  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175375  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:48.175400  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:48.175438  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:48.175474  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.175507  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.175537  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.175562  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:48.175674  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:48.175758  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:48.175811  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:48.175870  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.175908  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:48.175958  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:48.175988  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:48.176039  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:48.176113  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:48.176173  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.176211  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:48.176250  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:48.176285  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:48.176318  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:48.176495  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:48.176540  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:48.176639  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.176681  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:48.176754  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.176790  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:48.176856  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.176889  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:48.176921  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:48.176955  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:48.176991  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:48.177028  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:48.177409  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:48.177457  common.py             0083: save                              <- EXIT
2020-01-04 22:36:48.177509  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:48.177552  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:48.177589  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.177624  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:48.177662  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.177696  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:48.177732  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.177766  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:48.177820  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.177854  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.177885  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.177910  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:48.177962  level_8_layers_main.  0922: layer_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, uid = None
2020-01-04 22:36:48.178021  level_8_layers_main.  0922: layer_normalization               <- EXIT : {'uid': None, 'name': 'layer_normalization', 'params': {'epsilon': 1e-05, 'use_trainable_parameters': True}}
2020-01-04 22:36:48.178091  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'layer_normalization', 'params': {'epsilon': 1e-05, 'use_trainable_parameters': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:48.178168  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:48.239123  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:48.239314  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:48.239404  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:48.239462  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:48.239516  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:48.240044  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:48.240093  common.py             0083: save                              <- EXIT
2020-01-04 22:36:48.240173  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:48.240235  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:48.240288  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.240353  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:48.240417  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.240467  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:48.240549  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:48.240590  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:48.240760  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:48.240801  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:48.240855  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'layer_normalization', 'params': {'epsilon': 1e-05, 'use_trainable_parameters': True}}
2020-01-04 22:36:48.240939  layers.py             0606: custom_model_layer_layer_normali  -> ENTRY: params = {'epsilon': 1e-05, 'use_trainable_parameters': True}
2020-01-04 22:36:48.241115  layers.py             0606: custom_model_layer_layer_normali  <- EXIT : ---
2020-01-04 22:36:48.241207  layers.py             0206: custom_model_get_layer            <- EXIT : LayerNorm(eps=1e-05, axis=1, center=True, scale=True, in_channels=0)
2020-01-04 22:36:48.241279  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:48.241323  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:48.241376  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:48.241484  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:48.398014  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:48.398122  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:48.457946  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:48.458137  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:48.458194  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.458235  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:48.458473  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:48.458598  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:48.458672  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.458712  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:36:48.458755  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.458791  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:48.458830  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.458864  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.458894  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.458934  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:48.458982  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:48.462348  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462462  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462532  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462594  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462652  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462710  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462759  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:48.462815  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462869  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462920  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.462967  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.463016  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.463067  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.463115  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.463163  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.463213  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.463258  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:48.463391  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:48.464029  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:48.464096  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.464135  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:48.464177  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.464232  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:48.464264  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464291  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:48.464317  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464344  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464370  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:48.464396  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:48.464421  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:48.464447  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464473  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464498  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464524  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464550  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464576  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:48.464602  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:48.464643  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:48.464680  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.464714  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.464744  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.464771  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:48.464887  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:48.464974  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:48.465028  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:48.465093  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.465132  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:48.465184  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:48.465215  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:48.465263  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:48.465339  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:48.465402  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.465441  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:48.465481  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:48.465517  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:48.465551  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:48.465735  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:48.465779  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:48.465881  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.465921  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:48.465995  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.466033  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:48.466101  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.466134  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:48.466168  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:48.466203  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:48.466240  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:48.466278  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:48.466715  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:48.466778  common.py             0083: save                              <- EXIT
2020-01-04 22:36:48.466850  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:48.466893  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:48.466931  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.466967  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:48.467005  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.467041  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:48.467079  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.467113  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:48.467173  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.467210  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.467241  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.467267  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:48.467318  level_8_layers_main.  0831: identity                          -> ENTRY: uid = None
2020-01-04 22:36:48.467357  level_8_layers_main.  0831: identity                          <- EXIT : {'uid': None, 'name': 'identity', 'params': {}}
2020-01-04 22:36:48.467417  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'identity', 'params': {}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:48.467487  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:48.530168  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:48.530647  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:48.530886  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:48.531055  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:48.531190  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:48.532473  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:48.532649  common.py             0083: save                              <- EXIT
2020-01-04 22:36:48.532797  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:48.532952  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:48.533058  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.533162  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:48.533262  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.533362  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:48.533589  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:48.533697  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:48.534133  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:48.534238  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:48.534391  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'identity', 'params': {}}
2020-01-04 22:36:48.534568  layers.py             0577: custom_model_layer_identity       -> ENTRY: params = {}
2020-01-04 22:36:48.534832  layers.py             0577: custom_model_layer_identity       <- EXIT : ---
2020-01-04 22:36:48.534962  layers.py             0206: custom_model_get_layer            <- EXIT : Identity(
                                                                                          
                                                                                          )
2020-01-04 22:36:48.535165  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:48.535274  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:48.535417  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:48.535628  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:48.711736  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:48.711847  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:48.772121  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:48.772318  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:48.772376  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.772417  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:48.772581  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:48.772666  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:48.772709  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.772747  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:48.772790  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.772826  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:48.772866  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.772899  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.772930  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.772964  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:48.773011  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:48.774476  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.774631  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.774704  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.774760  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.774817  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.774870  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.774924  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:48.774983  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775039  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775097  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775145  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775194  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775241  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775288  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775331  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775379  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:48.775421  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:48.775563  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:48.776162  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:48.776229  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.776266  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:48.776306  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.776358  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:48.776388  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776414  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:48.776439  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776463  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776488  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:48.776512  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:48.776537  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:48.776562  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776590  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776615  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776640  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776664  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776689  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:48.776715  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:48.776752  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:48.776788  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.776822  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.776852  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.776878  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:48.776996  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:48.777082  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:48.777135  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:48.777194  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.777232  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:48.777281  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:48.777312  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:48.777360  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:48.777433  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:48.777494  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.777533  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:48.777572  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:48.777608  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:48.777641  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:48.777824  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:48.777867  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:48.777966  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.778004  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:48.778078  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.778115  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:48.778187  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:48.778220  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:48.778253  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:48.778288  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:48.778332  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:48.778389  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:48.778802  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:48.778849  common.py             0083: save                              <- EXIT
2020-01-04 22:36:48.778901  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:48.778944  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:48.778981  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.779016  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:48.779054  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.779089  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:48.779127  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.779161  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:48.779217  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.779251  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:48.779281  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.779307  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:48.779374  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 128, use_bias = True, flatten = True, uid = None
2020-01-04 22:36:48.779429  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': None, 'name': 'fully_connected', 'params': {'units': 128, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:48.779497  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'fully_connected', 'params': {'units': 128, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:48.779576  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:48.840343  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:48.840537  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:48.840627  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:48.840684  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:48.840737  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:48.841267  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:48.841315  common.py             0083: save                              <- EXIT
2020-01-04 22:36:48.841390  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:48.841452  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:48.841494  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.841534  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:48.841584  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:48.841637  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:48.841754  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:48.841798  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:48.841963  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:48.842003  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:48.842055  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'fully_connected', 'params': {'units': 128, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:48.842132  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 128, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:48.842330  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:48.842465  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 128, linear)
2020-01-04 22:36:48.842530  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:48.842574  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:48.842628  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:48.844276  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:49.001242  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:49.001356  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:49.064541  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:49.064720  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:49.064779  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.064821  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:49.064990  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:49.065106  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:49.065181  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.065221  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:36:49.065265  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.065302  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:49.065342  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.065376  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.065407  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.065444  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:49.065488  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:49.067978  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068091  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068191  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068263  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068320  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068388  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068436  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:49.068488  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068541  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068592  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068636  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068682  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068728  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068774  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068817  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068866  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.068910  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:49.069026  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:49.069613  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:49.069675  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.069714  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:49.069754  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.069809  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:49.069841  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:49.069868  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.069924  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:49.069951  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:49.069978  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.070005  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:49.070031  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:49.070058  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:49.070085  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:49.070123  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.070148  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.070174  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:49.070201  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:49.070227  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:49.070267  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:49.070303  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.070389  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.070434  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.070462  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:49.070573  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:49.070659  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.070713  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:49.070773  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.070813  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.070865  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:49.070897  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:49.070950  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:49.071025  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.071087  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.071127  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:49.071166  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:49.071205  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:49.071238  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.071418  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:49.071462  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.071566  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.071606  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:49.071681  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.071719  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:49.071787  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.071820  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:49.071854  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:49.071889  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:49.071925  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:49.071963  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:49.072349  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:49.072397  common.py             0083: save                              <- EXIT
2020-01-04 22:36:49.072444  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:49.072486  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:49.072524  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.072573  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:49.072611  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.072647  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:49.072684  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.072719  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.072774  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.072809  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.072844  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.072872  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:49.072945  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.3, axes = (), uid = None
2020-01-04 22:36:49.073000  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': None, 'name': 'dropout', 'params': {'drop_probability': 0.3, 'axes': ()}}
2020-01-04 22:36:49.073069  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'dropout', 'params': {'drop_probability': 0.3, 'axes': ()}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:49.073145  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:49.134061  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:49.134257  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:49.134396  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:49.134476  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:49.134528  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:49.135054  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:49.135103  common.py             0083: save                              <- EXIT
2020-01-04 22:36:49.135158  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:49.135219  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:49.135258  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.135296  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:49.135333  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.135371  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:49.135456  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:49.135499  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:49.135670  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:49.135710  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:49.135765  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'dropout', 'params': {'drop_probability': 0.3, 'axes': ()}}
2020-01-04 22:36:49.135838  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.3, 'axes': ()}
2020-01-04 22:36:49.135952  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:36:49.136001  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.3, axes=())
2020-01-04 22:36:49.136066  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:49.136110  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:49.136167  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:49.136251  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:49.299836  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:49.299983  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:49.360965  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:49.361166  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:49.361233  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.361276  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:49.361445  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:49.361534  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:49.361578  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.361618  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:49.361661  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.361697  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:49.361737  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.361771  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.361802  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.361835  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:49.361881  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:49.363571  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.363660  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.363724  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.363780  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.363838  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.363890  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.363941  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:49.363995  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364053  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364108  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364158  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364207  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364262  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364312  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364359  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364409  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.364454  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:49.364581  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:49.365164  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:49.365229  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.365267  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:49.365308  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.365361  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:49.365392  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365419  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.365445  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365471  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365497  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.365523  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:49.365549  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:49.365575  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365601  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365626  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365652  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365678  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365706  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:49.365734  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:49.365772  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:49.365808  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.365842  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.365873  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.365899  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:49.366017  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:49.366102  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.366155  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:49.366214  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.366253  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.366305  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:49.366367  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:49.366445  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:49.366519  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.366581  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.366620  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:49.366659  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:49.366695  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:49.366728  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.366914  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:49.366957  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.367037  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.367075  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:49.367139  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.367175  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:49.367236  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.367268  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:49.367301  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:49.367339  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:49.367375  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:49.367413  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:49.367804  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:49.367853  common.py             0083: save                              <- EXIT
2020-01-04 22:36:49.367887  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:49.367927  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:49.367964  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.368000  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:49.368040  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.368075  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:49.368112  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.368147  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.368202  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.368236  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.368267  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.368294  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:49.368342  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = None
2020-01-04 22:36:49.368381  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': None, 'name': 'flatten', 'params': {}}
2020-01-04 22:36:49.368440  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'flatten', 'params': {}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:49.368509  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:49.429090  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:49.429285  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:49.429373  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:49.429436  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:49.429488  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:49.430001  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:49.430051  common.py             0083: save                              <- EXIT
2020-01-04 22:36:49.430105  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:49.430166  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:49.430206  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.430263  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:49.430302  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.430376  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:49.430509  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:49.430558  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:49.430726  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:49.430768  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:49.430819  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'flatten', 'params': {}}
2020-01-04 22:36:49.430885  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:36:49.430984  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:36:49.431029  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:36:49.431085  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:49.431128  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:49.431184  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:49.431264  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:49.595293  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:49.595405  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:49.655619  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:49.655818  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:49.655877  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.655918  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:49.656083  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:49.656169  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:49.656215  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.656254  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:49.656297  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.656334  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:49.656374  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.656408  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.656440  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.656473  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:49.656522  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:49.658131  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658229  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658292  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658399  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658457  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658511  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658561  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:49.658613  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658663  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658721  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658766  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658813  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658864  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658910  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.658956  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.659006  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.659051  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:49.659180  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:49.659770  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:49.659838  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.659878  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:49.659918  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.659971  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:49.660003  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660030  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.660056  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660082  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660107  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.660133  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:49.660158  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:49.660183  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660209  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660234  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660259  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660285  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660311  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:49.660337  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:49.660376  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:49.660413  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.660447  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.660478  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.660504  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:49.660676  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:49.660763  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.660817  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:49.660879  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.660918  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.660970  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:49.661001  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:49.661051  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:49.661125  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.661189  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.661233  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:49.661273  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:49.661312  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:49.661345  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.661524  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:49.661568  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.661647  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.661686  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:49.661757  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.661795  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:49.661857  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.661890  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:49.661923  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:49.661959  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:49.661995  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:49.662033  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:49.662472  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:49.662520  common.py             0083: save                              <- EXIT
2020-01-04 22:36:49.662553  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:49.662607  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:49.662645  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.662694  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:49.662732  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.662767  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:49.662805  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.662840  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.662895  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.662929  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.662959  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.662986  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:49.663037  level_8_layers_main.  0939: relu                              -> ENTRY: uid = None
2020-01-04 22:36:49.663076  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': None, 'name': 'relu', 'params': {}}
2020-01-04 22:36:49.663131  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'relu', 'params': {}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:49.663202  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:49.724114  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:49.724310  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:49.724397  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:49.724458  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:49.724510  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:49.725025  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:49.725073  common.py             0083: save                              <- EXIT
2020-01-04 22:36:49.725127  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:49.725186  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:49.725225  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.725263  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:49.725299  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.725336  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:49.725425  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:49.725469  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:49.725632  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:49.725672  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:49.725724  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'relu', 'params': {}}
2020-01-04 22:36:49.725788  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:49.725878  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:49.725926  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:49.725983  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:49.726025  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:49.726079  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:49.726161  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:49.891318  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:49.891430  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:49.951857  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:49.952060  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:49.952121  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.952162  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:49.952328  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:49.952417  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:49.952462  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.952502  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:49.952544  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.952586  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:49.952627  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.952660  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.952691  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.952726  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:49.952773  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:49.954371  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954468  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954532  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954589  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954646  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954704  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954763  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:49.954818  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954871  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954921  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.954965  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.955014  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.955065  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.955116  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.955165  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.955218  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:49.955262  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:49.955386  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:49.955979  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:49.956043  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.956081  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:49.956121  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.956175  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:49.956205  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956231  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.956257  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956283  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956309  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:49.956334  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:49.956359  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:49.956384  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956409  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956433  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956458  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956483  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956508  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:49.956533  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:49.956570  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:49.956607  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.956641  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.956671  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.956697  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:49.956811  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:49.956901  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.956955  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:49.957028  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.957079  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:49.957129  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:49.957160  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:49.957209  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:49.957282  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.957343  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.957382  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:49.957420  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:49.957457  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:49.957489  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.957673  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:49.957715  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:49.957797  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.957836  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:49.957900  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.957936  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:49.957997  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:49.958028  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:49.958061  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:49.958096  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:49.958131  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:49.958168  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:49.958585  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:49.958632  common.py             0083: save                              <- EXIT
2020-01-04 22:36:49.958679  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:49.958731  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:49.958768  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.958803  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:49.958844  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.958880  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:49.958916  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.958950  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:49.959004  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.959038  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:49.959069  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:49.959095  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:49.959147  level_8_layers_main.  0954: sigmoid                           -> ENTRY: uid = None
2020-01-04 22:36:49.959186  level_8_layers_main.  0954: sigmoid                           <- EXIT : {'uid': None, 'name': 'sigmoid', 'params': {}}
2020-01-04 22:36:49.959242  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'sigmoid', 'params': {}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:49.959309  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:50.020392  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:50.020597  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:50.020689  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:50.020758  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:50.020805  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:50.021343  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:50.021395  common.py             0083: save                              <- EXIT
2020-01-04 22:36:50.021451  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:50.021512  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:50.021553  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.021593  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:50.021632  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.021670  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:50.021766  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.021812  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.021982  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.022025  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.022079  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'sigmoid', 'params': {}}
2020-01-04 22:36:50.022148  layers.py             0623: custom_model_activation_sigmoid   -> ENTRY: params = {}
2020-01-04 22:36:50.022237  layers.py             0623: custom_model_activation_sigmoid   <- EXIT : ---
2020-01-04 22:36:50.022283  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(sigmoid)
2020-01-04 22:36:50.022375  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:50.022439  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:50.022497  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:50.022577  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:50.189821  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:50.189934  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:50.250308  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:50.250519  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:50.250579  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.250621  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:50.250788  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:50.250876  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:50.250923  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.250963  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:50.251033  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.251069  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:50.251136  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.251171  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.251201  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.251235  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:50.251280  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:50.253073  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253178  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253240  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253298  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253354  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253408  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253455  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:50.253509  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253561  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253614  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253663  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253711  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253765  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253815  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253862  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253911  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.253955  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:50.254091  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:50.254761  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:50.254827  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.254866  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:50.254907  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.254959  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:50.254990  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255017  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:50.255042  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255068  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255093  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:50.255122  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:50.255149  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:50.255174  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255199  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255225  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255251  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255277  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255302  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:50.255328  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:50.255367  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:50.255404  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.255439  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.255470  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.255497  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:50.255612  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:50.255698  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:50.255752  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:50.255811  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.255850  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:50.255901  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:50.255932  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:50.255983  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:50.256056  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:50.256118  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.256157  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:50.256196  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:50.256233  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:50.256267  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:50.256455  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:50.256498  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:50.256581  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.256620  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:50.256689  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.256726  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:50.256788  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.256821  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:50.256854  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:50.256890  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:50.256926  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:50.256966  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:50.257357  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:50.257405  common.py             0083: save                              <- EXIT
2020-01-04 22:36:50.257439  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:50.257478  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:50.257515  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.257551  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:50.257589  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.257624  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:50.257661  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.257696  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:50.257750  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.257785  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.257815  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.257841  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:50.257890  level_8_layers_main.  0969: tanh                              -> ENTRY: uid = None
2020-01-04 22:36:50.257928  level_8_layers_main.  0969: tanh                              <- EXIT : {'uid': None, 'name': 'tanh', 'params': {}}
2020-01-04 22:36:50.257984  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'tanh', 'params': {}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:50.258052  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:50.318729  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:50.318921  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:50.319009  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:50.319068  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:50.319120  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:50.319672  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:50.319722  common.py             0083: save                              <- EXIT
2020-01-04 22:36:50.319777  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:50.319843  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:50.319884  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.319924  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:50.319962  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.320000  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:50.320093  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.320137  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.320308  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.320349  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.320402  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'tanh', 'params': {}}
2020-01-04 22:36:50.320473  layers.py             0630: custom_model_activation_tanh      -> ENTRY: params = {}
2020-01-04 22:36:50.320562  layers.py             0630: custom_model_activation_tanh      <- EXIT : ---
2020-01-04 22:36:50.320610  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(tanh)
2020-01-04 22:36:50.320671  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:50.320715  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:50.320771  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:50.320855  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:50.495631  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:50.495741  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:50.555949  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:50.556139  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:50.556198  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.556241  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:50.556410  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:50.556500  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:50.556547  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.556587  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:50.556631  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.556667  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:50.556707  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.556741  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.556774  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.556808  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:50.556852  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:50.558608  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.558695  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.558778  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.558832  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.558888  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.558943  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.558991  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:50.559046  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559098  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559146  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559192  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559237  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559288  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559337  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559384  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559435  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.559485  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:50.559623  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:50.560227  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:50.560291  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.560330  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:50.560371  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.560426  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:50.560457  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560484  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:50.560511  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560537  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560562  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:50.560587  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:50.560612  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:50.560637  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560663  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560688  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560714  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560739  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560765  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:50.560790  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:50.560829  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:50.560866  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.560901  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.560932  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.560959  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:50.561073  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:50.561159  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:50.561212  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:50.561273  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.561315  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:50.561366  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:50.561398  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:50.561449  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:50.561525  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:50.561588  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.561628  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:50.561667  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:50.561704  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:50.561738  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:50.561923  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:50.561966  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:50.562049  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.562088  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:50.562153  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.562191  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:50.562252  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.562284  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:50.562317  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:50.562381  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:50.562443  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:50.562481  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:50.562878  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:50.562925  common.py             0083: save                              <- EXIT
2020-01-04 22:36:50.562958  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:50.562998  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:50.563036  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.563072  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:50.563110  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.563146  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:50.563183  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.563218  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:50.563273  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.563308  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.563343  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.563370  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:50.563421  level_8_layers_main.  0984: softplus                          -> ENTRY: uid = None
2020-01-04 22:36:50.563461  level_8_layers_main.  0984: softplus                          <- EXIT : {'uid': None, 'name': 'softplus', 'params': {}}
2020-01-04 22:36:50.563518  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'softplus', 'params': {}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:50.563586  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:50.624580  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:50.624770  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:50.624859  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:50.624924  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:50.624972  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:50.625511  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:50.625560  common.py             0083: save                              <- EXIT
2020-01-04 22:36:50.625613  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:50.625671  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:50.625709  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.625747  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:50.625784  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.625821  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:50.625910  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.625954  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.626116  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.626157  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.626209  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'softplus', 'params': {}}
2020-01-04 22:36:50.626278  layers.py             0630: custom_model_activation_tanh      -> ENTRY: params = {}
2020-01-04 22:36:50.626407  layers.py             0630: custom_model_activation_tanh      <- EXIT : ---
2020-01-04 22:36:50.626467  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(tanh)
2020-01-04 22:36:50.626527  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:50.626568  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:50.626625  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:50.626705  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:50.801603  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:50.801716  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:50.861708  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:50.861903  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:50.861963  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.862013  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:50.862189  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:50.862278  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:50.862331  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.862373  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:50.862418  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.862455  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:50.862496  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.862530  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.862562  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.862596  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:50.862641  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:50.864266  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864350  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864412  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864469  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864524  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864578  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864625  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:50.864679  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864735  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864785  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864832  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864877  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864930  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.864979  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.865023  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.865073  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:50.865118  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:50.865255  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:50.865876  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:50.865943  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.865982  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:50.866024  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.866078  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:50.866108  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866136  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:50.866162  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866189  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866215  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:50.866241  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:50.866266  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:50.866292  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866317  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866352  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866379  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866405  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866432  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:50.866458  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:50.866502  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:50.866540  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.866575  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.866606  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.866633  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:50.866752  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:50.866840  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:50.866894  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:50.866956  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.866996  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:50.867048  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:50.867079  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:50.867129  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:50.867204  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:50.867267  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.867307  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:50.867346  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:50.867384  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:50.867417  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:50.867603  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:50.867647  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:50.867731  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.867769  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:50.867834  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.867871  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:50.867932  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:50.867965  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:50.867998  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:50.868033  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:50.868070  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:50.868113  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:50.868578  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:50.868627  common.py             0083: save                              <- EXIT
2020-01-04 22:36:50.868661  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:50.868700  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:50.868737  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.868774  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:50.868812  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.868846  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:50.868883  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.868917  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:50.868972  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.869007  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:50.869038  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.869065  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:50.869117  level_8_layers_main.  0999: softsign                          -> ENTRY: uid = None
2020-01-04 22:36:50.869156  level_8_layers_main.  0999: softsign                          <- EXIT : {'uid': None, 'name': 'softsign', 'params': {}}
2020-01-04 22:36:50.869213  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'softsign', 'params': {}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:50.869281  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:50.929799  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:50.929997  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:50.930103  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:50.930192  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:50.930252  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:50.930821  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:50.930871  common.py             0083: save                              <- EXIT
2020-01-04 22:36:50.930926  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:50.930987  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:50.931026  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.931065  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:50.931102  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:50.931139  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:50.931229  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.931271  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.931438  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:50.931483  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:50.931537  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'softsign', 'params': {}}
2020-01-04 22:36:50.931612  layers.py             0644: custom_model_activation_softsign  -> ENTRY: params = {}
2020-01-04 22:36:50.931698  layers.py             0644: custom_model_activation_softsign  <- EXIT : ---
2020-01-04 22:36:50.931743  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(softsign)
2020-01-04 22:36:50.931803  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:50.931844  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:50.931898  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:50.931975  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:51.107597  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:51.107722  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:51.167939  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:51.168137  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:51.168197  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.168239  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:51.168409  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:51.168495  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:51.168541  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.168581  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:51.168626  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.168663  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:51.168704  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.168739  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.168771  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.168809  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:51.168856  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:51.170541  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.170630  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.170694  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.170751  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.170810  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.170864  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.170912  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:51.170968  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171021  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171072  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171126  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171177  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171228  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171276  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171324  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171375  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.171418  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:51.171547  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:51.172154  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:51.172220  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.172260  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:51.172305  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.172362  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:51.172394  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172422  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:51.172449  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172480  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172508  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:51.172534  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:51.172560  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:51.172586  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172612  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172638  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172664  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172690  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172716  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:51.172743  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:51.172782  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:51.172820  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.172854  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.172886  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.172913  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:51.173032  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:51.173123  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:51.173178  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:51.173240  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.173280  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:51.173333  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:51.173364  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:51.173414  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:51.173490  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:51.173554  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.173594  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:51.173634  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:51.173675  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:51.173710  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:51.173898  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:51.173941  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:51.174026  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.174065  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:51.174132  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.174169  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:51.174231  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.174263  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:51.174297  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:51.174356  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:51.174395  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:51.174437  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:51.174850  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:51.174899  common.py             0083: save                              <- EXIT
2020-01-04 22:36:51.174933  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:51.174973  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:51.175012  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.175048  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:51.175086  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.175123  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:51.175161  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.175196  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:51.175253  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.175288  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.175320  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.175348  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:51.175404  level_8_layers_main.  1014: elu                               -> ENTRY: alpha = 1.0, uid = None
2020-01-04 22:36:51.175450  level_8_layers_main.  1014: elu                               <- EXIT : {'uid': None, 'name': 'elu', 'params': {'alpha': 1.0}}
2020-01-04 22:36:51.175510  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'elu', 'params': {'alpha': 1.0}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:51.175584  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:51.236370  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:51.236563  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:51.236647  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:51.236712  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:51.236763  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:51.237290  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:51.237339  common.py             0083: save                              <- EXIT
2020-01-04 22:36:51.237393  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:51.237454  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:51.237493  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.237532  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:51.237569  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.237606  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:51.237698  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:51.237742  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:51.237907  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:51.237947  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:51.238001  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'elu', 'params': {'alpha': 1.0}}
2020-01-04 22:36:51.238075  layers.py             0651: custom_model_activation_elu       -> ENTRY: params = {'alpha': 1.0}
2020-01-04 22:36:51.238183  layers.py             0651: custom_model_activation_elu       <- EXIT : ---
2020-01-04 22:36:51.238238  layers.py             0206: custom_model_get_layer            <- EXIT : ELU(
                                                                                          
                                                                                          )
2020-01-04 22:36:51.238315  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:51.238396  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:51.238452  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:51.238888  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:51.416598  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:51.416709  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:51.476910  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:51.477106  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:51.477165  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.477206  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:51.477374  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:51.477456  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:51.477501  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.477541  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:51.477585  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.477628  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:51.477669  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.477703  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.477734  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.477770  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:51.477816  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:51.480178  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480280  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480342  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480399  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480453  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480504  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480551  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:51.480602  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480654  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480704  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480752  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480796  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480842  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480889  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480932  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.480980  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.481023  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:51.481140  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:51.481747  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:51.481814  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.481865  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:51.481905  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.481959  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:51.481989  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482016  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:51.482042  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482068  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482094  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:51.482120  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:51.482146  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:51.482172  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482198  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482224  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482249  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482275  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482301  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:51.482354  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:51.482408  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:51.482445  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.482480  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.482511  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.482537  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:51.482653  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:51.482743  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:51.482797  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:51.482856  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.482895  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:51.482946  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:51.482977  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:51.483025  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:51.483099  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:51.483161  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.483200  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:51.483238  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:51.483276  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:51.483308  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:51.483488  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:51.483531  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:51.483615  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.483655  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:51.483719  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.483757  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:51.483818  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.483850  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:51.483883  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:51.483918  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:51.483955  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:51.483992  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:51.484428  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:51.484476  common.py             0083: save                              <- EXIT
2020-01-04 22:36:51.484509  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:51.484548  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:51.484585  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.484622  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:51.484663  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.484700  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:51.484737  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.484772  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:51.484827  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.484862  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.484892  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.484919  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:51.484971  level_8_layers_main.  1029: gelu                              -> ENTRY: uid = None
2020-01-04 22:36:51.485010  level_8_layers_main.  1029: gelu                              <- EXIT : {'uid': None, 'name': 'gelu', 'params': {}}
2020-01-04 22:36:51.485067  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'gelu', 'params': {}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:51.485134  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:51.545718  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:51.545911  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:51.545997  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:51.546051  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:51.546096  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:51.546657  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:51.546708  common.py             0083: save                              <- EXIT
2020-01-04 22:36:51.546762  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:51.546821  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:51.546860  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.546899  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:51.546937  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.546975  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:51.547065  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:51.547113  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:51.547279  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:51.547316  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:51.547368  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'gelu', 'params': {}}
2020-01-04 22:36:51.547435  layers.py             0658: custom_model_activation_gelu      -> ENTRY: params = {}
2020-01-04 22:36:51.547523  layers.py             0658: custom_model_activation_gelu      <- EXIT : ---
2020-01-04 22:36:51.547574  layers.py             0206: custom_model_get_layer            <- EXIT : GELU(
                                                                                          
                                                                                          )
2020-01-04 22:36:51.547652  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:51.547694  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:51.547752  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:51.547827  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:51.733625  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:51.733737  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:51.794006  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:51.794197  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:51.794256  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.794297  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:51.794476  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:51.794559  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:51.794605  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.794644  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:51.794687  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.794724  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:51.794764  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.794798  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.794829  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.794862  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:51.794906  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:51.796530  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.796626  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.796689  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.796745  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.796800  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.796854  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.796903  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:51.796956  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797010  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797062  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797110  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797159  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797213  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797265  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797316  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797371  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:51.797418  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:51.797534  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:51.798118  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:51.798181  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.798221  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:51.798263  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.798316  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:51.798358  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798386  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:51.798412  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798442  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798469  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:51.798495  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:51.798520  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:51.798546  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798572  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798597  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798622  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798647  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798672  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:51.798698  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:51.798736  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:51.798773  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.798808  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.798839  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.798865  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:51.798980  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:51.799068  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:51.799122  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:51.799182  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.799221  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:51.799272  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:51.799304  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:51.799353  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:51.799427  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:51.799488  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.799528  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:51.799567  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:51.799605  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:51.799639  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:51.799818  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:51.799862  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:51.799949  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.799989  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:51.800054  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.800092  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:51.800154  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:51.800186  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:51.800219  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:51.800255  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:51.800291  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:51.800329  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:51.800711  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:51.800758  common.py             0083: save                              <- EXIT
2020-01-04 22:36:51.800791  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:51.800830  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:51.800868  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.800904  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:51.800942  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.800976  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:51.801014  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.801048  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:51.801103  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.801138  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:51.801168  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.801195  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:51.801247  level_8_layers_main.  1059: prelu                             -> ENTRY: uid = None
2020-01-04 22:36:51.801286  level_8_layers_main.  1059: prelu                             <- EXIT : {'uid': None, 'name': 'prelu', 'params': {}}
2020-01-04 22:36:51.801344  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'prelu', 'params': {}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:51.801413  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:51.861583  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:51.861779  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:51.861864  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:51.861925  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:51.861974  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:51.862505  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:51.862559  common.py             0083: save                              <- EXIT
2020-01-04 22:36:51.862615  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:51.862676  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:51.862716  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.862755  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:51.862792  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:51.862830  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:51.862922  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:51.862964  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:51.863133  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:51.863172  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:51.863226  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'prelu', 'params': {}}
2020-01-04 22:36:51.863297  layers.py             0665: custom_model_activation_prelu     -> ENTRY: params = {}
2020-01-04 22:36:51.863477  layers.py             0665: custom_model_activation_prelu     <- EXIT : ---
2020-01-04 22:36:51.863531  layers.py             0206: custom_model_get_layer            <- EXIT : PReLU(
                                                                                          
                                                                                          )
2020-01-04 22:36:51.863607  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:51.863650  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:51.863706  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:51.864941  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:52.042831  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:52.042935  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:52.105012  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:52.105197  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:52.105256  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.105297  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:52.105457  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:52.105563  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:52.105637  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.105677  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:36:52.105719  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.105755  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:36:52.105794  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.105828  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.105858  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.105891  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:52.105938  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:52.107210  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107306  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107364  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107419  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107474  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107525  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107572  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:52.107624  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107674  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107725  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107771  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107818  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107870  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107917  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.107963  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.108010  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.108052  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:52.108158  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:52.108752  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:52.108815  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.108853  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:52.108893  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.108946  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:52.108977  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109003  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:52.109028  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109053  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109078  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:52.109103  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:52.109127  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:52.109152  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109177  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109201  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109226  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109251  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109276  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:52.109301  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:52.109339  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:52.109377  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.109411  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.109440  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.109466  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:52.109578  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:52.109663  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:52.109716  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:52.109779  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.109819  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:52.109869  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:52.109901  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:52.109950  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:52.110023  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:52.110085  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.110124  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:52.110162  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:52.110199  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:52.110233  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:52.110420  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:52.110463  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:52.110545  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.110583  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:52.110647  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.110683  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:52.110744  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.110775  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:52.110808  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:52.110842  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:52.110878  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:52.110916  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:52.111278  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:52.111324  common.py             0083: save                              <- EXIT
2020-01-04 22:36:52.111355  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:52.111393  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:52.111430  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.111465  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:52.111502  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.111536  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:52.111572  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.111606  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:52.111664  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.111699  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.111729  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.111756  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:52.111808  level_8_layers_main.  1043: leaky_relu                        -> ENTRY: alpha = 1.0, uid = None
2020-01-04 22:36:52.111853  level_8_layers_main.  1043: leaky_relu                        <- EXIT : {'uid': None, 'name': 'leaky_relu', 'params': {'alpha': 1.0}}
2020-01-04 22:36:52.111912  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'leaky_relu', 'params': {'alpha': 1.0}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:52.111983  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:52.172705  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:52.172930  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:52.173031  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:52.173105  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:52.173155  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:52.173682  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:52.173732  common.py             0083: save                              <- EXIT
2020-01-04 22:36:52.173809  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:52.173871  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:52.173910  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.173948  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:52.173985  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.174023  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:52.174116  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:52.174162  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:52.174348  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:52.174393  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:52.174448  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'leaky_relu', 'params': {'alpha': 1.0}}
2020-01-04 22:36:52.174524  layers.py             0672: custom_model_activation_leaky_re  -> ENTRY: params = {'alpha': 1.0}
2020-01-04 22:36:52.174633  layers.py             0672: custom_model_activation_leaky_re  <- EXIT : ---
2020-01-04 22:36:52.174681  layers.py             0206: custom_model_get_layer            <- EXIT : LeakyReLU(1.0)
2020-01-04 22:36:52.174752  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:52.174793  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:52.174850  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:52.174929  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:52.356253  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:52.356363  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:52.416756  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:52.416950  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:52.417009  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.417049  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:52.417213  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:52.417296  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:52.417341  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.417379  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:52.417422  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.417457  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:52.417496  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.417530  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.417560  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.417593  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:52.417635  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:52.419261  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419359  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419419  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419474  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419529  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419581  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419632  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:52.419685  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419738  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419790  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419837  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419885  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419932  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.419979  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.420024  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.420073  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.420120  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:52.420229  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:52.420823  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:52.420886  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.420925  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:52.420964  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.421018  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:52.421048  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421074  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:52.421100  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421125  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421150  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:52.421174  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:52.421199  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:52.421224  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421248  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421273  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421301  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421327  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421352  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:52.421377  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:52.421414  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:52.421450  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.421484  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.421514  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.421540  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:52.421656  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:52.421740  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:52.421793  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:52.421852  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.421891  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:52.421941  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:52.421972  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:52.422021  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:52.422094  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:52.422156  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.422194  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:52.422232  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:52.422269  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:52.422301  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:52.422542  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:52.422584  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:52.422667  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.422705  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:52.422770  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.422806  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:52.422867  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.422901  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:52.422935  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:52.422970  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:52.423005  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:52.423044  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:52.423434  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:52.423480  common.py             0083: save                              <- EXIT
2020-01-04 22:36:52.423533  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:52.423576  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:52.423613  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.423648  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:52.423688  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.423723  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:52.423759  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.423793  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:52.423848  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.423882  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.423912  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.423938  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:52.423987  level_8_layers_main.  1074: selu                              -> ENTRY: uid = None
2020-01-04 22:36:52.424024  level_8_layers_main.  1074: selu                              <- EXIT : {'uid': None, 'name': 'selu', 'params': {}}
2020-01-04 22:36:52.424079  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'selu', 'params': {}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:52.424145  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:52.484454  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:52.484652  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:52.484737  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:52.484793  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:52.484842  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:52.485364  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:52.485412  common.py             0083: save                              <- EXIT
2020-01-04 22:36:52.485486  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:52.485548  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:52.485587  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.485625  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:52.485661  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.485702  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:52.485792  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:52.485838  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:52.486000  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:52.486041  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:52.486093  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'selu', 'params': {}}
2020-01-04 22:36:52.486160  layers.py             0679: custom_model_activation_selu      -> ENTRY: params = {}
2020-01-04 22:36:52.486256  layers.py             0679: custom_model_activation_selu      <- EXIT : ---
2020-01-04 22:36:52.486310  layers.py             0206: custom_model_get_layer            <- EXIT : SELU(
                                                                                          
                                                                                          )
2020-01-04 22:36:52.486428  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:52.486792  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:52.486855  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:52.486932  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:52.673665  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:52.673769  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:52.733713  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:52.733910  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:52.733969  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.734010  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:52.734173  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:52.734253  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:52.734298  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.734360  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:52.734417  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.734454  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:52.734493  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.734527  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.734558  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.734591  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:52.734635  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:52.736307  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736405  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736467  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736525  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736581  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736641  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736692  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:52.736745  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736797  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736851  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736908  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.736959  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.737013  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.737066  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.737113  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.737159  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:52.737201  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:52.737318  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:52.737902  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:52.737965  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.738003  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:52.738042  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.738095  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:52.738126  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738153  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:52.738178  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738203  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738227  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:52.738252  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:52.738277  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:52.738302  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738352  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738392  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738432  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738458  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738498  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:52.738535  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:52.738572  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:52.738609  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.738643  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.738673  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.738699  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:52.738816  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:52.738902  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:52.738955  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:52.739014  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.739053  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:52.739103  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:52.739133  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:52.739182  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:52.739258  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:52.739319  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.739357  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:52.739394  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:52.739431  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:52.739463  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:52.739646  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:52.739688  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:52.739769  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.739806  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:52.739869  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.739904  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:52.739964  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:52.739995  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:52.740026  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:52.740061  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:52.740097  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:52.740133  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:52.740518  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:52.740565  common.py             0083: save                              <- EXIT
2020-01-04 22:36:52.740599  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:52.740638  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:52.740675  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.740711  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:52.740748  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.740783  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:52.740819  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.740853  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:52.740922  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.740969  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:52.741026  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.741052  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:52.741105  level_8_layers_main.  1089: swish                             -> ENTRY: beta = 1.0, uid = None
2020-01-04 22:36:52.741150  level_8_layers_main.  1089: swish                             <- EXIT : {'uid': None, 'name': 'swish', 'params': {'beta': 1.0}}
2020-01-04 22:36:52.741209  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'swish', 'params': {'beta': 1.0}}], data_shape = (3, 224, 224), use_gpu = True, network_initializer = xavier_normal
2020-01-04 22:36:52.741281  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:52.802674  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:52.802872  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:52.802957  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:52.803018  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:52.803070  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:52.803574  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:52.803624  common.py             0083: save                              <- EXIT
2020-01-04 22:36:52.803678  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:52.803737  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:52.803777  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.803815  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:52.803853  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:52.803890  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:52.803982  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:52.804029  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:52.804196  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:52.804237  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:52.804290  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'swish', 'params': {'beta': 1.0}}
2020-01-04 22:36:52.804365  layers.py             0686: custom_model_activation_swish     -> ENTRY: params = {'beta': 1.0}
2020-01-04 22:36:52.804471  layers.py             0686: custom_model_activation_swish     <- EXIT : ---
2020-01-04 22:36:52.804523  layers.py             0206: custom_model_get_layer            <- EXIT : Swish(
                                                                                          
                                                                                          )
2020-01-04 22:36:52.804599  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:52.804640  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:52.804694  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:52.804767  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:52.989809  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:52.989914  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:53.050018  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:53.050213  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:53.050275  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.050316  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:53.050504  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:53.050586  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:53.050630  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.050669  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  0
2020-01-04 22:36:53.050712  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.050748  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       0
2020-01-04 22:36:53.050787  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.050822  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.050852  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.050886  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:53.050935  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:53.052761  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.052864  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.052927  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.052985  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053041  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053094  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053142  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:53.053195  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053248  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053299  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053345  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053391  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053439  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053486  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053533  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053581  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.053623  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:53.053735  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:53.054336  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:53.054403  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.054441  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:53.054483  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.054536  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:53.054566  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054592  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:53.054618  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054644  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054670  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:53.054695  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:53.054721  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:53.054747  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054772  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054797  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054822  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054847  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054873  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:53.054899  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:53.054937  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:53.054978  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.055014  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.055046  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.055072  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:53.055189  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:53.055277  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:53.055331  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:53.055392  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.055431  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:53.055483  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:53.055515  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:53.055566  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:53.055641  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:53.055704  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.055744  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:53.055783  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:53.055819  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:53.055852  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:53.056038  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:53.056081  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:53.056164  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.056208  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:53.056279  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.056321  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:53.056388  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.056423  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:53.056460  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:53.056498  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:53.056536  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:53.056585  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:53.056970  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:53.057018  common.py             0083: save                              <- EXIT
2020-01-04 22:36:53.057052  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:53.057092  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:53.057129  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.057166  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:53.057204  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.057239  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:53.057276  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.057311  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:53.057365  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.057400  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.057431  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.057458  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:53.057545  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:36:53.057626  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.057728  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:36:53.057798  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.057880  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:36:53.057919  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.057990  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:36:53.058060  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:53.058152  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv3_1_1
2020-01-04 22:36:53.058231  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv3_1_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.058328  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn3_1_1
2020-01-04 22:36:53.058397  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn3_1_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.058483  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv3_1_2
2020-01-04 22:36:53.058559  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv3_1_2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.058645  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn3_1_2
2020-01-04 22:36:53.058710  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn3_1_2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.058795  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv3_2_1
2020-01-04 22:36:53.058869  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv3_2_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.058954  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn3_2_1
2020-01-04 22:36:53.059019  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn3_2_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.059097  level_8_layers_main.  0831: identity                          -> ENTRY: uid = identity1
2020-01-04 22:36:53.059138  level_8_layers_main.  0831: identity                          <- EXIT : {'uid': 'identity1', 'name': 'identity', 'params': {}}
2020-01-04 22:36:53.059192  level_8_layers_main.  0860: concatenate                       -> ENTRY: uid = concat1
2020-01-04 22:36:53.059228  level_8_layers_main.  0860: concatenate                       <- EXIT : {'uid': 'concat1', 'name': 'concatenate'}
2020-01-04 22:36:53.059291  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv4
2020-01-04 22:36:53.059365  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv4', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.059452  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn4
2020-01-04 22:36:53.059516  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn4', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.059590  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu3
2020-01-04 22:36:53.059628  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu3', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.059685  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool4
2020-01-04 22:36:53.059753  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool4', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:53.059832  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:36:53.059872  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:53.059942  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:36:53.059994  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.060075  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:36:53.060126  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:53.060192  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:36:53.060242  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.060387  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, [[{'uid': 'conv3_1_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn3_1_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'conv3_1_2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn3_1_2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}], [{'uid': 'conv3_2_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn3_2_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}], [{'uid': 'identity1', 'name': 'identity', 'params': {}}], {'uid': 'concat1', 'name': 'concatenate'}], {'uid': 'conv4', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn4', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu3', 'name': 'relu', 'params': {}}, {'uid': 'pool4', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:53.060927  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:53.122140  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:53.122353  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:53.122455  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:53.122513  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:53.122560  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:53.123396  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:53.123447  common.py             0083: save                              <- EXIT
2020-01-04 22:36:53.123502  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:53.123589  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:53.123669  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.123709  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:53.123747  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.123797  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:53.123884  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.123921  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.124083  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.124121  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.124173  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.124271  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.124994  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.125089  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.125172  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.125211  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.125265  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.125348  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.125485  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.125550  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.125620  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.125656  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.125697  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.125751  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:53.125824  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:53.125866  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:53.125916  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.125948  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.125990  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:53.126072  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:36:53.126191  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:36:53.126242  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:36:53.126350  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.126387  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.126431  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv3_1_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.126512  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.126787  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.126853  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.126920  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv3_1_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 1, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.127003  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 1, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.127277  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.127344  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.127417  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.127454  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.127501  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn3_1_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.127579  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.127694  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.127752  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.127815  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn3_1_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.127889  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.128001  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.128056  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.128124  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.128158  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.128201  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv3_1_2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.128282  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.128550  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.128616  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.128681  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv3_1_2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 1, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.128763  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 1, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.129028  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.129094  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.129171  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.129210  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.129256  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn3_1_2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.129333  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.129450  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.129507  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.129569  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn3_1_2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.129646  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.129756  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.129808  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.129905  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.129943  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.129986  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv3_2_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.130065  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.130340  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.130409  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.130475  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv3_2_1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 1, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.130556  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 1, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.132437  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.132603  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.132682  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.132721  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.132775  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn3_2_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.132853  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.133026  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.133083  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.133147  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn3_2_1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.133222  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.133331  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.133385  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.133483  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.133520  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.133561  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'identity1', 'name': 'identity', 'params': {}}
2020-01-04 22:36:53.133616  layers.py             0577: custom_model_layer_identity       -> ENTRY: params = {}
2020-01-04 22:36:53.133696  layers.py             0577: custom_model_layer_identity       <- EXIT : ---
2020-01-04 22:36:53.133740  layers.py             0206: custom_model_get_layer            <- EXIT : Identity(
                                                                                          
                                                                                          )
2020-01-04 22:36:53.133797  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'identity1', 'name': 'identity', 'params': {}}
2020-01-04 22:36:53.133849  layers.py             0577: custom_model_layer_identity       -> ENTRY: params = {}
2020-01-04 22:36:53.133912  layers.py             0577: custom_model_layer_identity       <- EXIT : ---
2020-01-04 22:36:53.133952  layers.py             0206: custom_model_get_layer            <- EXIT : Identity(
                                                                                          
                                                                                          )
2020-01-04 22:36:53.134015  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.134047  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.134153  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.134188  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.134230  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv4', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.134309  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.134675  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.134749  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.134825  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.134863  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.134910  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn4', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.134985  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.135100  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.135156  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.135224  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.135259  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.135300  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu3', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.135354  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:53.135422  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:53.135462  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:53.135512  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.135543  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.135584  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool4', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:53.135660  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:36:53.135755  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:36:53.135799  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:36:53.135867  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.135900  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.135940  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:53.135994  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:36:53.136070  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:36:53.136107  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:36:53.136155  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.136186  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.136229  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.136291  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:53.136409  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:53.136461  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:36:53.136519  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.136553  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.136594  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:53.136655  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:36:53.136739  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:36:53.136783  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:36:53.136838  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.136870  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.136909  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.136969  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:53.137069  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:53.137116  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:36:53.137173  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:53.137214  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:53.137266  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:53.140055  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:53.370464  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:53.370571  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:53.434431  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:53.434603  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:53.434706  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.434763  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:53.435264  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:53.435878  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:53.435948  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.435991  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  12
2020-01-04 22:36:53.436037  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.436075  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       12
2020-01-04 22:36:53.436122  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.436158  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.436189  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.436221  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:53.436261  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:53.448574  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.448707  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.448771  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.448830  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.448886  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.448940  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.448990  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:53.449043  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449097  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449148  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449201  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449246  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449295  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449342  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449387  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449436  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.449479  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:53.449589  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:53.450179  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:53.450247  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.450287  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:53.450350  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.450422  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:53.450454  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450482  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:53.450509  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450535  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450561  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:53.450586  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:53.450612  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:53.450637  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450663  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450689  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450715  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450742  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450769  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:53.450796  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:53.450837  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:53.450875  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.450910  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.450941  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.450968  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:53.451082  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:53.451173  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:53.451232  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:53.451295  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.451337  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:53.451390  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:53.451422  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:53.451472  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:53.451548  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:53.451611  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.451651  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:53.451691  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:53.451742  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:53.451789  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:53.452005  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:53.452049  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:53.452138  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.452177  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:53.452245  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.452282  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:53.452365  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.452398  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:53.452431  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:53.452467  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:53.452504  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:53.452543  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:53.452941  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:53.452989  common.py             0083: save                              <- EXIT
2020-01-04 22:36:53.453046  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:53.453090  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:53.453130  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.453167  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:53.453205  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.453245  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:53.453284  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.453319  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:53.453375  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.453410  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.453441  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.453469  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:53.453546  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:36:53.453628  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.453731  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:36:53.453803  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.453885  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:36:53.453925  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.453994  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv2
2020-01-04 22:36:53.454072  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.454160  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn2
2020-01-04 22:36:53.454225  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.454297  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu2
2020-01-04 22:36:53.454367  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.454449  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:36:53.454522  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:53.454609  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:36:53.454649  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:53.454719  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:36:53.454774  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.454857  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:36:53.454910  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:53.454977  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:36:53.455028  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.455120  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu2', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:36:53.455435  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:53.666465  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:53.666679  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:53.666779  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:53.666834  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:53.666885  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:53.667571  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:53.667620  common.py             0083: save                              <- EXIT
2020-01-04 22:36:53.667694  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:53.667755  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:53.667795  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.667833  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:53.667874  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.667912  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:53.667995  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.668032  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.668198  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.668236  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.668289  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.668387  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.669052  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.669143  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.669230  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.669269  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.669317  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.669398  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.669538  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.669603  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.669673  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.669710  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.669750  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.669802  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:53.669876  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:53.669918  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:53.669969  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.670001  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.670040  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.670118  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:53.670425  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:53.670513  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:53.670585  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.670620  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.670665  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.670739  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:53.670854  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:53.670908  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:53.670975  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.671008  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.671047  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.671096  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:53.671160  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:53.671197  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:53.671246  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.671278  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.671332  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:53.671455  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:36:53.671569  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:36:53.671618  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:36:53.671687  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.671721  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.671759  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:53.671813  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:36:53.672134  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:36:53.672182  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:36:53.672234  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.672267  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.672308  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.672376  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:53.672495  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:53.672546  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:36:53.672607  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.672640  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.672681  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:53.672743  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:36:53.672826  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:36:53.672871  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:36:53.672926  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:53.672958  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:53.672997  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.673056  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:53.673155  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:53.673201  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:36:53.673257  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:53.673297  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:36:53.673349  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:36:53.675245  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:53.904886  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:53.904992  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:53.967132  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:53.967308  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:53.967367  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.967409  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:53.967960  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:53.968317  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:53.968373  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.968419  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  6
2020-01-04 22:36:53.968478  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.968517  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       6
2020-01-04 22:36:53.968558  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.968594  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.968633  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.968668  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:53.968711  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:53.976051  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976201  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976293  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976351  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976408  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976462  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976511  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:53.976566  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976621  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976672  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976722  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976773  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976823  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976873  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976917  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.976966  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:53.977012  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:53.977128  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:53.977731  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:53.977798  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.977838  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:53.977880  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.977935  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:53.977967  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:53.977994  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:53.978021  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978047  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978074  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:53.978100  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:53.978126  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:53.978151  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978177  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978203  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978229  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978254  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978280  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:53.978307  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:53.978401  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:53.978439  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.978473  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.978504  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.978530  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:53.978646  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:53.978733  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:53.978787  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:53.978852  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.978891  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:53.978942  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:53.978973  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:53.979021  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:53.979095  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:53.979171  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.979212  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:53.979252  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:53.979289  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:53.979322  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:53.979536  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:53.979595  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:53.979735  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.979791  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:53.979896  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.979934  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:53.980002  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:53.980034  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:53.980069  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:53.980106  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:53.980146  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:53.980185  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:53.980602  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:53.980652  common.py             0083: save                              <- EXIT
2020-01-04 22:36:53.980685  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:53.980725  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:53.980763  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.980799  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:53.980836  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.980871  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:53.980907  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.980946  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:53.981002  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.981037  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:53.981068  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:53.981095  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:53.981175  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:36:53.981256  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.981398  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:36:53.981473  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.981566  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:36:53.981604  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.981672  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv2
2020-01-04 22:36:53.981747  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:53.981834  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn2
2020-01-04 22:36:53.981898  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:53.981970  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu2
2020-01-04 22:36:53.982007  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:36:53.982075  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:36:53.982146  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:53.982228  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:36:53.982268  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:53.982380  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:36:53.982463  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.982546  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:36:53.982598  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:53.982664  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:36:53.982716  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:53.982808  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu2', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_uniform
2020-01-04 22:36:53.983116  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:54.674704  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:54.674899  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:54.675040  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:54.675101  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:54.675144  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:54.675825  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:54.675875  common.py             0083: save                              <- EXIT
2020-01-04 22:36:54.675930  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:54.675989  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:54.676028  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:54.676066  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:54.676102  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:54.676139  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:54.676222  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.676260  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.676429  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.676466  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.676517  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:54.676616  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:54.677284  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:54.677427  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:54.677511  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.677550  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.677597  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:54.677678  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:54.677819  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:54.677884  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:54.677953  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.677988  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.678028  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:54.678081  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:54.678153  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:54.678197  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:54.678246  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.678281  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.678330  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:54.678442  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:54.678713  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:54.678780  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:54.678855  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.678892  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.678937  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:54.679011  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:54.679123  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:54.679179  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:54.679245  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.679278  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.679317  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:36:54.679368  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:54.679433  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:54.679472  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:54.679521  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.679552  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.679592  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:54.679674  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:36:54.679786  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:36:54.679834  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:36:54.679904  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.679936  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.679975  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:54.680027  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:36:54.680351  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:36:54.680400  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:36:54.680453  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.680487  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.680528  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:54.680592  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:54.680711  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:54.680764  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:36:54.680824  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.680857  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.680898  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:54.680959  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:36:54.681039  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:36:54.681084  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:36:54.681138  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:54.681170  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:54.681209  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:54.681269  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:54.681368  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:54.681416  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:36:54.681472  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:54.681513  initializers.py       0029: initializer_xavier_uniform        -> ENTRY
2020-01-04 22:36:54.681565  initializers.py       0029: initializer_xavier_uniform        <- EXIT : ---
2020-01-04 22:36:54.683661  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:54.943029  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:54.943153  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:55.006161  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:55.006363  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:55.006450  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.006493  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:55.007159  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:55.007516  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:55.007597  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.007641  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  6
2020-01-04 22:36:55.007685  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.007722  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       6
2020-01-04 22:36:55.007761  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.007795  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:55.007826  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.007857  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:55.007904  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:36:55.014283  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014400  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014467  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014526  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014586  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014643  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014694  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:36:55.014747  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014799  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014850  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014895  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014939  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.014987  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.015035  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.015080  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.015131  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:36:55.015176  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:36:55.015307  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:36:55.015890  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:36:55.015956  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:55.015997  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:36:55.016040  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:55.016096  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:36:55.016128  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016156  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:55.016184  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016211  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016238  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:36:55.016264  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:36:55.016291  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:36:55.016317  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016344  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016371  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016397  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016424  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016450  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:36:55.016477  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:36:55.016520  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:36:55.016558  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.016594  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:55.016625  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.016653  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:36:55.016779  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:36:55.016878  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:55.016936  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:36:55.017000  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:55.017046  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:36:55.017101  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:36:55.017133  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:36:55.017183  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:36:55.017261  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:55.017326  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:55.017367  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:36:55.017408  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:36:55.017445  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:36:55.017481  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:55.017676  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:36:55.017725  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:36:55.017812  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:55.017853  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:36:55.017920  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:55.017959  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:36:55.018021  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:36:55.018054  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:36:55.018089  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:55.018125  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:55.018163  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:55.018204  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:55.018661  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:55.018714  common.py             0083: save                              <- EXIT
2020-01-04 22:36:55.018775  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:36:55.018822  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:36:55.018862  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.018899  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:36:55.018939  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.018976  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:36:55.019015  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.019051  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:36:55.019114  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.019151  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:55.019184  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.019212  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:36:55.019295  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:36:55.019382  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:55.019495  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:36:55.019568  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:55.019653  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:36:55.019693  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:55.019764  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv2
2020-01-04 22:36:55.019844  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:55.019936  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn2
2020-01-04 22:36:55.020004  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:55.020081  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu2
2020-01-04 22:36:55.020120  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:36:55.020193  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:36:55.020267  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:55.020353  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:36:55.020396  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:55.020467  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:36:55.020529  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:55.020617  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:36:55.020671  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:55.020741  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:36:55.020794  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:55.020891  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu2', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = orthogonal_normal
2020-01-04 22:36:55.021223  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:36:55.292277  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:36:55.292471  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:36:55.292558  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:36:55.292615  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:36:55.292661  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:36:55.293334  common.py             0017: write_json                        <- EXIT
2020-01-04 22:36:55.293384  common.py             0083: save                              <- EXIT
2020-01-04 22:36:55.293442  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:36:55.293504  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:36:55.293542  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.293580  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:36:55.293617  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.293655  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:36:55.293739  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.293782  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.293953  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.293990  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.294042  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:55.294137  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:55.294786  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:55.294874  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:55.294959  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.294998  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.295045  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:55.295126  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:55.295262  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:55.295328  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:55.295398  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.295433  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.295473  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:36:55.295527  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:55.295603  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:55.295645  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:55.295695  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.295727  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.295767  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:36:55.295845  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:36:55.296112  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:36:55.296179  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:36:55.296251  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.296287  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.296337  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:36:55.296414  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:36:55.296531  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:36:55.296586  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:36:55.296654  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.296689  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.296729  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:36:55.296780  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:36:55.296847  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:36:55.296887  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:36:55.296938  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.296972  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.297012  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:36:55.297096  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:36:55.297211  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:36:55.297260  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:36:55.297329  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.297366  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.297406  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:36:55.297460  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:36:55.297768  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:36:55.297819  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:36:55.297872  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.297906  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.297948  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:55.298013  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:55.298131  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:55.298183  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:36:55.298247  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.298281  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.298356  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:36:55.298435  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:36:55.298519  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:36:55.298565  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:36:55.298619  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:36:55.298651  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:36:55.298691  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:36:55.298751  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:36:55.298851  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:36:55.298898  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:36:55.298952  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:36:55.298996  initializers.py       0041: initializer_orthogonal_normal     -> ENTRY
2020-01-04 22:36:55.299044  initializers.py       0041: initializer_orthogonal_normal     <- EXIT : ---
2020-01-04 22:36:55.300954  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:36:55.571580  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:36:55.571701  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:36:55.637705  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:36:55.637912  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:36:55.637984  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.638039  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:36:55.638399  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:36:55.638774  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:36:55.638842  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.638885  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  6
2020-01-04 22:36:55.638930  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.638967  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       6
2020-01-04 22:36:55.639006  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.639040  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:36:55.639071  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:36:55.639107  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:36:55.639152  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:01.533326  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533479  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533552  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533612  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533672  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533740  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533790  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:01.533845  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533897  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533946  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.533994  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.534042  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.534090  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.534136  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.534178  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.534226  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:01.534268  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:01.534420  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:01.535023  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:01.535111  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:01.535153  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:01.535197  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:01.535267  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:01.535299  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535328  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:01.535357  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535385  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535414  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:01.535443  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:01.535472  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:01.535499  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535526  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535553  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535581  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535609  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535637  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:01.535665  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:01.535714  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:01.535754  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.535792  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:01.535826  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.535856  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:01.535993  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:01.536105  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:01.536178  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:01.536247  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:01.536294  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:01.536376  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:01.536416  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:01.536473  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:01.536558  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:01.536630  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:01.536678  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:01.536721  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:01.536762  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:01.536801  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:01.537023  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:01.537083  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:01.537184  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:01.537229  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:01.537308  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:01.537352  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:01.537424  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:01.537460  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:01.537498  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:01.537539  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:01.537584  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:01.537637  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:01.538121  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:01.538198  common.py             0083: save                              <- EXIT
2020-01-04 22:37:01.538238  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:01.538285  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:01.538355  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.538412  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:01.538456  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.538494  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:01.538533  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.538569  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:01.538636  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.538677  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:01.538711  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.538740  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:01.538832  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:37:01.538938  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:01.539067  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:37:01.539151  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:01.539248  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:37:01.539293  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:01.539367  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv2
2020-01-04 22:37:01.539455  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:01.539555  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn2
2020-01-04 22:37:01.539631  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:01.539715  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu2
2020-01-04 22:37:01.539758  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:01.539835  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:37:01.539918  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:01.540011  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:37:01.540058  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:01.540138  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:37:01.540203  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:01.540311  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:37:01.540381  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:01.540460  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:37:01.540517  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:01.540624  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu2', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = orthogonal_uniform
2020-01-04 22:37:01.540981  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:01.614101  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:01.614297  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:01.614394  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:01.614453  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:01.614501  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:01.615212  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:01.615265  common.py             0083: save                              <- EXIT
2020-01-04 22:37:01.615321  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:01.615383  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:01.615424  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.615464  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:01.615503  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.615542  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:01.615632  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.615672  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.615852  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.615895  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.615952  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:01.616056  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:01.617099  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:01.617191  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:01.617281  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.617323  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.617375  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:01.617463  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:01.617605  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:01.617674  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:01.617747  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.617783  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.617825  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:01.617882  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:01.617957  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:01.618001  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:01.618054  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.618088  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.618131  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:01.618215  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:01.618502  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:01.618575  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:01.618653  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.618692  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.618740  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:01.618826  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:01.618948  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:01.619006  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:01.619077  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.619113  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.619155  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:01.619208  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:01.619276  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:01.619316  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:01.619367  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.619400  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.619442  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:01.619528  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:37:01.619647  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:37:01.619698  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:37:01.619772  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.619807  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.619847  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:01.619904  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:37:01.619979  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:37:01.620020  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:37:01.620068  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.620101  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.620142  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:01.620207  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:01.620330  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:01.620384  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:37:01.620447  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.620485  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.620530  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:01.620592  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:37:01.620677  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:37:01.620724  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:37:01.620781  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:01.620814  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:01.620855  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:01.620918  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:01.621024  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:01.621074  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:37:01.621131  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:01.621176  initializers.py       0045: initializer_orthogonal_uniform    -> ENTRY
2020-01-04 22:37:01.621229  initializers.py       0045: initializer_orthogonal_uniform    <- EXIT : ---
2020-01-04 22:37:01.623193  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:01.904990  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:01.905095  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:01.975241  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:01.975425  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:01.975488  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.975532  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:01.975862  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:01.976169  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:01.976226  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.976270  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  6
2020-01-04 22:37:01.976318  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.976357  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       6
2020-01-04 22:37:01.976400  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.976436  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:01.976469  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:01.976502  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:01.976553  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:07.420197  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420343  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420413  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420479  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420568  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420624  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420675  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:07.420730  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420783  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420834  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420883  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420932  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.420982  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.421029  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.421073  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.421122  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.421166  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:07.421280  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:07.421883  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:07.421956  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.421998  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:07.422042  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.422099  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:07.422133  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422162  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:07.422191  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422221  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422253  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:07.422283  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:07.422312  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:07.422355  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422386  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422413  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422442  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422471  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422500  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:07.422529  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:07.422580  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:07.422621  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.422659  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:07.422692  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.422722  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:07.422859  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:07.422963  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:07.423039  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:07.423109  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.423156  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:07.423226  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:07.423263  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:07.423328  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:07.423416  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:07.423485  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.423533  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:07.423578  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:07.423620  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:07.423659  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:07.423890  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:07.423954  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:07.424054  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.424104  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:07.424180  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.424223  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:07.424289  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.424328  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:07.424367  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:07.424408  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:07.424453  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:07.424501  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:07.424997  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:07.425071  common.py             0083: save                              <- EXIT
2020-01-04 22:37:07.425112  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:07.425164  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:07.425207  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.425250  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:07.425294  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.425333  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:07.425374  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.425416  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:07.425479  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.425519  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:07.425561  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.425593  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:07.425687  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:37:07.425789  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:07.425918  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:37:07.426000  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:07.426096  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:37:07.426144  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:07.426222  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv2
2020-01-04 22:37:07.426307  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:07.426424  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn2
2020-01-04 22:37:07.426509  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:07.426609  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu2
2020-01-04 22:37:07.426659  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:07.427201  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:37:07.427870  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:07.429179  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:37:07.429359  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:07.429469  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:37:07.429543  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:07.429649  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:37:07.429720  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:07.429802  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:37:07.429861  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:07.429985  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu2', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = normal
2020-01-04 22:37:07.430366  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:07.506020  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:07.506215  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:07.506302  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:07.506369  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:07.506416  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:07.507094  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:07.507144  common.py             0083: save                              <- EXIT
2020-01-04 22:37:07.507198  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:07.507259  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:07.507298  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.507336  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:07.507373  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.507410  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:07.507493  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.507531  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.507705  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.507743  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.507796  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:07.507896  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:07.508578  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:07.508669  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:07.508754  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.508793  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.508841  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:07.508922  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:07.509065  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:07.509131  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:07.509214  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.509261  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.509329  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:07.509380  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:07.509454  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:07.509495  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:07.509545  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.509577  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.509618  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:07.509701  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:07.509969  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:07.510037  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:07.510111  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.510148  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.510194  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:07.510271  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:07.510403  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:07.510463  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:07.510532  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.510567  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.510608  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:07.510659  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:07.510725  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:07.510764  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:07.510813  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.510845  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.510886  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:07.510969  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:37:07.511084  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:37:07.511142  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:37:07.511256  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.511291  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.511344  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:07.511398  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:37:07.511472  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:37:07.511509  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:37:07.511556  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.511587  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.511626  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:07.511688  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:07.511808  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:07.511859  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:37:07.511918  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.511951  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.511993  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:07.512057  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:37:07.512140  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:37:07.512188  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:37:07.512241  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:07.512273  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:07.512312  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:07.512372  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:07.512474  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:07.512519  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:37:07.512575  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:07.512615  initializers.py       0037: initializer_normal                -> ENTRY
2020-01-04 22:37:07.512663  initializers.py       0037: initializer_normal                <- EXIT : ---
2020-01-04 22:37:07.514518  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:07.815836  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:07.815943  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:07.883039  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:07.883225  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:07.883287  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.883330  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:07.883644  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:07.883953  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:07.884020  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.884063  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  6
2020-01-04 22:37:07.884109  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.884146  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       6
2020-01-04 22:37:07.884187  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.884221  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:07.884253  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.884286  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:07.884333  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:07.890370  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890475  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890538  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890597  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890665  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890721  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890771  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:07.890827  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890880  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890932  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.890979  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.891025  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.891074  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.891121  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.891164  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.891212  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:07.891255  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:07.891364  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:07.891989  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:07.892059  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.892115  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:07.892159  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.892232  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:07.892265  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892292  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:07.892320  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892346  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892373  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:07.892400  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:07.892427  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:07.892454  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892480  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892507  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892533  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892560  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892587  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:07.892614  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:07.892658  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:07.892696  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.892731  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:07.892762  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.892789  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:07.892913  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:07.893002  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:07.893063  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:07.893126  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.893167  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:07.893224  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:07.893256  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:07.893307  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:07.893393  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:07.893458  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.893500  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:07.893540  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:07.893577  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:07.893612  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:07.893811  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:07.893857  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:07.893947  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.893987  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:07.894059  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.894097  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:07.894161  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:07.894209  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:07.894244  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:07.894281  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:07.894329  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:07.894384  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:07.895239  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:07.895321  common.py             0083: save                              <- EXIT
2020-01-04 22:37:07.895358  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:07.895405  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:07.895445  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.895483  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:07.895523  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.895574  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:07.895641  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.895678  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:07.895737  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.895775  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:07.895809  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:07.895850  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:07.895935  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:37:07.896022  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:07.896133  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:37:07.896204  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:07.896303  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:37:07.896344  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:07.896428  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv2
2020-01-04 22:37:07.896522  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:07.896625  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn2
2020-01-04 22:37:07.896692  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:07.896766  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu2
2020-01-04 22:37:07.896805  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:07.896895  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:37:07.897009  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:07.897094  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:37:07.897136  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:07.897204  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:37:07.897259  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:07.897344  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:37:07.897398  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:07.897471  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:37:07.897523  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:07.897616  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu2', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = uniform
2020-01-04 22:37:07.897935  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:08.593432  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:08.593624  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:08.593768  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:08.593829  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:08.593878  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:08.594643  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:08.594694  common.py             0083: save                              <- EXIT
2020-01-04 22:37:08.594751  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:08.594813  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:08.594852  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.594892  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:08.594929  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.594966  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:08.595050  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.595091  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.595265  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.595303  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.595357  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:08.595459  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:08.596186  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:08.596281  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:08.596368  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.596408  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.596457  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:08.596540  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:08.596680  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:08.596747  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:08.596817  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.596852  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.596893  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:08.596945  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:08.597021  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:08.597063  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:08.597114  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.597147  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.597188  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:08.597268  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:08.597539  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:08.597606  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:08.597679  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.597716  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.597762  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:08.597839  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:08.597962  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:08.598018  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:08.598086  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.598120  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.598161  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:08.598212  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:08.598277  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:08.598318  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:08.598406  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.598439  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.598480  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:08.598563  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:37:08.598676  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:37:08.598725  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:37:08.598795  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.598829  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.598869  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:08.598923  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:37:08.598994  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:37:08.599032  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:37:08.599081  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.599113  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.599153  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:08.599215  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:08.599330  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:08.599381  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:37:08.599440  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.599474  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.599515  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:08.599576  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:37:08.599665  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:37:08.599710  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:37:08.599765  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:08.599797  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:08.599836  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:08.599895  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:08.599997  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:08.600047  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:37:08.600103  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:08.600148  initializers.py       0049: initializer_uniform               -> ENTRY
2020-01-04 22:37:08.600197  initializers.py       0049: initializer_uniform               <- EXIT : ---
2020-01-04 22:37:08.602245  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:08.901865  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:08.901984  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:08.971822  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:08.971993  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:08.972052  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.972093  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:08.972402  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:08.972719  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:08.972797  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.972839  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  6
2020-01-04 22:37:08.972882  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.972919  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       6
2020-01-04 22:37:08.972958  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.972992  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:08.973021  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.973056  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:08.973099  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:08.979361  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979480  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979544  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979600  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979654  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979708  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979765  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:08.979823  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979878  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979931  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.979976  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.980025  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.980076  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.980120  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.980164  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.980213  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:08.980257  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:08.980369  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:08.980962  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:08.981030  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:08.981070  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:08.981111  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:08.981168  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:08.981199  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981227  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:08.981254  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981280  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981307  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:08.981333  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:08.981359  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:08.981385  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981411  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981437  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981463  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981489  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981516  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:08.981542  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:08.981585  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:08.981623  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.981659  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:08.981690  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.981716  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:08.981835  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:08.981923  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:08.981978  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:08.982039  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:08.982079  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:08.982132  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:08.982163  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:08.982211  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:08.982286  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:08.982366  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:08.982408  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:08.982447  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:08.982484  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:08.982518  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:08.982708  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:08.982752  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:08.982839  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:08.982879  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:08.982947  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:08.982985  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:08.983048  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:08.983081  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:08.983115  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:08.983151  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:08.983187  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:08.983226  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:08.983627  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:08.983678  common.py             0083: save                              <- EXIT
2020-01-04 22:37:08.983712  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:08.983753  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:08.983791  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.983828  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:08.983867  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.983918  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:08.983968  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.984018  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:08.984088  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.984138  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:08.984184  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:08.984212  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:08.984290  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv1
2020-01-04 22:37:08.984378  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:08.984615  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn1
2020-01-04 22:37:08.984692  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:08.984845  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu1
2020-01-04 22:37:08.984927  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:08.985012  level_8_layers_main.  0256: convolution                       -> ENTRY: output_channels = 16, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = conv2
2020-01-04 22:37:08.985092  level_8_layers_main.  0256: convolution                       <- EXIT : {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:08.985194  level_8_layers_main.  0878: batch_normalization               -> ENTRY: moving_average_momentum = 0.9, epsilon = 1e-05, use_trainable_parameters = True, activate_scale_shift_operation = False, uid = bn2
2020-01-04 22:37:08.985334  level_8_layers_main.  0878: batch_normalization               <- EXIT : {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:08.985413  level_8_layers_main.  0939: relu                              -> ENTRY: uid = relu2
2020-01-04 22:37:08.985452  level_8_layers_main.  0939: relu                              <- EXIT : {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:08.985538  level_8_layers_main.  0479: max_pooling                       -> ENTRY: kernel_size = 2, stride = None, padding = 0, dilation = 1, return_indices = False, ceil_mode = False, layout = NCHW, uid = pool1
2020-01-04 22:37:08.985701  level_8_layers_main.  0479: max_pooling                       <- EXIT : {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:08.985819  level_8_layers_main.  0816: flatten                           -> ENTRY: uid = flatten1
2020-01-04 22:37:08.985860  level_8_layers_main.  0816: flatten                           <- EXIT : {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:08.985930  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 1024, use_bias = True, flatten = True, uid = fc1
2020-01-04 22:37:08.985986  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:08.986071  level_8_layers_main.  0799: dropout                           -> ENTRY: drop_probability = 0.2, axes = (), uid = dp1
2020-01-04 22:37:08.986125  level_8_layers_main.  0799: dropout                           <- EXIT : {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:08.986193  level_8_layers_main.  0781: fully_connected                   -> ENTRY: units = 2, use_bias = True, flatten = True, uid = fc2
2020-01-04 22:37:08.986244  level_8_layers_main.  0781: fully_connected                   <- EXIT : {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:08.986372  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu1', 'name': 'relu', 'params': {}}, {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}, {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}, {'uid': 'relu2', 'name': 'relu', 'params': {}}, {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}, {'uid': 'flatten1', 'name': 'flatten', 'params': {}}, {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}, {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}, {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = msra
2020-01-04 22:37:08.986698  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:09.264082  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:09.264276  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:09.264364  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:09.264419  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:09.264466  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:09.265123  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:09.265172  common.py             0083: save                              <- EXIT
2020-01-04 22:37:09.265225  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:09.265284  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:09.265323  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.265361  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:09.265398  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.265435  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:09.265517  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.265557  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.265722  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.265759  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.265814  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv1', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:09.265907  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:09.267066  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:09.267157  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:09.267241  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.267280  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.267327  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn1', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:09.267408  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:09.267543  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:09.267610  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:09.267679  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.267714  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.267755  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu1', 'name': 'relu', 'params': {}}
2020-01-04 22:37:09.267806  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:09.267878  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:09.267919  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:09.267969  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.268000  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.268041  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'conv2', 'name': 'convolution2d', 'params': {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:09.268120  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 16, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:09.268456  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:09.268528  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:09.268683  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.268723  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.268771  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'bn2', 'name': 'batch_normalization', 'params': {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}}
2020-01-04 22:37:09.268852  layers.py             0584: custom_model_layer_batch_normali  -> ENTRY: params = {'moving_average_momentum': 0.9, 'epsilon': 1e-05, 'use_trainable_parameters': True, 'activate_scale_shift_operation': False}
2020-01-04 22:37:09.268966  layers.py             0584: custom_model_layer_batch_normali  <- EXIT : ---
2020-01-04 22:37:09.269022  layers.py             0206: custom_model_get_layer            <- EXIT : BatchNorm(axis=1, eps=1e-05, momentum=0.9, fix_gamma=False, use_global_stats=False, in_channels=None)
2020-01-04 22:37:09.269094  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.269129  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.269169  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'relu2', 'name': 'relu', 'params': {}}
2020-01-04 22:37:09.269219  layers.py             0616: custom_model_activation_relu      -> ENTRY: params = {}
2020-01-04 22:37:09.269284  layers.py             0616: custom_model_activation_relu      <- EXIT : ---
2020-01-04 22:37:09.269322  layers.py             0206: custom_model_get_layer            <- EXIT : Activation(relu)
2020-01-04 22:37:09.269371  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.269403  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.269444  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'pool1', 'name': 'max_pooling2d', 'params': {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}}
2020-01-04 22:37:09.269526  layers.py             0448: custom_model_layer_max_pooling2d  -> ENTRY: params = {'kernel_size': 2, 'stride': None, 'padding': 0, 'dilation': 1, 'return_indices': False, 'ceil_mode': False, 'layout': 'NCHW'}
2020-01-04 22:37:09.269637  layers.py             0448: custom_model_layer_max_pooling2d  <- EXIT : ---
2020-01-04 22:37:09.269685  layers.py             0206: custom_model_get_layer            <- EXIT : MaxPool2D(size=(2, 2), stride=(2, 2), padding=(0, 0), ceil_mode=False, global_pool=False, pool_type=max, layout=NCHW)
2020-01-04 22:37:09.269754  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.269786  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.269825  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'flatten1', 'name': 'flatten', 'params': {}}
2020-01-04 22:37:09.269879  layers.py             0570: custom_model_layer_flatten        -> ENTRY: params = {}
2020-01-04 22:37:09.269953  layers.py             0570: custom_model_layer_flatten        <- EXIT : ---
2020-01-04 22:37:09.269993  layers.py             0206: custom_model_get_layer            <- EXIT : Flatten
2020-01-04 22:37:09.270041  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.270074  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.270113  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc1', 'name': 'fully_connected', 'params': {'units': 1024, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:09.270174  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 1024, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:09.270291  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:09.270349  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 1024, linear)
2020-01-04 22:37:09.270410  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.270443  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.270483  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'dp1', 'name': 'dropout', 'params': {'drop_probability': 0.2, 'axes': ()}}
2020-01-04 22:37:09.270544  layers.py             0562: custom_model_layer_dropout        -> ENTRY: params = {'drop_probability': 0.2, 'axes': ()}
2020-01-04 22:37:09.270625  layers.py             0562: custom_model_layer_dropout        <- EXIT : ---
2020-01-04 22:37:09.270669  layers.py             0206: custom_model_get_layer            <- EXIT : Dropout(p = 0.2, axes=())
2020-01-04 22:37:09.270728  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:09.270763  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:09.270802  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': 'fc2', 'name': 'fully_connected', 'params': {'units': 2, 'use_bias': True, 'flatten': True}}
2020-01-04 22:37:09.270862  layers.py             0548: custom_model_layer_fully_connect  -> ENTRY: params = {'units': 2, 'use_bias': True, 'flatten': True}
2020-01-04 22:37:09.270961  layers.py             0548: custom_model_layer_fully_connect  <- EXIT : ---
2020-01-04 22:37:09.271007  layers.py             0206: custom_model_get_layer            <- EXIT : Dense(None -> 2, linear)
2020-01-04 22:37:09.271063  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:09.271101  initializers.py       0033: initializer_msra                  -> ENTRY
2020-01-04 22:37:09.271159  initializers.py       0033: initializer_msra                  <- EXIT : ---
2020-01-04 22:37:09.273042  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:09.589846  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:09.589952  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:09.662587  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:09.662759  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:09.662819  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.662860  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:09.663170  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:09.663858  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:09.663944  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.663987  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  6
2020-01-04 22:37:09.664032  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.664070  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       6
2020-01-04 22:37:09.664110  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.664144  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:09.664175  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.664205  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:09.664286  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:09.670887  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671005  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671066  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671120  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671176  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671228  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671277  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:09.671329  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671387  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671437  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671479  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671522  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671571  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671617  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671663  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671713  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:09.671756  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:09.671861  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:09.672414  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:09.672484  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:09.672524  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:09.672565  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:09.672622  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:09.672653  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672679  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:09.672705  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672731  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672756  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:09.672781  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:09.672807  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:09.672832  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672857  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672882  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672907  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672933  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672958  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:09.672983  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:09.673023  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:09.673060  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.673094  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:09.673124  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.673151  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:09.673267  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:09.673352  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:09.673406  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:09.673467  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:09.673506  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:09.673557  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:09.673588  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:09.673636  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:09.673710  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:09.673777  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:09.673817  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:09.673855  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:09.673892  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:09.673924  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:09.674106  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:09.674149  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:09.674231  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:09.674269  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:09.674371  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:09.674424  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:09.674497  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:09.674528  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:09.674561  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:09.674596  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:09.674632  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:09.674670  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:09.675070  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:09.675120  common.py             0083: save                              <- EXIT
2020-01-04 22:37:09.675154  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:09.675195  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:09.675233  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.675269  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:09.675308  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.675358  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:09.675408  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.675458  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:09.675529  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.675579  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:09.675611  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:09.675640  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:09.675737  level_8_layers_main.  0201: convolution1d                     -> ENTRY: output_channels = 3, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCW, uid = None
2020-01-04 22:37:09.675817  level_8_layers_main.  0201: convolution1d                     <- EXIT : {'uid': None, 'name': 'convolution1d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}}
2020-01-04 22:37:09.675917  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'convolution1d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:37:09.676015  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:10.378786  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:10.379080  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:10.379210  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:10.379283  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:10.379338  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:10.379918  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:10.379975  common.py             0083: save                              <- EXIT
2020-01-04 22:37:10.380063  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:10.380124  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:10.380164  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.380202  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:10.380239  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.380276  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:10.380367  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:10.380411  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:10.380582  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:10.380622  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:10.380677  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'convolution1d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}}
2020-01-04 22:37:10.380774  layers.py             0299: custom_model_layer_convolution1d  -> ENTRY: params = {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}
2020-01-04 22:37:10.381409  layers.py             0299: custom_model_layer_convolution1d  <- EXIT : ---
2020-01-04 22:37:10.381499  layers.py             0206: custom_model_get_layer            <- EXIT : Conv1D(None -> 3, kernel_size=(3,), stride=(1,), padding=(1,))
2020-01-04 22:37:10.381579  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:10.381626  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:37:10.381684  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:37:10.382535  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:10.684347  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:10.684450  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:10.758816  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:10.758990  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:10.759057  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.759100  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:10.759266  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:10.759411  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:10.759473  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.759526  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:37:10.759569  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.759606  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:37:10.759645  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.759679  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:10.759709  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.759743  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:10.759785  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:10.761823  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.761934  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.761995  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762050  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762105  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762156  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762204  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:10.762257  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762310  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762411  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762469  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762515  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762566  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762613  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762662  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762710  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:10.762755  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:10.762871  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:10.763495  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:10.763559  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:10.763598  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:10.763639  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:10.763693  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:10.763724  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:10.763750  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:10.763776  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:10.763801  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:10.763827  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:10.763853  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:10.763878  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:10.763904  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:10.763930  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:10.763955  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:10.763981  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:10.764006  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:10.764031  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:10.764060  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:10.764101  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:10.764138  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.764172  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:10.764203  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.764230  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:10.764342  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:10.764429  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:10.764483  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:10.764542  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:10.764581  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:10.764632  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:10.764663  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:10.764711  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:10.764786  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:10.764848  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:10.764888  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:10.764927  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:10.764965  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:10.764998  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:10.765180  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:10.765224  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:10.765302  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:10.765355  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:10.765455  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:10.765494  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:10.765558  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:10.765591  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:10.765626  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:10.765661  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:10.765702  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:10.765743  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:10.766158  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:10.766207  common.py             0083: save                              <- EXIT
2020-01-04 22:37:10.766241  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:10.766281  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:10.766338  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.766392  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:10.766432  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.766468  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:10.766506  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.766542  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:10.766599  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.766636  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:10.766668  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.766696  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:10.766785  level_8_layers_main.  0228: convolution2d                     -> ENTRY: output_channels = 3, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = None
2020-01-04 22:37:10.766868  level_8_layers_main.  0228: convolution2d                     <- EXIT : {'uid': None, 'name': 'convolution2d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:10.766964  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'convolution2d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:37:10.767065  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:10.839899  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:10.840088  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:10.840170  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:10.840225  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:10.840274  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:10.840787  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:10.840835  common.py             0083: save                              <- EXIT
2020-01-04 22:37:10.840889  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:10.840950  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:10.840989  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.841027  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:10.841068  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:10.841106  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:10.841190  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:10.841232  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:10.841407  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:10.841447  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:10.841501  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'convolution2d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:10.841599  layers.py             0323: custom_model_layer_convolution2d  -> ENTRY: params = {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:10.851772  layers.py             0323: custom_model_layer_convolution2d  <- EXIT : ---
2020-01-04 22:37:10.852050  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2D(None -> 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:10.852145  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:10.852191  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:37:10.852249  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:37:10.853157  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:11.160226  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:11.160331  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:11.229513  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:11.229723  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:11.229796  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.229851  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:11.230022  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:11.230174  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:11.230224  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.230265  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:37:11.230311  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.230382  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:37:11.230423  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.230457  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:11.230489  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.230521  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:11.230566  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:11.233360  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233469  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233535  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233609  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233664  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233715  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233762  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:11.233814  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233868  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233926  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.233972  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.234018  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.234066  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.234110  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.234151  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.234197  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.234238  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:11.234397  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:11.234960  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:11.235024  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.235063  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:11.235103  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.235157  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:11.235188  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235214  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:11.235240  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235266  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235305  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:11.235330  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:11.235355  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:11.235381  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235408  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235434  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235471  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235496  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235522  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:11.235547  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:11.235586  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:11.235622  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.235656  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:11.235686  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.235712  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:11.235826  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:11.235909  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:11.235962  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:11.236025  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.236065  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:11.236116  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:11.236147  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:11.236199  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:11.236273  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:11.236334  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.236373  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:11.236412  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:11.236447  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:11.236480  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:11.236666  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:11.236709  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:11.236792  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.236831  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:11.236896  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.236933  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:11.236995  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.237026  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:11.237059  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:11.237093  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:11.237129  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:11.237166  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:11.237538  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:11.237585  common.py             0083: save                              <- EXIT
2020-01-04 22:37:11.237633  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:11.237672  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:11.237722  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.237758  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:11.237795  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.237830  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:11.237866  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.237901  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:11.237955  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.237989  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:11.238023  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.238051  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:11.238131  level_8_layers_main.  0283: convolution3d                     -> ENTRY: output_channels = 3, kernel_size = 3, stride = 1, padding = in_eq_out, groups = 1, dilation = 1, use_bias = True, layout = NCDHW, uid = None
2020-01-04 22:37:11.238209  level_8_layers_main.  0283: convolution3d                     <- EXIT : {'uid': None, 'name': 'convolution3d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}}
2020-01-04 22:37:11.238302  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'convolution3d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:37:11.238461  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:11.308581  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:11.308932  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:11.309102  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:11.309220  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:11.309318  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:11.310223  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:11.310301  common.py             0083: save                              <- EXIT
2020-01-04 22:37:11.310395  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:11.310489  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:11.310552  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.310614  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:11.310674  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.310733  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:11.310868  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:11.310937  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:11.311200  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:11.311261  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:11.311346  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'convolution3d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}}
2020-01-04 22:37:11.311507  layers.py             0347: custom_model_layer_convolution3d  -> ENTRY: params = {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}
2020-01-04 22:37:11.312592  layers.py             0347: custom_model_layer_convolution3d  <- EXIT : ---
2020-01-04 22:37:11.312728  layers.py             0206: custom_model_get_layer            <- EXIT : Conv3D(None -> 3, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
2020-01-04 22:37:11.312867  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:11.312943  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:37:11.313038  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:37:11.314381  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:11.632828  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:11.632932  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:11.701599  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:11.701777  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:11.701835  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.701875  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:11.702129  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:11.702256  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:11.702343  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.702401  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:37:11.702458  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.702494  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:37:11.702533  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.702567  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:11.702597  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.702630  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:11.702677  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:11.705238  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705339  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705401  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705484  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705583  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705636  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705695  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:11.705747  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705800  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705848  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705893  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705937  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.705984  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.706029  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.706071  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.706116  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:11.706158  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:11.706268  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:11.706914  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:11.706979  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.707017  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:11.707059  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.707115  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:11.707146  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707173  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:11.707199  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707225  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707251  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:11.707277  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:11.707302  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:11.707332  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707358  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707383  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707409  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707435  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707460  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:11.707486  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:11.707524  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:11.707561  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.707595  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:11.707625  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.707651  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:11.707768  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:11.707855  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:11.707908  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:11.707971  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.708010  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:11.708095  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:11.708141  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:11.708205  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:11.708281  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:11.708343  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.708383  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:11.708422  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:11.708476  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:11.708522  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:11.708712  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:11.708755  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:11.708839  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.708878  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:11.708949  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.708987  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:11.709049  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:11.709081  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:11.709114  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:11.709148  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:11.709184  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:11.709223  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:11.709608  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:11.709656  common.py             0083: save                              <- EXIT
2020-01-04 22:37:11.709690  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:11.709730  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:11.709767  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.709803  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:11.709840  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.709875  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:11.709912  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.709946  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:11.710002  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.710037  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:11.710068  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.710095  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:11.710182  level_8_layers_main.  0310: transposed_convolution1d          -> ENTRY: output_channels = 3, kernel_size = 3, stride = 1, padding = in_eq_out, output_padding = 0, groups = 1, dilation = 1, use_bias = True, layout = NCW, uid = None
2020-01-04 22:37:11.710268  level_8_layers_main.  0310: transposed_convolution1d          <- EXIT : {'uid': None, 'name': 'transposed_convolution1d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}}
2020-01-04 22:37:11.710412  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'transposed_convolution1d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:37:11.710518  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:11.853711  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:11.853907  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:11.853993  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:11.854057  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:11.854111  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:11.854706  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:11.854756  common.py             0083: save                              <- EXIT
2020-01-04 22:37:11.854807  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:11.854865  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:11.854904  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.854941  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:11.854978  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:11.855014  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:11.855099  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:11.855139  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:11.855307  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:11.855351  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:11.855408  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'transposed_convolution1d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}}
2020-01-04 22:37:11.855512  layers.py             0370: custom_model_layer_transposed_co  -> ENTRY: params = {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCW'}
2020-01-04 22:37:11.856230  layers.py             0370: custom_model_layer_transposed_co  <- EXIT : ---
2020-01-04 22:37:11.856316  layers.py             0206: custom_model_get_layer            <- EXIT : Conv1DTranspose(3 -> 0, kernel_size=(3,), stride=(1,), padding=(1,))
2020-01-04 22:37:11.856394  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:11.856441  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:37:11.856495  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:37:11.857374  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:12.176539  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:12.176644  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:12.246935  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:12.247111  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:12.247169  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.247210  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:12.247376  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:12.247496  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:12.247570  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.247610  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:37:12.247653  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.247689  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:37:12.247735  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.247770  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:12.247801  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.247834  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:12.247875  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:12.250068  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250182  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250241  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250294  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250386  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250455  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250505  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:12.250557  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250611  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250661  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250705  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250752  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250801  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250847  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250892  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250939  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.250984  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:12.251097  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:12.251668  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:12.251732  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.251769  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:12.251810  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.251862  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:12.251892  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:12.251918  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:12.251944  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252054  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252086  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:12.252112  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:12.252138  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:12.252163  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252188  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252212  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252237  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252263  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252288  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:12.252314  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:12.252352  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:12.252388  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.252422  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:12.252452  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.252478  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:12.252590  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:12.252674  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:12.252731  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:12.252793  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.252832  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:12.252882  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:12.252913  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:12.252961  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:12.253036  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:12.253097  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.253136  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:12.253175  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:12.253211  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:12.253244  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:12.253424  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:12.253467  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:12.253551  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.253589  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:12.253653  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.253690  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:12.253751  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.253783  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:12.253816  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:12.253849  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:12.253884  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:12.253921  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:12.254291  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:12.254373  common.py             0083: save                              <- EXIT
2020-01-04 22:37:12.254420  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:12.254472  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:12.254527  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.254592  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:12.254646  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.254687  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:12.254727  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.254774  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:12.254828  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.254863  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:12.254894  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.254920  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:12.255005  level_8_layers_main.  0366: transposed_convolution2d          -> ENTRY: output_channels = 3, kernel_size = 3, stride = 1, padding = in_eq_out, output_padding = 0, groups = 1, dilation = 1, use_bias = True, layout = NCHW, uid = None
2020-01-04 22:37:12.255091  level_8_layers_main.  0366: transposed_convolution2d          <- EXIT : {'uid': None, 'name': 'transposed_convolution2d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:12.255187  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'transposed_convolution2d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:37:12.255289  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:12.324107  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:12.324297  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:12.324382  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:12.324434  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:12.324483  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:12.325016  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:12.325065  common.py             0083: save                              <- EXIT
2020-01-04 22:37:12.325134  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:12.325207  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:12.325245  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.325284  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:12.325320  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.325357  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:12.325446  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:12.325487  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:12.325652  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:12.325690  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:12.325747  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'transposed_convolution2d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}}
2020-01-04 22:37:12.325852  layers.py             0392: custom_model_layer_transposed_co  -> ENTRY: params = {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCHW'}
2020-01-04 22:37:12.326559  layers.py             0392: custom_model_layer_transposed_co  <- EXIT : ---
2020-01-04 22:37:12.326645  layers.py             0206: custom_model_get_layer            <- EXIT : Conv2DTranspose(3 -> 0, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
2020-01-04 22:37:12.326727  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:12.326773  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:37:12.326829  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:37:12.327775  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:12.654342  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:12.654461  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:12.723522  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:12.723693  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:12.723752  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.723791  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:12.723960  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:12.724082  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:12.724156  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.724195  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:37:12.724239  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.724275  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:37:12.724314  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.724347  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:12.724377  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.724437  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:12.724497  level_14_master_main  0185: Compile_Network                   <- EXIT
2020-01-04 22:37:12.726680  gluon_prototype.py    0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.726785  level_14_master_main  0011: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.726848  level_13_updates_mai  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.726905  level_12_losses_main  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.726962  level_11_optimizers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727019  level_10_schedulers_  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727068  level_9_transforms_m  0010: __init__                          -> ENTRY: ---
2020-01-04 22:37:12.727122  level_8_layers_main.  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727178  level_7_aux_main.py   0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727228  level_6_params_main.  0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727284  level_5_state_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727333  level_4_evaluation_b  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727384  level_3_training_bas  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727430  level_2_model_base.p  0012: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727478  level_1_dataset_base  0010: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727526  base_class.py         0013: __init__                          -> ENTRY: verbose = 0
2020-01-04 22:37:12.727570  base_system_state.py  0005: get_base_system_dict              -> ENTRY
2020-01-04 22:37:12.727683  base_system_state.py  0005: get_base_system_dict              <- EXIT : {'verbose': 1, 'cwd': False, 'master_systems_dir': False, 'master_systems_dir_relative': False, 'project_name': False, 'project_dir': False, 'project_dir_relative': False, 'experiment_name': False, 'experiment_dir': False, 'experiment_dir_relative': False, 'origin': False, 'master_comparison_dir': False, 'master_comparison_dir_relative': False, 'library': False, 'output_dir': False, 'output_dir_relative': False, 'model_dir': False, 'model_dir_relative': False, 'log_dir': False, 'log_dir_relative': False, 'fname': False, 'fname_relative': False, 'dataset': {'dataset_type': False, 'label_type': False, 'train_path': False, 'val_path': False, 'csv_train': False, 'csv_val': False, 'test_path': False, 'csv_test': False, 'params': {'input_size': False, 'data_shape': False, 'batch_size': False, 'train_shuffle': False, 'num_workers': False, 'weighted_sample': False, 'num_classes': False, 'classes': False, 'num_train_images': False, 'num_val_images': False, 'num_test_images': False, 'delimiter': ',', 'test_delimiter': ',', 'dataset_test_type': False, 'train_val_split': 0.9}, 'transforms': {'train': [], 'val': [], 'test': []}, 'status': False}, 'model': {'status': False, 'final_layer': False, 'type': 'pretrained', 'custom_network': [], 'params': {'model_name': False, 'model_path': False, 'use_gpu': False, 'use_pretrained': False, 'freeze_base_network': False, 'num_layers': False, 'num_params_to_update': False, 'num_freeze': False, 'gpu_memory_fraction': 0.6}}, 'custom_model': {'status': False, 'network_stack': [], 'network_initializer': False}, 'hyper-parameters': {'status': False, 'learning_rate': False, 'num_epochs': False, 'optimizer': {'name': False, 'params': {}}, 'learning_rate_scheduler': {'name': False, 'params': {}}, 'loss': {'name': False, 'params': {}}}, 'training': {'settings': {'display_progress_realtime': False, 'display_progress': False, 'save_intermediate_models': False, 'save_training_logs': False, 'intermediate_model_prefix': False}, 'outputs': {'max_gpu_memory_usage': 0, 'best_val_acc': 0, 'best_val_acc_epoch_num': 0, 'epochs_completed': 0}, 'status': False}, 'testing': {'status': False, 'num_images': False, 'num_correct_predictions': False, 'percentage_accuracy': False, 'class_accuracy': False}, 'states': {'eval_infer': False, 'resume_train': False, 'copy_from': False, 'pseudo_copy_from': False}, 'local': {'projects_list': [], 'num_projects': False, 'experiments_list': [], 'num_experiments': False, 'project_experiment_list': [], 'transforms_train': [], 'transforms_val': [], 'transforms_test': [], 'normalize': False, 'mean_subtract': False, 'applied_train_tensor': False, 'applied_test_tensor': False, 'data_transforms': {}, 'image_datasets': {}, 'data_loaders': {}, 'data_generators': {}, 'model': False, 'custom_model': False, 'ctx': False, 'params_to_update': [], 'device': False, 'learning_rate_scheduler': False, 'optimizer': False, 'criterion': False}}
2020-01-04 22:37:12.728254  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/
2020-01-04 22:37:12.728319  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.728358  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/comparison/
2020-01-04 22:37:12.728406  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.728461  base_class.py         0013: __init__                          <- EXIT
2020-01-04 22:37:12.728492  level_1_dataset_base  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728519  level_2_model_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:12.728546  level_3_training_bas  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728572  level_4_evaluation_b  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728598  level_5_state_base.p  0012: __init__                          <- EXIT
2020-01-04 22:37:12.728624  level_6_params_main.  0013: __init__                          <- EXIT
2020-01-04 22:37:12.728650  level_7_aux_main.py   0012: __init__                          <- EXIT
2020-01-04 22:37:12.728676  level_8_layers_main.  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728702  level_9_transforms_m  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728728  level_10_schedulers_  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728754  level_11_optimizers_  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728779  level_12_losses_main  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728806  level_13_updates_mai  0010: __init__                          <- EXIT
2020-01-04 22:37:12.728832  level_14_master_main  0011: __init__                          <- EXIT
2020-01-04 22:37:12.728871  base_class.py         0137: custom_print                      -> ENTRY: msg = Mxnet Version: 1.5.1
2020-01-04 22:37:12.728909  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.728944  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:12.728975  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.729001  gluon_prototype.py    0011: __init__                          <- EXIT
2020-01-04 22:37:12.729116  gluon_prototype.py    0023: Prototype                         -> ENTRY: project_name = sample-project-1, experiment_name = sample-experiment-1, eval_infer = False, resume_train = False, copy_from = False, pseudo_copy_from = False, summary = False
2020-01-04 22:37:12.729204  base_class.py         0037: set_system_project                -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:12.729258  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/
2020-01-04 22:37:12.729320  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.729359  base_class.py         0049: set_system_select_project         -> ENTRY: project_name = sample-project-1
2020-01-04 22:37:12.729411  base_class.py         0049: set_system_select_project         <- EXIT
2020-01-04 22:37:12.729442  base_class.py         0037: set_system_project                <- EXIT
2020-01-04 22:37:12.729491  base_class.py         0067: set_system_experiment             -> ENTRY: experiment_name = sample-experiment-1, eval_infer = False, copy_from = False, pseudo_copy_from = False, resume_train = False, summary = False
2020-01-04 22:37:12.729567  common.py             0105: create_dir                        -> ENTRY: dir_path = /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:12.729630  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.729670  base_class.py         0097: set_system_select_experiment      -> ENTRY: experiment_name = sample-experiment-1
2020-01-04 22:37:12.729713  base_class.py         0097: set_system_select_experiment      <- EXIT
2020-01-04 22:37:12.729753  base_class.py         0114: set_system_delete_create_dir      -> ENTRY
2020-01-04 22:37:12.729786  common.py             0111: delete_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:12.729969  common.py             0111: delete_dir                        <- EXIT
2020-01-04 22:37:12.730013  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/
2020-01-04 22:37:12.730098  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.730137  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/models/
2020-01-04 22:37:12.730203  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.730240  common.py             0105: create_dir                        -> ENTRY: dir_path = workspace/sample-project-1/sample-experiment-1/output/logs/
2020-01-04 22:37:12.730302  common.py             0105: create_dir                        <- EXIT
2020-01-04 22:37:12.730358  base_class.py         0114: set_system_delete_create_dir      <- EXIT
2020-01-04 22:37:12.730395  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:12.730430  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:12.730479  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:12.730517  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:12.730895  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:12.730943  common.py             0083: save                              <- EXIT
2020-01-04 22:37:12.730977  base_class.py         0067: set_system_experiment             <- EXIT
2020-01-04 22:37:12.731017  base_class.py         0137: custom_print                      -> ENTRY: msg = Experiment Details
2020-01-04 22:37:12.731055  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.731091  base_class.py         0137: custom_print                      -> ENTRY: msg =     Project: sample-project-1
2020-01-04 22:37:12.731129  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.731164  base_class.py         0137: custom_print                      -> ENTRY: msg =     Experiment: sample-experiment-1
2020-01-04 22:37:12.731202  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.731237  base_class.py         0137: custom_print                      -> ENTRY: msg =     Dir: /home/abhi/Desktop/Work/tess_tool/gui/v0.3/finetune_models/Organization/development/v4.8_without_multi_label_input_updated_gluon/monk/system_unit_tests/gluon/workspace/sample-project-1/sample-experiment-1/
2020-01-04 22:37:12.731292  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.731327  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:12.731358  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.731386  gluon_prototype.py    0023: Prototype                         <- EXIT
2020-01-04 22:37:12.731470  level_8_layers_main.  0395: transposed_convolution3d          -> ENTRY: output_channels = 3, kernel_size = 3, stride = 1, padding = in_eq_out, output_padding = 0, groups = 1, dilation = 1, use_bias = True, layout = NCDHW, uid = None
2020-01-04 22:37:12.731556  level_8_layers_main.  0395: transposed_convolution3d          <- EXIT : {'uid': None, 'name': 'transposed_convolution3d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}}
2020-01-04 22:37:12.731661  level_14_master_main  0185: Compile_Network                   -> ENTRY: network = [{'uid': None, 'name': 'transposed_convolution3d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}}], data_shape = (3, 224, 224), use_gpu = False, network_initializer = xavier_normal
2020-01-04 22:37:12.731770  params.py             0017: set_device                        -> ENTRY: ---
2020-01-04 22:37:12.800818  params.py             0017: set_device                        <- EXIT : ---
2020-01-04 22:37:12.801008  common.py             0083: save                              -> ENTRY: ---
2020-01-04 22:37:12.801092  base_system_state.py  0182: update_local_var                  -> ENTRY: ---
2020-01-04 22:37:12.801152  base_system_state.py  0182: update_local_var                  <- EXIT : ---
2020-01-04 22:37:12.801198  common.py             0017: write_json                        -> ENTRY: ---
2020-01-04 22:37:12.802394  common.py             0017: write_json                        <- EXIT
2020-01-04 22:37:12.802448  common.py             0083: save                              <- EXIT
2020-01-04 22:37:12.802503  level_2_model_base.p  0018: set_model_final                   -> ENTRY: path = False
2020-01-04 22:37:12.802561  base_class.py         0137: custom_print                      -> ENTRY: msg = Model Details
2020-01-04 22:37:12.802601  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.802639  base_class.py         0137: custom_print                      -> ENTRY: msg =     Loading pretrained model
2020-01-04 22:37:12.802676  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:12.802713  return_model.py       0038: setup_model                       -> ENTRY: ---
2020-01-04 22:37:12.802800  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:12.802840  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:12.802997  common.py             0205: get_layer_uid                     -> ENTRY: ---
2020-01-04 22:37:12.803035  common.py             0205: get_layer_uid                     <- EXIT : ---
2020-01-04 22:37:12.803091  layers.py             0206: custom_model_get_layer            -> ENTRY: network_layer = {'uid': None, 'name': 'transposed_convolution3d', 'params': {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}}
2020-01-04 22:37:12.803190  layers.py             0415: custom_model_layer_transposed_co  -> ENTRY: params = {'output_channels': 3, 'kernel_size': 3, 'stride': 1, 'padding': 'in_eq_out', 'output_padding': 0, 'groups': 1, 'dilation': 1, 'use_bias': True, 'layout': 'NCDHW'}
2020-01-04 22:37:12.803891  layers.py             0415: custom_model_layer_transposed_co  <- EXIT : ---
2020-01-04 22:37:12.803976  layers.py             0206: custom_model_get_layer            <- EXIT : Conv3DTranspose(3 -> 0, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
2020-01-04 22:37:12.804061  initializers.py       0004: initialize_network                -> ENTRY: ---
2020-01-04 22:37:12.804106  initializers.py       0025: initializer_xavier_normal         -> ENTRY
2020-01-04 22:37:12.804162  initializers.py       0025: initializer_xavier_normal         <- EXIT : ---
2020-01-04 22:37:12.805093  initializers.py       0004: initialize_network                <- EXIT : ---
2020-01-04 22:37:13.124231  return_model.py       0038: setup_model                       <- EXIT : ---
2020-01-04 22:37:13.124355  common.py             0074: model_to_device                   -> ENTRY: ---
2020-01-04 22:37:13.193835  common.py             0074: model_to_device                   <- EXIT : ---
2020-01-04 22:37:13.194016  base_class.py         0137: custom_print                      -> ENTRY: msg =     Model Loaded on device
2020-01-04 22:37:13.194076  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:13.194153  common.py             0104: get_num_layers                    -> ENTRY: ---
2020-01-04 22:37:13.194355  common.py             0104: get_num_layers                    <- EXIT : ---
2020-01-04 22:37:13.194503  base_class.py         0137: custom_print                      -> ENTRY: msg =         Model name:                           Custom Model
2020-01-04 22:37:13.194580  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:13.194621  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of potentially trainable layers:  1
2020-01-04 22:37:13.194667  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:13.194704  base_class.py         0137: custom_print                      -> ENTRY: msg =         Num of actual trainable layers:       1
2020-01-04 22:37:13.194745  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:13.194781  base_class.py         0137: custom_print                      -> ENTRY: msg =
2020-01-04 22:37:13.194812  base_class.py         0137: custom_print                      <- EXIT
2020-01-04 22:37:13.194847  level_2_model_base.p  0018: set_model_final                   <- EXIT
2020-01-04 22:37:13.194890  level_14_master_main  0185: Compile_Network                   <- EXIT
